{
  "id": "05ffa70d80a9cea0b3084e46313f17d2",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/TipJar.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/**\r\n * @title TipJar\r\n * @dev A simple, elegant contract that allows anyone to send a tip (in CELO)\r\n * to the owner, along with a public message. It demonstrates handling payments,\r\n * storing data, and secure ownership patterns.\r\n *\r\n * Features:\r\n * - Anyone can send a tip with a message.\r\n * - All tips are stored on-chain for a transparent history.\r\n * - The contract owner can withdraw the entire balance.\r\n * - Events are emitted for new tips and withdrawals.\r\n */\r\ncontract TipJar is Ownable {\r\n    /**\r\n     * @dev A struct to hold all information about a single tip.\r\n     */\r\n    struct Tip {\r\n        address sender; // The address of the person who sent the tip\r\n        uint256 amount; // The amount of CELO sent\r\n        string message; // The message they included\r\n        uint256 timestamp; // The block timestamp when the tip was sent\r\n    }\r\n\r\n    // An array to store all tips received by the contract\r\n    Tip[] private s_tips;\r\n\r\n    // The total amount of CELO ever tipped to this contract\r\n    uint256 public totalTipped;\r\n\r\n    /**\r\n     * @dev Emitted when a new tip is successfully sent to the contract.\r\n     * @param sender The address of the tipper.\r\n     * @param amount The amount of CELO tipped.\r\n     * @param message The message included with the tip.\r\n     */\r\n    event TipReceived(address indexed sender, uint256 amount, string message);\r\n\r\n    /**\r\n     * @dev Emitted when the owner successfully withdraws funds.\r\n     * @param amount The total amount of CELO withdrawn.\r\n     * @param recipient The address the funds were sent to (the owner).\r\n     */\r\n    event Withdrawn(uint256 amount, address indexed recipient);\r\n\r\n    /**\r\n     * @dev Sets the initial owner of the contract.\r\n     * The deployer of the contract will be the initial owner.\r\n     */\r\n    constructor(address initialOwner) Ownable(initialOwner) {}\r\n\r\n    /**\r\n     * @notice Sends a tip to the contract owner.\r\n     * @dev This function is payable, meaning it can receive CELO.\r\n     * The sender must send a value greater than 0.\r\n     * @param _message A public message to accompany the tip.\r\n     */\r\n    function sendTip(string memory _message) external payable {\r\n        require(msg.value > 0, \"TipJar: Tip amount must be greater than zero.\");\r\n\r\n        s_tips.push(Tip({\r\n            sender: msg.sender,\r\n            amount: msg.value,\r\n            message: _message,\r\n            timestamp: block.timestamp\r\n        }));\r\n\r\n        totalTipped += msg.value;\r\n\r\n        emit TipReceived(msg.sender, msg.value, _message);\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraws the entire balance of the contract to the owner.\r\n     * @dev Can only be called by the contract owner.\r\n     * This is a protective measure to ensure funds are secure.\r\n     */\r\n    function withdraw() external onlyOwner {\r\n        uint256 balance = address(this).balance;\r\n        require(balance > 0, \"TipJar: No funds to withdraw.\");\r\n\r\n        (bool success, ) = owner().call{value: balance}(\"\");\r\n        require(success, \"TipJar: Withdrawal failed.\");\r\n\r\n        emit Withdrawn(balance, owner());\r\n    }\r\n\r\n    /**\r\n     * @notice Gets the total number of tips received.\r\n     * @return The total count of tips.\r\n     */\r\n    function getTipCount() external view returns (uint256) {\r\n        return s_tips.length;\r\n    }\r\n\r\n    /**\r\n     * @notice Retrieves the most recent tips.\r\n     * @param _count The number of recent tips to fetch.\r\n     * @return An array of Tip structs.\r\n     */\r\n    function getLatestTips(uint256 _count) external view returns (Tip[] memory) {\r\n        uint256 totalTips = s_tips.length;\r\n        uint256 count = _count > totalTips ? totalTips : _count;\r\n        \r\n        Tip[] memory latestTips = new Tip[](count);\r\n        \r\n        for (uint256 i = 0; i < count; i++) {\r\n            latestTips[i] = s_tips[totalTips - 1 - i];\r\n        }\r\n        \r\n        return latestTips;\r\n    }\r\n\r\n    /**\r\n     * @notice Gets the entire contract's current CELO balance.\r\n     * @return The balance in wei.\r\n     */\r\n    function getContractBalance() external view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              177
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 178,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 177,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 177,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                177
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 159,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              177
            ]
          },
          "id": 178,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:1"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:1",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 177,
              "linearizedBaseContracts": [
                177
              ],
              "name": "Context",
              "nameLocation": "642:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 158,
                    "nodeType": "Block",
                    "src": "718:34:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 155,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 154,
                        "id": 157,
                        "nodeType": "Return",
                        "src": "728:17:1"
                      }
                    ]
                  },
                  "id": 159,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:1"
                  },
                  "returnParameters": {
                    "id": 154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "709:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:1"
                  },
                  "scope": 177,
                  "src": "656:96:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "825:32:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 164,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:1",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 163,
                        "id": 166,
                        "nodeType": "Return",
                        "src": "835:15:1"
                      }
                    ]
                  },
                  "id": 168,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:1"
                  },
                  "returnParameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "809:14:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:1"
                  },
                  "scope": 177,
                  "src": "758:99:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 175,
                    "nodeType": "Block",
                    "src": "935:25:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 172,
                        "id": 174,
                        "nodeType": "Return",
                        "src": "945:8:1"
                      }
                    ]
                  },
                  "id": 176,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:1"
                  },
                  "returnParameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "926:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:1"
                  },
                  "scope": 177,
                  "src": "863:97:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 178,
              "src": "624:338:1",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:1"
        },
        "id": 1
      },
      "contracts/TipJar.sol": {
        "ast": {
          "absolutePath": "contracts/TipJar.sol",
          "exportedSymbols": {
            "Context": [
              177
            ],
            "Ownable": [
              147
            ],
            "TipJar": [
              397
            ]
          },
          "id": 398,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 179,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 180,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 398,
              "sourceUnit": 148,
              "src": "61:52:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 182,
                    "name": "Ownable",
                    "nameLocations": [
                      "611:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "611:7:2"
                  },
                  "id": 183,
                  "nodeType": "InheritanceSpecifier",
                  "src": "611:7:2"
                }
              ],
              "canonicalName": "TipJar",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 181,
                "nodeType": "StructuredDocumentation",
                "src": "117:473:2",
                "text": " @title TipJar\n @dev A simple, elegant contract that allows anyone to send a tip (in CELO)\n to the owner, along with a public message. It demonstrates handling payments,\n storing data, and secure ownership patterns.\n Features:\n - Anyone can send a tip with a message.\n - All tips are stored on-chain for a transparent history.\n - The contract owner can withdraw the entire balance.\n - Events are emitted for new tips and withdrawals."
              },
              "fullyImplemented": true,
              "id": 397,
              "linearizedBaseContracts": [
                397,
                147,
                177
              ],
              "name": "TipJar",
              "nameLocation": "601:6:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "TipJar.Tip",
                  "documentation": {
                    "id": 184,
                    "nodeType": "StructuredDocumentation",
                    "src": "626:78:2",
                    "text": " @dev A struct to hold all information about a single tip."
                  },
                  "id": 193,
                  "members": [
                    {
                      "constant": false,
                      "id": 186,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "740:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 193,
                      "src": "732:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "732:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 188,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "811:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 193,
                      "src": "803:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 187,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "803:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 190,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "862:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 193,
                      "src": "855:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 189,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "855:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 192,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "917:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 193,
                      "src": "909:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 191,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "909:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Tip",
                  "nameLocation": "717:3:2",
                  "nodeType": "StructDefinition",
                  "scope": 397,
                  "src": "710:269:2",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "s_tips",
                  "nameLocation": "1061:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "1047:20:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Tip_$193_storage_$dyn_storage",
                    "typeString": "struct TipJar.Tip[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 195,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 194,
                        "name": "Tip",
                        "nameLocations": [
                          "1047:3:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 193,
                        "src": "1047:3:2"
                      },
                      "referencedDeclaration": 193,
                      "src": "1047:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tip_$193_storage_ptr",
                        "typeString": "struct TipJar.Tip"
                      }
                    },
                    "id": 196,
                    "nodeType": "ArrayTypeName",
                    "src": "1047:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Tip_$193_storage_$dyn_storage_ptr",
                      "typeString": "struct TipJar.Tip[]"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "b814b7ed",
                  "id": 199,
                  "mutability": "mutable",
                  "name": "totalTipped",
                  "nameLocation": "1153:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "1138:26:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 200,
                    "nodeType": "StructuredDocumentation",
                    "src": "1173:242:2",
                    "text": " @dev Emitted when a new tip is successfully sent to the contract.\n @param sender The address of the tipper.\n @param amount The amount of CELO tipped.\n @param message The message included with the tip."
                  },
                  "eventSelector": "8d379bddc159e67937283b53edd0858bdd6f8ba659d7bc286617c5afdb4f4780",
                  "id": 208,
                  "name": "TipReceived",
                  "nameLocation": "1427:11:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 202,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1455:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "1439:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1439:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 204,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1471:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "1463:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1463:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 206,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "1486:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "1479:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 205,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1479:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1438:56:2"
                  },
                  "src": "1421:74:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 209,
                    "nodeType": "StructuredDocumentation",
                    "src": "1503:209:2",
                    "text": " @dev Emitted when the owner successfully withdraws funds.\n @param amount The total amount of CELO withdrawn.\n @param recipient The address the funds were sent to (the owner)."
                  },
                  "eventSelector": "8c7cdad0d12a8db3e23561b42da6f10c8137914c97beff202213a410e1f520a3",
                  "id": 215,
                  "name": "Withdrawn",
                  "nameLocation": "1724:9:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 211,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1742:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "1734:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1734:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 213,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "1766:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "1750:25:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1750:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1733:43:2"
                  },
                  "src": "1718:59:2"
                },
                {
                  "body": {
                    "id": 224,
                    "nodeType": "Block",
                    "src": "1976:2:2",
                    "statements": []
                  },
                  "documentation": {
                    "id": 216,
                    "nodeType": "StructuredDocumentation",
                    "src": "1785:129:2",
                    "text": " @dev Sets the initial owner of the contract.\n The deployer of the contract will be the initial owner."
                  },
                  "id": 225,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 221,
                          "name": "initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 218,
                          "src": "1962:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 222,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 220,
                        "name": "Ownable",
                        "nameLocations": [
                          "1954:7:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1954:7:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1954:21:2"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 218,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1940:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "1932:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 217,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1932:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1931:22:2"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1976:0:2"
                  },
                  "scope": 397,
                  "src": "1920:58:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 266,
                    "nodeType": "Block",
                    "src": "2297:369:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 232,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2316:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2320:5:2",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2316:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2328:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2316:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5469704a61723a2054697020616d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2331:47:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b0473f6fcf7310001030c1311e554b6d0cba7f5cdaea6b5e97933a4982d478ad",
                                "typeString": "literal_string \"TipJar: Tip amount must be greater than zero.\""
                              },
                              "value": "TipJar: Tip amount must be greater than zero."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b0473f6fcf7310001030c1311e554b6d0cba7f5cdaea6b5e97933a4982d478ad",
                                "typeString": "literal_string \"TipJar: Tip amount must be greater than zero.\""
                              }
                            ],
                            "id": 231,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2308:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2308:71:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 238,
                        "nodeType": "ExpressionStatement",
                        "src": "2308:71:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 243,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2431:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 244,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2435:6:2",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2431:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 245,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2464:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 246,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2468:5:2",
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "2464:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 247,
                                  "name": "_message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 228,
                                  "src": "2497:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 248,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "2531:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 249,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2537:9:2",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "2531:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 242,
                                "name": "Tip",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 193,
                                "src": "2404:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Tip_$193_storage_ptr_$",
                                  "typeString": "type(struct TipJar.Tip storage pointer)"
                                }
                              },
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "2423:6:2",
                                "2456:6:2",
                                "2488:7:2",
                                "2520:9:2"
                              ],
                              "names": [
                                "sender",
                                "amount",
                                "message",
                                "timestamp"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "2404:154:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Tip_$193_memory_ptr",
                                "typeString": "struct TipJar.Tip memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Tip_$193_memory_ptr",
                                "typeString": "struct TipJar.Tip memory"
                              }
                            ],
                            "expression": {
                              "id": 239,
                              "name": "s_tips",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 197,
                              "src": "2392:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Tip_$193_storage_$dyn_storage",
                                "typeString": "struct TipJar.Tip storage ref[] storage ref"
                              }
                            },
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2399:4:2",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2392:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Tip_$193_storage_$dyn_storage_ptr_$_t_struct$_Tip_$193_storage_$returns$__$attached_to$_t_array$_t_struct$_Tip_$193_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct TipJar.Tip storage ref[] storage pointer,struct TipJar.Tip storage ref)"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2392:167:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 252,
                        "nodeType": "ExpressionStatement",
                        "src": "2392:167:2"
                      },
                      {
                        "expression": {
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 253,
                            "name": "totalTipped",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "2572:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 254,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2587:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2591:5:2",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2587:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2572:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 257,
                        "nodeType": "ExpressionStatement",
                        "src": "2572:24:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 259,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2626:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2630:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2626:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 261,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2638:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2642:5:2",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "2638:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 263,
                              "name": "_message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 228,
                              "src": "2649:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 258,
                            "name": "TipReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 208,
                            "src": "2614:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,string memory)"
                            }
                          },
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2614:44:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 265,
                        "nodeType": "EmitStatement",
                        "src": "2609:49:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 226,
                    "nodeType": "StructuredDocumentation",
                    "src": "1986:247:2",
                    "text": " @notice Sends a tip to the contract owner.\n @dev This function is payable, meaning it can receive CELO.\n The sender must send a value greater than 0.\n @param _message A public message to accompany the tip."
                  },
                  "functionSelector": "7f5154b4",
                  "id": 267,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendTip",
                  "nameLocation": "2248:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 228,
                        "mutability": "mutable",
                        "name": "_message",
                        "nameLocation": "2270:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 267,
                        "src": "2256:22:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 227,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2256:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2255:24:2"
                  },
                  "returnParameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2297:0:2"
                  },
                  "scope": 397,
                  "src": "2239:427:2",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 309,
                    "nodeType": "Block",
                    "src": "2926:288:2",
                    "statements": [
                      {
                        "assignments": [
                          274
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 274,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "2945:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 309,
                            "src": "2937:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 273,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2937:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 280,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 277,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2963:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TipJar_$397",
                                  "typeString": "contract TipJar"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TipJar_$397",
                                  "typeString": "contract TipJar"
                                }
                              ],
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2955:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 275,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2955:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2955:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2969:7:2",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2955:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2937:39:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 282,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 274,
                                "src": "2995:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3005:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2995:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5469704a61723a204e6f2066756e647320746f2077697468647261772e",
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3008:31:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_79948846ea3ee84b78cea0f3486f13178c7e393f4cc096c0108c7df97709e552",
                                "typeString": "literal_string \"TipJar: No funds to withdraw.\""
                              },
                              "value": "TipJar: No funds to withdraw."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_79948846ea3ee84b78cea0f3486f13178c7e393f4cc096c0108c7df97709e552",
                                "typeString": "literal_string \"TipJar: No funds to withdraw.\""
                              }
                            ],
                            "id": 281,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2987:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2987:53:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 287,
                        "nodeType": "ExpressionStatement",
                        "src": "2987:53:2"
                      },
                      {
                        "assignments": [
                          289,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 289,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3059:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 309,
                            "src": "3054:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 288,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3054:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 297,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3101:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 290,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "3072:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3072:7:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3080:4:2",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "3072:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 293,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 274,
                                "src": "3092:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "3072:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3072:32:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3053:51:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 299,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 289,
                              "src": "3123:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5469704a61723a205769746864726177616c206661696c65642e",
                              "id": 300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3132:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e104baf1f24e7b61bcaca99c02fa04dcb2ef1562c5cb894b0b86f10cee6b18ac",
                                "typeString": "literal_string \"TipJar: Withdrawal failed.\""
                              },
                              "value": "TipJar: Withdrawal failed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e104baf1f24e7b61bcaca99c02fa04dcb2ef1562c5cb894b0b86f10cee6b18ac",
                                "typeString": "literal_string \"TipJar: Withdrawal failed.\""
                              }
                            ],
                            "id": 298,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3115:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3115:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 302,
                        "nodeType": "ExpressionStatement",
                        "src": "3115:46:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 304,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 274,
                              "src": "3189:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 305,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "3198:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3198:7:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 303,
                            "name": "Withdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "3179:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3179:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 308,
                        "nodeType": "EmitStatement",
                        "src": "3174:32:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 268,
                    "nodeType": "StructuredDocumentation",
                    "src": "2674:207:2",
                    "text": " @notice Withdraws the entire balance of the contract to the owner.\n @dev Can only be called by the contract owner.\n This is a protective measure to ensure funds are secure."
                  },
                  "functionSelector": "3ccfd60b",
                  "id": 310,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 271,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 270,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2916:9:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2916:9:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2916:9:2"
                    }
                  ],
                  "name": "withdraw",
                  "nameLocation": "2896:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 269,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2904:2:2"
                  },
                  "returnParameters": {
                    "id": 272,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:2"
                  },
                  "scope": 397,
                  "src": "2887:327:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 319,
                    "nodeType": "Block",
                    "src": "3392:39:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 316,
                            "name": "s_tips",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "3410:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Tip_$193_storage_$dyn_storage",
                              "typeString": "struct TipJar.Tip storage ref[] storage ref"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3417:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3410:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 315,
                        "id": 318,
                        "nodeType": "Return",
                        "src": "3403:20:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 311,
                    "nodeType": "StructuredDocumentation",
                    "src": "3222:109:2",
                    "text": " @notice Gets the total number of tips received.\n @return The total count of tips."
                  },
                  "functionSelector": "7dc1a64f",
                  "id": 320,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTipCount",
                  "nameLocation": "3346:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 312,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3357:2:2"
                  },
                  "returnParameters": {
                    "id": 315,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 314,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "3383:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 313,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3383:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3382:9:2"
                  },
                  "scope": 397,
                  "src": "3337:94:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 382,
                    "nodeType": "Block",
                    "src": "3680:343:2",
                    "statements": [
                      {
                        "assignments": [
                          331
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 331,
                            "mutability": "mutable",
                            "name": "totalTips",
                            "nameLocation": "3699:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 382,
                            "src": "3691:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 330,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3691:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 334,
                        "initialValue": {
                          "expression": {
                            "id": 332,
                            "name": "s_tips",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "3711:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Tip_$193_storage_$dyn_storage",
                              "typeString": "struct TipJar.Tip storage ref[] storage ref"
                            }
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3718:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3711:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3691:33:2"
                      },
                      {
                        "assignments": [
                          336
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 336,
                            "mutability": "mutable",
                            "name": "count",
                            "nameLocation": "3743:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 382,
                            "src": "3735:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 335,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3735:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 343,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 337,
                              "name": "_count",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 323,
                              "src": "3751:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 338,
                              "name": "totalTips",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 331,
                              "src": "3760:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3751:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 341,
                            "name": "_count",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "3784:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "3751:39:2",
                          "trueExpression": {
                            "id": 340,
                            "name": "totalTips",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "3772:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3735:55:2"
                      },
                      {
                        "assignments": [
                          348
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 348,
                            "mutability": "mutable",
                            "name": "latestTips",
                            "nameLocation": "3824:10:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 382,
                            "src": "3811:23:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Tip_$193_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct TipJar.Tip[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 346,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 345,
                                  "name": "Tip",
                                  "nameLocations": [
                                    "3811:3:2"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 193,
                                  "src": "3811:3:2"
                                },
                                "referencedDeclaration": 193,
                                "src": "3811:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Tip_$193_storage_ptr",
                                  "typeString": "struct TipJar.Tip"
                                }
                              },
                              "id": 347,
                              "nodeType": "ArrayTypeName",
                              "src": "3811:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Tip_$193_storage_$dyn_storage_ptr",
                                "typeString": "struct TipJar.Tip[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 355,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 353,
                              "name": "count",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 336,
                              "src": "3847:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3837:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Tip_$193_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct TipJar.Tip memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 350,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 349,
                                  "name": "Tip",
                                  "nameLocations": [
                                    "3841:3:2"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 193,
                                  "src": "3841:3:2"
                                },
                                "referencedDeclaration": 193,
                                "src": "3841:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Tip_$193_storage_ptr",
                                  "typeString": "struct TipJar.Tip"
                                }
                              },
                              "id": 351,
                              "nodeType": "ArrayTypeName",
                              "src": "3841:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Tip_$193_storage_$dyn_storage_ptr",
                                "typeString": "struct TipJar.Tip[]"
                              }
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3837:16:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Tip_$193_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct TipJar.Tip memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3811:42:2"
                      },
                      {
                        "body": {
                          "id": 378,
                          "nodeType": "Block",
                          "src": "3910:68:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 366,
                                    "name": "latestTips",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 348,
                                    "src": "3925:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Tip_$193_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct TipJar.Tip memory[] memory"
                                    }
                                  },
                                  "id": 368,
                                  "indexExpression": {
                                    "id": 367,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 357,
                                    "src": "3936:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3925:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Tip_$193_memory_ptr",
                                    "typeString": "struct TipJar.Tip memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 369,
                                    "name": "s_tips",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 197,
                                    "src": "3941:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Tip_$193_storage_$dyn_storage",
                                      "typeString": "struct TipJar.Tip storage ref[] storage ref"
                                    }
                                  },
                                  "id": 375,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 374,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 372,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 370,
                                        "name": "totalTips",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 331,
                                        "src": "3948:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 371,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3960:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "3948:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 373,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 357,
                                      "src": "3964:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3948:17:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3941:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Tip_$193_storage",
                                    "typeString": "struct TipJar.Tip storage ref"
                                  }
                                },
                                "src": "3925:41:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Tip_$193_memory_ptr",
                                  "typeString": "struct TipJar.Tip memory"
                                }
                              },
                              "id": 377,
                              "nodeType": "ExpressionStatement",
                              "src": "3925:41:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 360,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "3894:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 361,
                            "name": "count",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 336,
                            "src": "3898:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3894:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 379,
                        "initializationExpression": {
                          "assignments": [
                            357
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 357,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3887:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 379,
                              "src": "3879:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 356,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3879:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 359,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3891:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3879:13:2"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3905:3:2",
                            "subExpression": {
                              "id": 363,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "3905:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 365,
                          "nodeType": "ExpressionStatement",
                          "src": "3905:3:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "3874:104:2"
                      },
                      {
                        "expression": {
                          "id": 380,
                          "name": "latestTips",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 348,
                          "src": "4005:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Tip_$193_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct TipJar.Tip memory[] memory"
                          }
                        },
                        "functionReturnParameters": 329,
                        "id": 381,
                        "nodeType": "Return",
                        "src": "3998:17:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 321,
                    "nodeType": "StructuredDocumentation",
                    "src": "3439:159:2",
                    "text": " @notice Retrieves the most recent tips.\n @param _count The number of recent tips to fetch.\n @return An array of Tip structs."
                  },
                  "functionSelector": "523a7b0f",
                  "id": 383,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestTips",
                  "nameLocation": "3613:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 324,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "_count",
                        "nameLocation": "3635:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 383,
                        "src": "3627:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3627:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3626:16:2"
                  },
                  "returnParameters": {
                    "id": 329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 383,
                        "src": "3666:12:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Tip_$193_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct TipJar.Tip[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 326,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 325,
                              "name": "Tip",
                              "nameLocations": [
                                "3666:3:2"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 193,
                              "src": "3666:3:2"
                            },
                            "referencedDeclaration": 193,
                            "src": "3666:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Tip_$193_storage_ptr",
                              "typeString": "struct TipJar.Tip"
                            }
                          },
                          "id": 327,
                          "nodeType": "ArrayTypeName",
                          "src": "3666:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Tip_$193_storage_$dyn_storage_ptr",
                            "typeString": "struct TipJar.Tip[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3665:14:2"
                  },
                  "scope": 397,
                  "src": "3604:419:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 395,
                    "nodeType": "Block",
                    "src": "4212:47:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 391,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4238:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TipJar_$397",
                                  "typeString": "contract TipJar"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TipJar_$397",
                                  "typeString": "contract TipJar"
                                }
                              ],
                              "id": 390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4230:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 389,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4230:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4230:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4244:7:2",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "4230:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 388,
                        "id": 394,
                        "nodeType": "Return",
                        "src": "4223:28:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 384,
                    "nodeType": "StructuredDocumentation",
                    "src": "4031:113:2",
                    "text": " @notice Gets the entire contract's current CELO balance.\n @return The balance in wei."
                  },
                  "functionSelector": "6f9fb98a",
                  "id": 396,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getContractBalance",
                  "nameLocation": "4159:18:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4177:2:2"
                  },
                  "returnParameters": {
                    "id": 388,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 387,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 396,
                        "src": "4203:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 386,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4203:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4202:9:2"
                  },
                  "scope": 397,
                  "src": "4150:109:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 398,
              "src": "592:3670:2",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24,
                208,
                215
              ]
            }
          ],
          "src": "33:4231:2"
        },
        "id": 2
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "contracts/TipJar.sol": {
        "TipJar": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "message",
                  "type": "string"
                }
              ],
              "name": "TipReceived",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "Withdrawn",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "getContractBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_count",
                  "type": "uint256"
                }
              ],
              "name": "getLatestTips",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "message",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct TipJar.Tip[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTipCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_message",
                  "type": "string"
                }
              ],
              "name": "sendTip",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalTipped",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803460bc57601f610ab338819003918201601f19168301916001600160401b0383118484101760c15780849260209460405283398101031260bc57516001600160a01b0381169081900360bc57801560a657600080546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36109db90816100d88239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c80633ccfd60b1461071c578063523a7b0f146104d65780636f9fb98a146104ba578063715018a6146104615780637dc1a64f146104435780637f5154b4146101585780638da5cb5b1461012f578063b814b7ed146101115763f2fde38b1461007f57600080fd5b3461010c57602036600319011261010c576004356001600160a01b0381169081900361010c576100ad61097c565b80156100f657600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b3461010c57600036600319011261010c576020600254604051908152f35b3461010c57600036600319011261010c576000546040516001600160a01b039091168152602090f35b602036600319011261010c5760043567ffffffffffffffff811161010c573660238201121561010c57806004013561018f816108c5565b9161019d60405193846108a3565b818352366024838301011161010c5781600092602460209301838601378301015234156103e8576040516101d081610887565b33815260208101348152604082018381526060830191428352600154680100000000000000008110156103bc5780600161020d92016001556108f9565b9490946103d2575184546001600160a01b0319166001600160a01b0391909116178455516001840155518051600284019167ffffffffffffffff82116103bc576102578354610942565b601f8111610374575b50602090601f831160011461030a57600394939291600091836102ff575b50508160011b9160001990861b1c19161790555b519101556002543481018091116102e9576002557f8d379bddc159e67937283b53edd0858bdd6f8ba659d7bc286617c5afdb4f478060405134815260406020820152806102e433946040830190610846565b0390a2005b634e487b7160e01b600052601160045260246000fd5b01519050878061027e565b90601f1983169184600052816000209260005b81811061035c575091600193918560039897969410610344575b505050811b019055610292565b015160001983881b60f8161c19169055878080610337565b9293602060018192878601518155019501930161031d565b836000526020600020601f840160051c810191602085106103b2575b601f0160051c01905b8181106103a65750610260565b60008155600101610399565b9091508190610390565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b60405162461bcd60e51b815260206004820152602d60248201527f5469704a61723a2054697020616d6f756e74206d75737420626520677265617460448201526c32b9103a3430b7103d32b9379760991b6064820152608490fd5b3461010c57600036600319011261010c576020600154604051908152f35b3461010c57600036600319011261010c5761047a61097c565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461010c57600036600319011261010c57602047604051908152f35b3461010c57602036600319011261010c57600154600435818111156107165750805b610501826108e1565b9161050f60405193846108a3565b808352601f1961051e826108e1565b0160005b8181106106e3575090916000198101915080821160005b8481106105d657856040518091602082016020835281518091526040830190602060408260051b8601019301916000905b82821061057957505050500390f35b919360019193955060208091603f19898203018552875190848060a01b03825116815282820151838201526060806105c06040850151608060408601526080850190610846565b930151910152960192019201859493919261056a565b816102e957808303600019018481116102e9576105f2906108f9565b506040519061060082610887565b80546001600160a01b031682526001810154602083015260405160028201805460009161062c82610942565b80855291600181169081156106bc5750600114610682575b5050918161065a600393600197969503826108a3565b604084015201546060820152610670828961092e565b5261067b818861092e565b5001610539565b6000908152602081209092505b8183106106a657505081016020018161065a610644565b600181602092548386880101520192019161068f565b60ff191660208087019190915292151560051b8501909201925083915061065a9050610644565b6020906040516106f281610887565b60008152600083820152606060408201526000606082015282828801015201610522565b906104f8565b3461010c57600036600319011261010c5761073561097c565b4780156108015760008080808460018060a01b038254165af13d156107fc573d61075e816108c5565b9061076c60405192836108a3565b8152600060203d92013e5b156107b7576000546040519182526001600160a01b0316907f8c7cdad0d12a8db3e23561b42da6f10c8137914c97beff202213a410e1f520a390602090a2005b60405162461bcd60e51b815260206004820152601a60248201527f5469704a61723a205769746864726177616c206661696c65642e0000000000006044820152606490fd5b610777565b60405162461bcd60e51b815260206004820152601d60248201527f5469704a61723a204e6f2066756e647320746f2077697468647261772e0000006044820152606490fd5b919082519283825260005b848110610872575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610851565b6080810190811067ffffffffffffffff8211176103bc57604052565b90601f8019910116810190811067ffffffffffffffff8211176103bc57604052565b67ffffffffffffffff81116103bc57601f01601f191660200190565b67ffffffffffffffff81116103bc5760051b60200190565b60015481101561091857600160005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b80518210156109185760209160051b010190565b90600182811c92168015610972575b602083101461095c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610951565b6000546001600160a01b0316330361099057565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220472e5463f8f6f902948f5dbafdcca05b8fe70b9c0127dacda4d70c0f12b11ecf64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH1 0xBC JUMPI PUSH1 0x1F PUSH2 0xAB3 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xC1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xBC JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xBC JUMPI DUP1 ISZERO PUSH1 0xA6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x9DB SWAP1 DUP2 PUSH2 0xD8 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x71C JUMPI DUP1 PUSH4 0x523A7B0F EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x7DC1A64F EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x7F5154B4 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xB814B7ED EQ PUSH2 0x111 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x10C JUMPI PUSH2 0xAD PUSH2 0x97C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x10C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x10C JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x18F DUP2 PUSH2 0x8C5 JUMP JUMPDEST SWAP2 PUSH2 0x19D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x8A3 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x10C JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE CALLVALUE ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1D0 DUP2 PUSH2 0x887 JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD CALLVALUE DUP2 MSTORE PUSH1 0x40 DUP3 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 TIMESTAMP DUP4 MSTORE PUSH1 0x1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x3BC JUMPI DUP1 PUSH1 0x1 PUSH2 0x20D SWAP3 ADD PUSH1 0x1 SSTORE PUSH2 0x8F9 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0x3D2 JUMPI MLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP5 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3BC JUMPI PUSH2 0x257 DUP4 SLOAD PUSH2 0x942 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x374 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x30A JUMPI PUSH1 0x3 SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x2FF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP7 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD SWAP2 ADD SSTORE PUSH1 0x2 SLOAD CALLVALUE DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2E9 JUMPI PUSH1 0x2 SSTORE PUSH32 0x8D379BDDC159E67937283B53EDD0858BDD6F8BA659D7BC286617C5AFDB4F4780 PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE DUP1 PUSH2 0x2E4 CALLER SWAP5 PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x846 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x27E JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x35C JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0x3 SWAP9 SWAP8 SWAP7 SWAP5 LT PUSH2 0x344 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x292 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x337 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x31D JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x3B2 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x3A6 JUMPI POP PUSH2 0x260 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x399 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469704A61723A2054697020616D6F756E74206D757374206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32B9103A3430B7103D32B93797 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH2 0x47A PUSH2 0x97C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x20 SELFBALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x1 SLOAD PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x716 JUMPI POP DUP1 JUMPDEST PUSH2 0x501 DUP3 PUSH2 0x8E1 JUMP JUMPDEST SWAP2 PUSH2 0x50F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x8A3 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x51E DUP3 PUSH2 0x8E1 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x6E3 JUMPI POP SWAP1 SWAP2 PUSH1 0x0 NOT DUP2 ADD SWAP2 POP DUP1 DUP3 GT PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x5D6 JUMPI DUP6 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x579 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE DUP3 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x60 DUP1 PUSH2 0x5C0 PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x80 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x846 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x56A JUMP JUMPDEST DUP2 PUSH2 0x2E9 JUMPI DUP1 DUP4 SUB PUSH1 0x0 NOT ADD DUP5 DUP2 GT PUSH2 0x2E9 JUMPI PUSH2 0x5F2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH2 0x600 DUP3 PUSH2 0x887 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x62C DUP3 PUSH2 0x942 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x6BC JUMPI POP PUSH1 0x1 EQ PUSH2 0x682 JUMPI JUMPDEST POP POP SWAP2 DUP2 PUSH2 0x65A PUSH1 0x3 SWAP4 PUSH1 0x1 SWAP8 SWAP7 SWAP6 SUB DUP3 PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x670 DUP3 DUP10 PUSH2 0x92E JUMP JUMPDEST MSTORE PUSH2 0x67B DUP2 DUP9 PUSH2 0x92E JUMP JUMPDEST POP ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP1 SWAP3 POP JUMPDEST DUP2 DUP4 LT PUSH2 0x6A6 JUMPI POP POP DUP2 ADD PUSH1 0x20 ADD DUP2 PUSH2 0x65A PUSH2 0x644 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP7 DUP9 ADD ADD MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x68F JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP DUP4 SWAP2 POP PUSH2 0x65A SWAP1 POP PUSH2 0x644 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x6F2 DUP2 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x522 JUMP JUMPDEST SWAP1 PUSH2 0x4F8 JUMP JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH2 0x735 PUSH2 0x97C JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND GAS CALL RETURNDATASIZE ISZERO PUSH2 0x7FC JUMPI RETURNDATASIZE PUSH2 0x75E DUP2 PUSH2 0x8C5 JUMP JUMPDEST SWAP1 PUSH2 0x76C PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x8A3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8C7CDAD0D12A8DB3E23561B42DA6F10C8137914C97BEFF202213A410E1F520A3 SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469704A61723A205769746864726177616C206661696C65642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469704A61723A204E6F2066756E647320746F2077697468647261772E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x872 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x851 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3BC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3BC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3BC JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3BC JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x918 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x918 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x972 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x95C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x990 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0x2E SLOAD PUSH4 0xF8F6F902 SWAP5 DUP16 TSTORE 0xBA REVERT 0xCC LOG0 JUMPDEST DUP16 0xE7 SIGNEXTEND SWAP13 ADD 0x27 0xDA 0xCD LOG4 0xD7 0xC 0xF SLT 0xB1 0x1E 0xCF PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "592:3670:2:-:0;;;;;;;;;;;;;-1:-1:-1;;592:3670:2;;;;-1:-1:-1;;;;;592:3670:2;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;592:3670:2;;;;;;;;1273:26:0;;1269:95;;-1:-1:-1;592:3670:2;;-1:-1:-1;;;;;;592:3670:2;;;;;;;;;;-1:-1:-1;;;;;592:3670:2;;;;3052:40:0;;-1:-1:-1;3052:40:0;592:3670:2;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;592:3670:2;;-1:-1:-1;1322:31:0;592:3670:2;-1:-1:-1;592:3670:2;;;;;;-1:-1:-1;592:3670:2;;;;;-1:-1:-1;592:3670:2"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_encode_string": {
                  "entryPoint": 2118,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_Tip_dyn": {
                  "entryPoint": 2273,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 2245,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 2370,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2211,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_7208": {
                  "entryPoint": 2183,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 2428,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "memory_array_index_access_struct_Tip_dyn": {
                  "entryPoint": 2350,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "storage_array_index_access_struct_Tip__dyn": {
                  "entryPoint": 2297,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c80633ccfd60b1461071c578063523a7b0f146104d65780636f9fb98a146104ba578063715018a6146104615780637dc1a64f146104435780637f5154b4146101585780638da5cb5b1461012f578063b814b7ed146101115763f2fde38b1461007f57600080fd5b3461010c57602036600319011261010c576004356001600160a01b0381169081900361010c576100ad61097c565b80156100f657600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b3461010c57600036600319011261010c576020600254604051908152f35b3461010c57600036600319011261010c576000546040516001600160a01b039091168152602090f35b602036600319011261010c5760043567ffffffffffffffff811161010c573660238201121561010c57806004013561018f816108c5565b9161019d60405193846108a3565b818352366024838301011161010c5781600092602460209301838601378301015234156103e8576040516101d081610887565b33815260208101348152604082018381526060830191428352600154680100000000000000008110156103bc5780600161020d92016001556108f9565b9490946103d2575184546001600160a01b0319166001600160a01b0391909116178455516001840155518051600284019167ffffffffffffffff82116103bc576102578354610942565b601f8111610374575b50602090601f831160011461030a57600394939291600091836102ff575b50508160011b9160001990861b1c19161790555b519101556002543481018091116102e9576002557f8d379bddc159e67937283b53edd0858bdd6f8ba659d7bc286617c5afdb4f478060405134815260406020820152806102e433946040830190610846565b0390a2005b634e487b7160e01b600052601160045260246000fd5b01519050878061027e565b90601f1983169184600052816000209260005b81811061035c575091600193918560039897969410610344575b505050811b019055610292565b015160001983881b60f8161c19169055878080610337565b9293602060018192878601518155019501930161031d565b836000526020600020601f840160051c810191602085106103b2575b601f0160051c01905b8181106103a65750610260565b60008155600101610399565b9091508190610390565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b60405162461bcd60e51b815260206004820152602d60248201527f5469704a61723a2054697020616d6f756e74206d75737420626520677265617460448201526c32b9103a3430b7103d32b9379760991b6064820152608490fd5b3461010c57600036600319011261010c576020600154604051908152f35b3461010c57600036600319011261010c5761047a61097c565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461010c57600036600319011261010c57602047604051908152f35b3461010c57602036600319011261010c57600154600435818111156107165750805b610501826108e1565b9161050f60405193846108a3565b808352601f1961051e826108e1565b0160005b8181106106e3575090916000198101915080821160005b8481106105d657856040518091602082016020835281518091526040830190602060408260051b8601019301916000905b82821061057957505050500390f35b919360019193955060208091603f19898203018552875190848060a01b03825116815282820151838201526060806105c06040850151608060408601526080850190610846565b930151910152960192019201859493919261056a565b816102e957808303600019018481116102e9576105f2906108f9565b506040519061060082610887565b80546001600160a01b031682526001810154602083015260405160028201805460009161062c82610942565b80855291600181169081156106bc5750600114610682575b5050918161065a600393600197969503826108a3565b604084015201546060820152610670828961092e565b5261067b818861092e565b5001610539565b6000908152602081209092505b8183106106a657505081016020018161065a610644565b600181602092548386880101520192019161068f565b60ff191660208087019190915292151560051b8501909201925083915061065a9050610644565b6020906040516106f281610887565b60008152600083820152606060408201526000606082015282828801015201610522565b906104f8565b3461010c57600036600319011261010c5761073561097c565b4780156108015760008080808460018060a01b038254165af13d156107fc573d61075e816108c5565b9061076c60405192836108a3565b8152600060203d92013e5b156107b7576000546040519182526001600160a01b0316907f8c7cdad0d12a8db3e23561b42da6f10c8137914c97beff202213a410e1f520a390602090a2005b60405162461bcd60e51b815260206004820152601a60248201527f5469704a61723a205769746864726177616c206661696c65642e0000000000006044820152606490fd5b610777565b60405162461bcd60e51b815260206004820152601d60248201527f5469704a61723a204e6f2066756e647320746f2077697468647261772e0000006044820152606490fd5b919082519283825260005b848110610872575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610851565b6080810190811067ffffffffffffffff8211176103bc57604052565b90601f8019910116810190811067ffffffffffffffff8211176103bc57604052565b67ffffffffffffffff81116103bc57601f01601f191660200190565b67ffffffffffffffff81116103bc5760051b60200190565b60015481101561091857600160005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b80518210156109185760209160051b010190565b90600182811c92168015610972575b602083101461095c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610951565b6000546001600160a01b0316330361099057565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220472e5463f8f6f902948f5dbafdcca05b8fe70b9c0127dacda4d70c0f12b11ecf64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x71C JUMPI DUP1 PUSH4 0x523A7B0F EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x7DC1A64F EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x7F5154B4 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xB814B7ED EQ PUSH2 0x111 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x10C JUMPI PUSH2 0xAD PUSH2 0x97C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x10C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x10C JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x18F DUP2 PUSH2 0x8C5 JUMP JUMPDEST SWAP2 PUSH2 0x19D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x8A3 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x10C JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE CALLVALUE ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1D0 DUP2 PUSH2 0x887 JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD CALLVALUE DUP2 MSTORE PUSH1 0x40 DUP3 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 TIMESTAMP DUP4 MSTORE PUSH1 0x1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x3BC JUMPI DUP1 PUSH1 0x1 PUSH2 0x20D SWAP3 ADD PUSH1 0x1 SSTORE PUSH2 0x8F9 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0x3D2 JUMPI MLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP5 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3BC JUMPI PUSH2 0x257 DUP4 SLOAD PUSH2 0x942 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x374 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x30A JUMPI PUSH1 0x3 SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x2FF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP7 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD SWAP2 ADD SSTORE PUSH1 0x2 SLOAD CALLVALUE DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2E9 JUMPI PUSH1 0x2 SSTORE PUSH32 0x8D379BDDC159E67937283B53EDD0858BDD6F8BA659D7BC286617C5AFDB4F4780 PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE DUP1 PUSH2 0x2E4 CALLER SWAP5 PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x846 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x27E JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x35C JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0x3 SWAP9 SWAP8 SWAP7 SWAP5 LT PUSH2 0x344 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x292 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x337 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x31D JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x3B2 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x3A6 JUMPI POP PUSH2 0x260 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x399 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469704A61723A2054697020616D6F756E74206D757374206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32B9103A3430B7103D32B93797 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH2 0x47A PUSH2 0x97C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x20 SELFBALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH1 0x1 SLOAD PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x716 JUMPI POP DUP1 JUMPDEST PUSH2 0x501 DUP3 PUSH2 0x8E1 JUMP JUMPDEST SWAP2 PUSH2 0x50F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x8A3 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x51E DUP3 PUSH2 0x8E1 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x6E3 JUMPI POP SWAP1 SWAP2 PUSH1 0x0 NOT DUP2 ADD SWAP2 POP DUP1 DUP3 GT PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x5D6 JUMPI DUP6 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x579 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE DUP3 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x60 DUP1 PUSH2 0x5C0 PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x80 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x846 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x56A JUMP JUMPDEST DUP2 PUSH2 0x2E9 JUMPI DUP1 DUP4 SUB PUSH1 0x0 NOT ADD DUP5 DUP2 GT PUSH2 0x2E9 JUMPI PUSH2 0x5F2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH2 0x600 DUP3 PUSH2 0x887 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x62C DUP3 PUSH2 0x942 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x6BC JUMPI POP PUSH1 0x1 EQ PUSH2 0x682 JUMPI JUMPDEST POP POP SWAP2 DUP2 PUSH2 0x65A PUSH1 0x3 SWAP4 PUSH1 0x1 SWAP8 SWAP7 SWAP6 SUB DUP3 PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x670 DUP3 DUP10 PUSH2 0x92E JUMP JUMPDEST MSTORE PUSH2 0x67B DUP2 DUP9 PUSH2 0x92E JUMP JUMPDEST POP ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP1 SWAP3 POP JUMPDEST DUP2 DUP4 LT PUSH2 0x6A6 JUMPI POP POP DUP2 ADD PUSH1 0x20 ADD DUP2 PUSH2 0x65A PUSH2 0x644 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP7 DUP9 ADD ADD MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x68F JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP DUP4 SWAP2 POP PUSH2 0x65A SWAP1 POP PUSH2 0x644 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x6F2 DUP2 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x522 JUMP JUMPDEST SWAP1 PUSH2 0x4F8 JUMP JUMPDEST CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10C JUMPI PUSH2 0x735 PUSH2 0x97C JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND GAS CALL RETURNDATASIZE ISZERO PUSH2 0x7FC JUMPI RETURNDATASIZE PUSH2 0x75E DUP2 PUSH2 0x8C5 JUMP JUMPDEST SWAP1 PUSH2 0x76C PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x8A3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8C7CDAD0D12A8DB3E23561B42DA6F10C8137914C97BEFF202213A410E1F520A3 SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469704A61723A205769746864726177616C206661696C65642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469704A61723A204E6F2066756E647320746F2077697468647261772E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x872 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x851 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3BC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3BC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3BC JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3BC JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x918 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x918 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x972 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x95C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x990 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0x2E SLOAD PUSH4 0xF8F6F902 SWAP5 DUP16 TSTORE 0xBA REVERT 0xCC LOG0 JUMPDEST DUP16 0xE7 SIGNEXTEND SWAP13 ADD 0x27 0xDA 0xCD LOG4 0xD7 0xC 0xF SLT 0xB1 0x1E 0xCF PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "592:3670:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;592:3670:2;;;;;;-1:-1:-1;;;;;592:3670:2;;;;;;;;1500:62:0;;:::i;:::-;2627:22;;2623:91;;592:3670:2;;;-1:-1:-1;;;;;;592:3670:2;;;;;;-1:-1:-1;;;;;592:3670:2;;3052:40:0;;592:3670:2;3052:40:0;592:3670:2;2623:91:0;2672:31;;;592:3670:2;2672:31:0;592:3670:2;;;;;2672:31:0;592:3670:2;;;;;;;;;;-1:-1:-1;;592:3670:2;;;;;1138:26;592:3670;;;;;;;;;;;;;-1:-1:-1;;592:3670:2;;;;;;;;-1:-1:-1;;;;;592:3670:2;;;;;;;;;;;-1:-1:-1;;592:3670:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2316:9;:13;592:3670;;;;;;;:::i;:::-;2431:10;592:3670;;;2404:154;;2316:9;592:3670;;;2404:154;;592:3670;;;2404:154;;;2531:15;;592:3670;;2392:6;592:3670;;;;;;;;2392:6;592:3670;;;2392:6;592:3670;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;592:3670:2;-1:-1:-1;;;;;592:3670:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2392:6;592:3670;;;;;;;;;;;;;;;;;;;;2316:9;592:3670;;;;;;;;;2614:44;592:3670;;2316:9;592:3670;;;;;;;2431:10;592:3670;2431:10;592:3670;;;;;;:::i;:::-;2614:44;;;592:3670;;;;;;;;;;;;;;;;;-1:-1:-1;592:3670:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2392:6;592:3670;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;592:3670:2;;;;;;;;;;;;;;;;;;;2392:6;592:3670;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2392:6;592:3670;;;;;;-1:-1:-1;592:3670:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;592:3670:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;592:3670:2;;;;;;;;;;;;;-1:-1:-1;;592:3670:2;;;;;3410:6;592:3670;;;;;;;;;;;;;-1:-1:-1;;592:3670:2;;;;1500:62:0;;:::i;:::-;592:3670:2;;;-1:-1:-1;;;;;;592:3670:2;;;;-1:-1:-1;;;;;592:3670:2;3052:40:0;592:3670:2;;3052:40:0;592:3670:2;;;;;;;-1:-1:-1;;592:3670:2;;;;;4230:21;592:3670;;;;;;;;;;;;-1:-1:-1;;592:3670:2;;;;;;;;3751:18;;;;;;:39;;;592:3670;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;592:3670:2;;;:::i;:::-;;;;;;;;;-1:-1:-1;3879:13:2;;-1:-1:-1;;592:3670:2;;;-1:-1:-1;592:3670:2;;;;3894:9;;;;;;592:3670;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;3905:3;592:3670;;;;;;-1:-1:-1;;592:3670:2;;;;;;3941:25;;;:::i;:::-;592:3670;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;592:3670:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;592:3670:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;3925:41;;;;:::i;:::-;;;;;;:::i;:::-;;592:3670;3879:13;;592:3670;;;;;;;;;;-1:-1:-1;592:3670:2;;;;;;-1:-1:-1;;592:3670:2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;592:3670:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;592:3670:2;;-1:-1:-1;592:3670:2;;-1:-1:-1;592:3670:2;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3751:39;;;;592:3670;;;;;;-1:-1:-1;;592:3670:2;;;;1500:62:0;;:::i;:::-;2955:21:2;2995:11;;592:3670;;;;;;;;;;;;;;;3072:32;;592:3670;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;592:3670:2;;3179:27;;592:3670;;3179:27;592:3670;;;;-1:-1:-1;;;592:3670:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;592:3670:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;592:3670:2;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;3711:6;592:3670;;;;;;3711:6;-1:-1:-1;592:3670:2;;-1:-1:-1;592:3670:2;;;;;;-1:-1:-1;592:3670:2;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;1796:162:0;1710:6;592:3670:2;-1:-1:-1;;;;;592:3670:2;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:1;1901:40:0;592:3670:2;;1710:6:0;1901:40"
            },
            "methodIdentifiers": {
              "getContractBalance()": "6f9fb98a",
              "getLatestTips(uint256)": "523a7b0f",
              "getTipCount()": "7dc1a64f",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "sendTip(string)": "7f5154b4",
              "totalTipped()": "b814b7ed",
              "transferOwnership(address)": "f2fde38b",
              "withdraw()": "3ccfd60b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"TipReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"getLatestTips\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct TipJar.Tip[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTipCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"sendTip\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTipped\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple, elegant contract that allows anyone to send a tip (in CELO) to the owner, along with a public message. It demonstrates handling payments, storing data, and secure ownership patterns. Features: - Anyone can send a tip with a message. - All tips are stored on-chain for a transparent history. - The contract owner can withdraw the entire balance. - Events are emitted for new tips and withdrawals.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"TipReceived(address,uint256,string)\":{\"details\":\"Emitted when a new tip is successfully sent to the contract.\",\"params\":{\"amount\":\"The amount of CELO tipped.\",\"message\":\"The message included with the tip.\",\"sender\":\"The address of the tipper.\"}},\"Withdrawn(uint256,address)\":{\"details\":\"Emitted when the owner successfully withdraws funds.\",\"params\":{\"amount\":\"The total amount of CELO withdrawn.\",\"recipient\":\"The address the funds were sent to (the owner).\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the initial owner of the contract. The deployer of the contract will be the initial owner.\"},\"getContractBalance()\":{\"returns\":{\"_0\":\"The balance in wei.\"}},\"getLatestTips(uint256)\":{\"params\":{\"_count\":\"The number of recent tips to fetch.\"},\"returns\":{\"_0\":\"An array of Tip structs.\"}},\"getTipCount()\":{\"returns\":{\"_0\":\"The total count of tips.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"sendTip(string)\":{\"details\":\"This function is payable, meaning it can receive CELO. The sender must send a value greater than 0.\",\"params\":{\"_message\":\"A public message to accompany the tip.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw()\":{\"details\":\"Can only be called by the contract owner. This is a protective measure to ensure funds are secure.\"}},\"title\":\"TipJar\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getContractBalance()\":{\"notice\":\"Gets the entire contract's current CELO balance.\"},\"getLatestTips(uint256)\":{\"notice\":\"Retrieves the most recent tips.\"},\"getTipCount()\":{\"notice\":\"Gets the total number of tips received.\"},\"sendTip(string)\":{\"notice\":\"Sends a tip to the contract owner.\"},\"withdraw()\":{\"notice\":\"Withdraws the entire balance of the contract to the owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TipJar.sol\":\"TipJar\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/TipJar.sol\":{\"keccak256\":\"0x9988cc01ddb2591149fcdd319ca94d98e31abd8a2e2fa09775a88d5360ea6ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdf1bffe1c4cadde0558a73473b29f1960c968a383b88ad1aa96de03083a10b3\",\"dweb:/ipfs/QmU7SU3kYGxdCpATmhLqWHSGNcMs7PgaMU5YKy4MyuUAS5\"]}},\"version\":1}"
        }
      }
    }
  }
}