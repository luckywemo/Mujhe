{
  "id": "136efb1a214b8d9223dcc0c63b7d5c94",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/SimplePoll.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title SimplePoll\r\n * @dev A basic on-chain polling contract where users can vote Yes or No.\r\n * Each contract instance represents a single poll.\r\n */\r\ncontract SimplePoll {\r\n    // The question for the poll\r\n    string public question;\r\n\r\n    // Vote counters\r\n    uint256 public yesVotes;\r\n    uint256 public noVotes;\r\n\r\n    // Mapping to track who has already voted\r\n    mapping(address => bool) public hasVoted;\r\n\r\n    // Event to announce a new vote\r\n    event Voted(address indexed voter, bool vote, uint256 totalYes, uint256 totalNo);\r\n\r\n    /**\r\n     * @dev Sets the poll question upon deployment.\r\n     * @param _question The question for this poll.\r\n     */\r\n    constructor(string memory _question) {\r\n        require(bytes(_question).length > 0, \"Question cannot be empty\");\r\n        question = _question;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows a user to cast their vote.\r\n     * A user can only vote once.\r\n     * @param _vote The user's vote: true for Yes, false for No.\r\n     */\r\n    function vote(bool _vote) public {\r\n        require(!hasVoted[msg.sender], \"You have already voted.\");\r\n\r\n        hasVoted[msg.sender] = true;\r\n\r\n        if (_vote) {\r\n            yesVotes++;\r\n        } else {\r\n            noVotes++;\r\n        }\r\n\r\n        emit Voted(msg.sender, _vote, yesVotes, noVotes);\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the current poll results.\r\n     * @return _yesVotes The total number of Yes votes.\r\n     * @return _noVotes The total number of No votes.\r\n     */\r\n    function getResults() public view returns (uint256 _yesVotes, uint256 _noVotes) {\r\n        return (yesVotes, noVotes);\r\n    }\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "contracts/SimplePoll.sol": {
        "ast": {
          "absolutePath": "contracts/SimplePoll.sol",
          "exportedSymbols": {
            "SimplePoll": [
              99
            ]
          },
          "id": 100,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SimplePoll",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "61:158:0",
                "text": " @title SimplePoll\n @dev A basic on-chain polling contract where users can vote Yes or No.\n Each contract instance represents a single poll."
              },
              "fullyImplemented": true,
              "id": 99,
              "linearizedBaseContracts": [
                99
              ],
              "name": "SimplePoll",
              "nameLocation": "230:10:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "3fad9ae0",
                  "id": 4,
                  "mutability": "mutable",
                  "name": "question",
                  "nameLocation": "296:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "282:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "282:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fb286c65",
                  "id": 6,
                  "mutability": "mutable",
                  "name": "yesVotes",
                  "nameLocation": "350:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "335:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b5b47f42",
                  "id": 8,
                  "mutability": "mutable",
                  "name": "noVotes",
                  "nameLocation": "380:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "365:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "09eef43e",
                  "id": 12,
                  "mutability": "mutable",
                  "name": "hasVoted",
                  "nameLocation": "475:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "443:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 11,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 9,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "451:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "443:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 10,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "462:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "823509eb2896162212a53c9a760ac3eb90fd39cee81485d1e4e137638c3020c8",
                  "id": 22,
                  "name": "Voted",
                  "nameLocation": "535:5:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 21,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "voter",
                        "nameLocation": "557:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 22,
                        "src": "541:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "541:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 16,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "vote",
                        "nameLocation": "569:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 22,
                        "src": "564:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "564:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 18,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalYes",
                        "nameLocation": "583:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 22,
                        "src": "575:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "575:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalNo",
                        "nameLocation": "601:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 22,
                        "src": "593:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "593:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "540:69:0"
                  },
                  "src": "529:81:0"
                },
                {
                  "body": {
                    "id": 43,
                    "nodeType": "Block",
                    "src": "779:114:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 35,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 31,
                                      "name": "_question",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25,
                                      "src": "804:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 30,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "798:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 29,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "798:5:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 32,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "798:16:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "815:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "798:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 34,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "824:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "798:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5175657374696f6e2063616e6e6f7420626520656d707479",
                              "id": 36,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "827:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e91f32e8485e8cc61ee75db81581675d5614973e773b4b2d6682176c252ce441",
                                "typeString": "literal_string \"Question cannot be empty\""
                              },
                              "value": "Question cannot be empty"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e91f32e8485e8cc61ee75db81581675d5614973e773b4b2d6682176c252ce441",
                                "typeString": "literal_string \"Question cannot be empty\""
                              }
                            ],
                            "id": 28,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "790:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "790:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38,
                        "nodeType": "ExpressionStatement",
                        "src": "790:64:0"
                      },
                      {
                        "expression": {
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 39,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "865:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 40,
                            "name": "_question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "876:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "865:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 42,
                        "nodeType": "ExpressionStatement",
                        "src": "865:20:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 23,
                    "nodeType": "StructuredDocumentation",
                    "src": "618:118:0",
                    "text": " @dev Sets the poll question upon deployment.\n @param _question The question for this poll."
                  },
                  "id": 44,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 26,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "_question",
                        "nameLocation": "768:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "754:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "754:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "753:25:0"
                  },
                  "returnParameters": {
                    "id": 27,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "779:0:0"
                  },
                  "scope": 99,
                  "src": "742:151:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 84,
                    "nodeType": "Block",
                    "src": "1100:279:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 55,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1119:21:0",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 51,
                                  "name": "hasVoted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12,
                                  "src": "1120:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 54,
                                "indexExpression": {
                                  "expression": {
                                    "id": 52,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1129:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 53,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1133:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1129:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1120:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f75206861766520616c726561647920766f7465642e",
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1142:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1814df8007c14967d1dedfd016a222fa9f9d3d95d881e38c6e569314cca84863",
                                "typeString": "literal_string \"You have already voted.\""
                              },
                              "value": "You have already voted."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1814df8007c14967d1dedfd016a222fa9f9d3d95d881e38c6e569314cca84863",
                                "typeString": "literal_string \"You have already voted.\""
                              }
                            ],
                            "id": 50,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1111:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1111:57:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "1111:57:0"
                      },
                      {
                        "expression": {
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 59,
                              "name": "hasVoted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "1181:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 62,
                            "indexExpression": {
                              "expression": {
                                "id": 60,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1190:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 61,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1194:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1190:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1181:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1204:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1181:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 65,
                        "nodeType": "ExpressionStatement",
                        "src": "1181:27:0"
                      },
                      {
                        "condition": {
                          "id": 66,
                          "name": "_vote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "1225:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 74,
                          "nodeType": "Block",
                          "src": "1275:36:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 72,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1290:9:0",
                                "subExpression": {
                                  "id": 71,
                                  "name": "noVotes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8,
                                  "src": "1290:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 73,
                              "nodeType": "ExpressionStatement",
                              "src": "1290:9:0"
                            }
                          ]
                        },
                        "id": 75,
                        "nodeType": "IfStatement",
                        "src": "1221:90:0",
                        "trueBody": {
                          "id": 70,
                          "nodeType": "Block",
                          "src": "1232:37:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 68,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1247:10:0",
                                "subExpression": {
                                  "id": 67,
                                  "name": "yesVotes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6,
                                  "src": "1247:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 69,
                              "nodeType": "ExpressionStatement",
                              "src": "1247:10:0"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 77,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1334:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1338:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1334:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 79,
                              "name": "_vote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "1346:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 80,
                              "name": "yesVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "1353:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 81,
                              "name": "noVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "1363:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 76,
                            "name": "Voted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "1328:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,bool,uint256,uint256)"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1328:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 83,
                        "nodeType": "EmitStatement",
                        "src": "1323:48:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 45,
                    "nodeType": "StructuredDocumentation",
                    "src": "901:160:0",
                    "text": " @dev Allows a user to cast their vote.\n A user can only vote once.\n @param _vote The user's vote: true for Yes, false for No."
                  },
                  "functionSelector": "4b9f5c98",
                  "id": 85,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "vote",
                  "nameLocation": "1076:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "_vote",
                        "nameLocation": "1086:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 85,
                        "src": "1081:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1081:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1080:12:0"
                  },
                  "returnParameters": {
                    "id": 49,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1100:0:0"
                  },
                  "scope": 99,
                  "src": "1067:312:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "1646:45:0",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 93,
                              "name": "yesVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "1665:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 94,
                              "name": "noVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "1675:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 95,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1664:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 92,
                        "id": 96,
                        "nodeType": "Return",
                        "src": "1657:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 86,
                    "nodeType": "StructuredDocumentation",
                    "src": "1387:173:0",
                    "text": " @dev Retrieves the current poll results.\n @return _yesVotes The total number of Yes votes.\n @return _noVotes The total number of No votes."
                  },
                  "functionSelector": "4717f97c",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getResults",
                  "nameLocation": "1575:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1585:2:0"
                  },
                  "returnParameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 89,
                        "mutability": "mutable",
                        "name": "_yesVotes",
                        "nameLocation": "1617:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "1609:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1609:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "_noVotes",
                        "nameLocation": "1636:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "1628:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1628:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1608:37:0"
                  },
                  "scope": 99,
                  "src": "1566:125:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 100,
              "src": "221:1473:0",
              "usedErrors": [],
              "usedEvents": [
                22
              ]
            }
          ],
          "src": "33:1663:0"
        },
        "id": 0
      }
    },
    "contracts": {
      "contracts/SimplePoll.sol": {
        "SimplePoll": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_question",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "vote",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalYes",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalNo",
                  "type": "uint256"
                }
              ],
              "name": "Voted",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "getResults",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_yesVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_noVotes",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "hasVoted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "noVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "question",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "_vote",
                  "type": "bool"
                }
              ],
              "name": "vote",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "yesVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_memory": {
                  "entryPoint": 621,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346102685761064b803803806100198161026d565b928339810190602081830312610268578051906001600160401b038211610268570181601f82011215610268578051906001600160401b0382116101f85761006a601f8301601f191660200161026d565b92828452602083830101116102685760005b828110610253578360006020858301015280511561020e5780516001600160401b0381116101f857600054600181811c911680156101ee575b60208210146101d857601f8111610174575b50602091601f821160011461011157918192600092610106575b50508160011b916000199060031b1c1916176000555b6040516103b890816102938239f35b0151905082806100e1565b601f1982169260008052806000209160005b85811061015c57508360019510610143575b505050811b016000556100f7565b015160001960f88460031b161c19169055828080610135565b91926020600181928685015181550194019201610123565b600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f830160051c810191602084106101ce575b601f0160051c01905b8181106101c257506100c7565b600081556001016101b5565b90915081906101ac565b634e487b7160e01b600052602260045260246000fd5b90607f16906100b5565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601860248201527f5175657374696f6e2063616e6e6f7420626520656d70747900000000000000006044820152606490fd5b8060208092840101518282870101520161007c565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176101f85760405256fe608080604052600436101561001357600080fd5b60003560e01c90816309eef43e1461031d575080633fad9ae0146101c25780634717f97c1461019d5780634b9f5c98146100a2578063b5b47f42146100845763fb286c651461006157600080fd5b3461007f57600036600319011261007f576020600154604051908152f35b600080fd5b3461007f57600036600319011261007f576020600254604051908152f35b3461007f57602036600319011261007f576004358015159081810361007f5733600052600360205260ff60406000205416610158573360005260036020526040600020600160ff198254161790556000146101455761010260015461035d565b6001555b60015460025490604051928352602083015260408201527f823509eb2896162212a53c9a760ac3eb90fd39cee81485d1e4e137638c3020c860603392a2005b61015060025461035d565b600255610106565b60405162461bcd60e51b815260206004820152601760248201527f596f75206861766520616c726561647920766f7465642e0000000000000000006044820152606490fd5b3461007f57600036600319011261007f57604060015460025482519182526020820152f35b3461007f57600036600319011261007f57604051600080548060011c90600181168015610313575b6020831081146102ff578285529081156102e3575060011461028d575b50819003601f01601f191681019067ffffffffffffffff8211818310176102775781604052602082528181519182602083015260005b83811061025f5750508160006040809484010152601f80199101168101030190f35b6020828201810151604087840101528593500161023d565b634e487b7160e01b600052604160045260246000fd5b9050600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5636000905b8282106102cd57506020915082010182610207565b60018160209254838588010152019101906102b8565b90506020925060ff191682840152151560051b82010182610207565b634e487b7160e01b84526022600452602484fd5b91607f16916101ea565b3461007f57602036600319011261007f576004356001600160a01b038116919082900361007f576020916000526003825260ff6040600020541615158152f35b600019811461036c5760010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b0aa565e2064e5ff9ceaa1efc9d6e665749f024208142fd6788e8bbc2e5a3b4f64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x268 JUMPI PUSH2 0x64B DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x26D JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x268 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x268 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x268 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1F8 JUMPI PUSH2 0x6A PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x26D JUMP JUMPDEST SWAP3 DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x268 JUMPI PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x253 JUMPI DUP4 PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 MLOAD ISZERO PUSH2 0x20E JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1F8 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x1EE JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x1D8 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x174 JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x111 JUMPI SWAP2 DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x106 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B8 SWAP1 DUP2 PUSH2 0x293 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP3 DUP1 PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP3 PUSH1 0x0 DUP1 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x15C JUMPI POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x143 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 SSTORE PUSH2 0xF7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP3 DUP1 DUP1 PUSH2 0x135 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x123 JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1CE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1C2 JUMPI POP PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B5 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xB5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175657374696F6E2063616E6E6F7420626520656D7074790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x7C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x1F8 JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x9EEF43E EQ PUSH2 0x31D JUMPI POP DUP1 PUSH4 0x3FAD9AE0 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x4717F97C EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x4B9F5C98 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB5B47F42 EQ PUSH2 0x84 JUMPI PUSH4 0xFB286C65 EQ PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO SWAP1 DUP2 DUP2 SUB PUSH2 0x7F JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x158 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 EQ PUSH2 0x145 JUMPI PUSH2 0x102 PUSH1 0x1 SLOAD PUSH2 0x35D JUMP JUMPDEST PUSH1 0x1 SSTORE JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x823509EB2896162212A53C9A760AC3EB90FD39CEE81485D1E4E137638C3020C8 PUSH1 0x60 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH2 0x150 PUSH1 0x2 SLOAD PUSH2 0x35D JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C726561647920766F7465642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x40 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x313 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2FF JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2E3 JUMPI POP PUSH1 0x1 EQ PUSH2 0x28D JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x277 JUMPI DUP2 PUSH1 0x40 MSTORE PUSH1 0x20 DUP3 MSTORE DUP2 DUP2 MLOAD SWAP2 DUP3 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x25F JUMPI POP POP DUP2 PUSH1 0x0 PUSH1 0x40 DUP1 SWAP5 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x20 DUP3 DUP3 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP8 DUP5 ADD ADD MSTORE DUP6 SWAP4 POP ADD PUSH2 0x23D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2CD JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x207 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1EA JUMP JUMPDEST CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x7F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x36C JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xAA JUMP MCOPY KECCAK256 PUSH5 0xE5FF9CEAA1 0xEF 0xC9 0xD6 0xE6 PUSH6 0x749F02420814 0x2F 0xD6 PUSH25 0x8E8BBC2E5A3B4F64736F6C634300081C003300000000000000 ",
              "sourceMap": "221:1473:0:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;221:1473:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;;221:1473:0;;;;;;;;-1:-1:-1;;221:1473:0;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;221:1473:0;;;;;;;-1:-1:-1;221:1473:0;;;;;;;;798:27;221:1473;;;;-1:-1:-1;;;;;221:1473:0;;;;-1:-1:-1;221:1473:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;221:1473:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;221:1473:0;;;;;;;;;;;;;;;-1:-1:-1;221:1473:0;;;;;;;;;;-1:-1:-1;221:1473:0;;;-1:-1:-1;221:1473:0;;-1:-1:-1;221:1473:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;221:1473:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;221:1473:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;221:1473:0;;;;;;;;;-1:-1:-1;221:1473:0;;;;;;;;-1:-1:-1;221:1473:0;;;;;-1:-1:-1;221:1473:0;;;;;;;;;;;;-1:-1:-1;221:1473:0;;;;;-1:-1:-1;221:1473:0;;;;-1:-1:-1;;;221:1473:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;221:1473:0;;;;;;;;;-1:-1:-1;;221:1473:0;;;-1:-1:-1;;;;;221:1473:0;;;;;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "increment_uint256": {
                  "entryPoint": 861,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c90816309eef43e1461031d575080633fad9ae0146101c25780634717f97c1461019d5780634b9f5c98146100a2578063b5b47f42146100845763fb286c651461006157600080fd5b3461007f57600036600319011261007f576020600154604051908152f35b600080fd5b3461007f57600036600319011261007f576020600254604051908152f35b3461007f57602036600319011261007f576004358015159081810361007f5733600052600360205260ff60406000205416610158573360005260036020526040600020600160ff198254161790556000146101455761010260015461035d565b6001555b60015460025490604051928352602083015260408201527f823509eb2896162212a53c9a760ac3eb90fd39cee81485d1e4e137638c3020c860603392a2005b61015060025461035d565b600255610106565b60405162461bcd60e51b815260206004820152601760248201527f596f75206861766520616c726561647920766f7465642e0000000000000000006044820152606490fd5b3461007f57600036600319011261007f57604060015460025482519182526020820152f35b3461007f57600036600319011261007f57604051600080548060011c90600181168015610313575b6020831081146102ff578285529081156102e3575060011461028d575b50819003601f01601f191681019067ffffffffffffffff8211818310176102775781604052602082528181519182602083015260005b83811061025f5750508160006040809484010152601f80199101168101030190f35b6020828201810151604087840101528593500161023d565b634e487b7160e01b600052604160045260246000fd5b9050600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5636000905b8282106102cd57506020915082010182610207565b60018160209254838588010152019101906102b8565b90506020925060ff191682840152151560051b82010182610207565b634e487b7160e01b84526022600452602484fd5b91607f16916101ea565b3461007f57602036600319011261007f576004356001600160a01b038116919082900361007f576020916000526003825260ff6040600020541615158152f35b600019811461036c5760010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b0aa565e2064e5ff9ceaa1efc9d6e665749f024208142fd6788e8bbc2e5a3b4f64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x9EEF43E EQ PUSH2 0x31D JUMPI POP DUP1 PUSH4 0x3FAD9AE0 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x4717F97C EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x4B9F5C98 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB5B47F42 EQ PUSH2 0x84 JUMPI PUSH4 0xFB286C65 EQ PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO SWAP1 DUP2 DUP2 SUB PUSH2 0x7F JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x158 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 EQ PUSH2 0x145 JUMPI PUSH2 0x102 PUSH1 0x1 SLOAD PUSH2 0x35D JUMP JUMPDEST PUSH1 0x1 SSTORE JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x823509EB2896162212A53C9A760AC3EB90FD39CEE81485D1E4E137638C3020C8 PUSH1 0x60 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH2 0x150 PUSH1 0x2 SLOAD PUSH2 0x35D JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C726561647920766F7465642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x40 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x313 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2FF JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2E3 JUMPI POP PUSH1 0x1 EQ PUSH2 0x28D JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x277 JUMPI DUP2 PUSH1 0x40 MSTORE PUSH1 0x20 DUP3 MSTORE DUP2 DUP2 MLOAD SWAP2 DUP3 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x25F JUMPI POP POP DUP2 PUSH1 0x0 PUSH1 0x40 DUP1 SWAP5 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x20 DUP3 DUP3 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP8 DUP5 ADD ADD MSTORE DUP6 SWAP4 POP ADD PUSH2 0x23D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2CD JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x207 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1EA JUMP JUMPDEST CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x7F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x36C JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xAA JUMP MCOPY KECCAK256 PUSH5 0xE5FF9CEAA1 0xEF 0xC9 0xD6 0xE6 PUSH6 0x749F02420814 0x2F 0xD6 PUSH25 0x8E8BBC2E5A3B4F64736F6C634300081C003300000000000000 ",
              "sourceMap": "221:1473:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;221:1473:0;;;;;335:23;221:1473;;;;;;;;;;;;;;;;;-1:-1:-1;;221:1473:0;;;;;365:22;221:1473;;;;;;;;;;;;;-1:-1:-1;;221:1473:0;;;;;;;;;;;;;;;1129:10;221:1473;;1120:8;221:1473;;;;;;;;;;1129:10;221:1473;;1120:8;221:1473;;;;;1204:4;221:1473;;;;;;;;1221:90;;;;1247:10;1204:4;221:1473;1247:10;:::i;:::-;1204:4;221:1473;1221:90;1204:4;221:1473;1363:7;221:1473;;;;;;;;;;;;;;;1328:43;221:1473;1129:10;1328:43;;221:1473;1221:90;1290:9;;221:1473;1290:9;:::i;:::-;;221:1473;1221:90;;221:1473;;;-1:-1:-1;;;221:1473:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;221:1473:0;;;;;1665:8;221:1473;1675:7;221:1473;;;;;;;;;;;;;;;;;-1:-1:-1;;221:1473:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;221:1473:0;;;;;-1:-1:-1;;221:1473:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;221:1473:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;221:1473:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;221:1473:0;;;;;;-1:-1:-1;;;;;221:1473:0;;;;;;;;;;;;;443:40;221:1473;;;;;;;;;;;;;;-1:-1:-1;;221:1473:0;;;;;;;:::o;:::-;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "getResults()": "4717f97c",
              "hasVoted(address)": "09eef43e",
              "noVotes()": "b5b47f42",
              "question()": "3fad9ae0",
              "vote(bool)": "4b9f5c98",
              "yesVotes()": "fb286c65"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_question\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalYes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalNo\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getResults\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_yesVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_noVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"noVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"question\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_vote\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yesVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A basic on-chain polling contract where users can vote Yes or No. Each contract instance represents a single poll.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the poll question upon deployment.\",\"params\":{\"_question\":\"The question for this poll.\"}},\"getResults()\":{\"details\":\"Retrieves the current poll results.\",\"returns\":{\"_noVotes\":\"The total number of No votes.\",\"_yesVotes\":\"The total number of Yes votes.\"}},\"vote(bool)\":{\"details\":\"Allows a user to cast their vote. A user can only vote once.\",\"params\":{\"_vote\":\"The user's vote: true for Yes, false for No.\"}}},\"title\":\"SimplePoll\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimplePoll.sol\":\"SimplePoll\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimplePoll.sol\":{\"keccak256\":\"0x94ed9971dc0b66465bb09f1027e65fb208cde277534f109d6276b50066f29373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163bb9e26443a7fd7797e286506f6792dbd1362f68d1679227a6ea4633832813\",\"dweb:/ipfs/QmUdQmD8G3R3QzHMFW3HLB1WYGnCHaxB5goxbjS816Wxz3\"]}},\"version\":1}"
        }
      }
    }
  }
}