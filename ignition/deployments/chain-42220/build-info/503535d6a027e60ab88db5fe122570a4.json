{
  "id": "503535d6a027e60ab88db5fe122570a4",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/DecentralizedInsurance.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\n\r\n/**\r\n * @title DecentralizedInsurance\r\n * @dev A comprehensive decentralized insurance platform supporting multiple coverage types\r\n * Features: Premium calculation, claims processing, staking pools, governance, and fraud detection\r\n */\r\ncontract DecentralizedInsurance is Ownable, ReentrancyGuard, Pausable {\r\n    \r\n    // Insurance Types\r\n    enum InsuranceType { HEALTH, PROPERTY, TRAVEL, CRYPTO, LIFE }\r\n    \r\n    // Policy Status\r\n    enum PolicyStatus { ACTIVE, EXPIRED, CANCELLED, CLAIMED }\r\n    \r\n    // Claim Status\r\n    enum ClaimStatus { PENDING, INVESTIGATING, APPROVED, REJECTED, PAID }\r\n    \r\n    // Risk Levels\r\n    enum RiskLevel { LOW, MEDIUM, HIGH, CRITICAL }\r\n    \r\n    struct Policy {\r\n        uint256 policyId;\r\n        address policyholder;\r\n        InsuranceType insuranceType;\r\n        uint256 coverageAmount;\r\n        uint256 premiumAmount;\r\n        uint256 startDate;\r\n        uint256 endDate;\r\n        PolicyStatus status;\r\n        RiskLevel riskLevel;\r\n        string metadataURI; // IPFS hash for policy details\r\n        uint256 claimsCount;\r\n        uint256 totalClaimsAmount;\r\n    }\r\n    \r\n    struct Claim {\r\n        uint256 claimId;\r\n        uint256 policyId;\r\n        address claimant;\r\n        uint256 claimAmount;\r\n        uint256 submissionDate;\r\n        uint256 investigationDeadline;\r\n        ClaimStatus status;\r\n        string evidenceURI; // IPFS hash for claim evidence\r\n        string rejectionReason;\r\n        uint256 approvedAmount;\r\n        uint256 payoutDate;\r\n        address investigator;\r\n    }\r\n    \r\n    struct StakeInfo {\r\n        uint256 amount;\r\n        uint256 stakingDate;\r\n        uint256 rewardsEarned;\r\n        uint256 lastRewardUpdate;\r\n    }\r\n    \r\n    struct InsurancePool {\r\n        uint256 totalStaked;\r\n        uint256 totalClaims;\r\n        uint256 availableFunds;\r\n        uint256 rewardRate; // Annual percentage rate (in basis points)\r\n        bool active;\r\n    }\r\n    \r\n    // State Variables\r\n    uint256 private nextPolicyId = 1;\r\n    uint256 private nextClaimId = 1;\r\n    \r\n    // Mappings\r\n    mapping(uint256 => Policy) public policies;\r\n    mapping(uint256 => Claim) public claims;\r\n    mapping(address => uint256[]) public userPolicies;\r\n    mapping(address => uint256[]) public userClaims;\r\n    mapping(address => StakeInfo) public stakes;\r\n    mapping(InsuranceType => InsurancePool) public insurancePools;\r\n    mapping(address => bool) public authorizedInvestigators;\r\n    mapping(address => bool) public authorizedOracles;\r\n    \r\n    // Constants\r\n    uint256 public constant INVESTIGATION_PERIOD = 7 days;\r\n    uint256 public constant MIN_STAKE_AMOUNT = 100 ether; // 100 CELO minimum\r\n    uint256 public constant MAX_COVERAGE_RATIO = 80; // 80% of pool can be used for coverage\r\n    uint256 public constant FRAUD_PENALTY = 1000; // 10% penalty in basis points\r\n    \r\n    // Premium rates (in basis points, per year)\r\n    mapping(InsuranceType => mapping(RiskLevel => uint256)) public premiumRates;\r\n    \r\n    // Events\r\n    event PolicyCreated(uint256 indexed policyId, address indexed policyholder, InsuranceType insuranceType, uint256 coverageAmount);\r\n    event PremiumPaid(uint256 indexed policyId, address indexed policyholder, uint256 amount);\r\n    event ClaimSubmitted(uint256 indexed claimId, uint256 indexed policyId, address indexed claimant, uint256 amount);\r\n    event ClaimInvestigated(uint256 indexed claimId, address indexed investigator, ClaimStatus status);\r\n    event ClaimPaid(uint256 indexed claimId, address indexed claimant, uint256 amount);\r\n    event StakeDeposited(address indexed staker, uint256 amount);\r\n    event StakeWithdrawn(address indexed staker, uint256 amount);\r\n    event RewardsClaimed(address indexed staker, uint256 amount);\r\n    event InvestigatorAdded(address indexed investigator);\r\n    event OracleAdded(address indexed oracle);\r\n    event FraudDetected(uint256 indexed claimId, address indexed claimant);\r\n    \r\n    constructor() Ownable(msg.sender) {\r\n        // Initialize premium rates (in basis points per year)\r\n        // Health Insurance\r\n        premiumRates[InsuranceType.HEALTH][RiskLevel.LOW] = 200;    // 2%\r\n        premiumRates[InsuranceType.HEALTH][RiskLevel.MEDIUM] = 400; // 4%\r\n        premiumRates[InsuranceType.HEALTH][RiskLevel.HIGH] = 800;   // 8%\r\n        premiumRates[InsuranceType.HEALTH][RiskLevel.CRITICAL] = 1500; // 15%\r\n        \r\n        // Property Insurance\r\n        premiumRates[InsuranceType.PROPERTY][RiskLevel.LOW] = 100;    // 1%\r\n        premiumRates[InsuranceType.PROPERTY][RiskLevel.MEDIUM] = 250; // 2.5%\r\n        premiumRates[InsuranceType.PROPERTY][RiskLevel.HIGH] = 500;   // 5%\r\n        premiumRates[InsuranceType.PROPERTY][RiskLevel.CRITICAL] = 1000; // 10%\r\n        \r\n        // Travel Insurance\r\n        premiumRates[InsuranceType.TRAVEL][RiskLevel.LOW] = 150;    // 1.5%\r\n        premiumRates[InsuranceType.TRAVEL][RiskLevel.MEDIUM] = 300; // 3%\r\n        premiumRates[InsuranceType.TRAVEL][RiskLevel.HIGH] = 600;   // 6%\r\n        premiumRates[InsuranceType.TRAVEL][RiskLevel.CRITICAL] = 1200; // 12%\r\n        \r\n        // Crypto Insurance\r\n        premiumRates[InsuranceType.CRYPTO][RiskLevel.LOW] = 300;    // 3%\r\n        premiumRates[InsuranceType.CRYPTO][RiskLevel.MEDIUM] = 600; // 6%\r\n        premiumRates[InsuranceType.CRYPTO][RiskLevel.HIGH] = 1200;  // 12%\r\n        premiumRates[InsuranceType.CRYPTO][RiskLevel.CRITICAL] = 2000; // 20%\r\n        \r\n        // Life Insurance\r\n        premiumRates[InsuranceType.LIFE][RiskLevel.LOW] = 50;     // 0.5%\r\n        premiumRates[InsuranceType.LIFE][RiskLevel.MEDIUM] = 150; // 1.5%\r\n        premiumRates[InsuranceType.LIFE][RiskLevel.HIGH] = 400;   // 4%\r\n        premiumRates[InsuranceType.LIFE][RiskLevel.CRITICAL] = 800; // 8%\r\n        \r\n        // Initialize insurance pools\r\n        for (uint i = 0; i < 5; i++) {\r\n            InsuranceType insType = InsuranceType(i);\r\n            insurancePools[insType] = InsurancePool({\r\n                totalStaked: 0,\r\n                totalClaims: 0,\r\n                availableFunds: 0,\r\n                rewardRate: 1000, // 10% annual reward rate\r\n                active: true\r\n            });\r\n        }\r\n    }\r\n    \r\n    // Modifiers\r\n    modifier onlyInvestigator() {\r\n        require(authorizedInvestigators[msg.sender], \"Not authorized investigator\");\r\n        _;\r\n    }\r\n    \r\n    modifier onlyOracle() {\r\n        require(authorizedOracles[msg.sender], \"Not authorized oracle\");\r\n        _;\r\n    }\r\n    \r\n    modifier validPolicy(uint256 _policyId) {\r\n        require(_policyId > 0 && _policyId < nextPolicyId, \"Invalid policy ID\");\r\n        require(policies[_policyId].status == PolicyStatus.ACTIVE, \"Policy not active\");\r\n        _;\r\n    }\r\n    \r\n    modifier validClaim(uint256 _claimId) {\r\n        require(_claimId > 0 && _claimId < nextClaimId, \"Invalid claim ID\");\r\n        _;\r\n    }\r\n    \r\n    // Policy Management Functions\r\n    \r\n    /**\r\n     * @dev Create a new insurance policy\r\n     */\r\n    function createPolicy(\r\n        InsuranceType _insuranceType,\r\n        uint256 _coverageAmount,\r\n        uint256 _duration, // in seconds\r\n        RiskLevel _riskLevel,\r\n        string memory _metadataURI\r\n    ) external payable nonReentrant whenNotPaused {\r\n        require(_coverageAmount > 0, \"Coverage amount must be positive\");\r\n        require(_duration >= 30 days, \"Minimum duration is 30 days\");\r\n        require(_duration <= 365 days, \"Maximum duration is 365 days\");\r\n        require(insurancePools[_insuranceType].active, \"Insurance type not active\");\r\n        \r\n        // Calculate premium\r\n        uint256 premiumAmount = calculatePremium(_insuranceType, _coverageAmount, _duration, _riskLevel);\r\n        require(msg.value >= premiumAmount, \"Insufficient premium payment\");\r\n        \r\n        // Check pool capacity\r\n        uint256 maxCoverage = (insurancePools[_insuranceType].availableFunds * MAX_COVERAGE_RATIO) / 100;\r\n        require(_coverageAmount <= maxCoverage, \"Coverage exceeds pool capacity\");\r\n        \r\n        // Create policy\r\n        uint256 policyId = nextPolicyId++;\r\n        policies[policyId] = Policy({\r\n            policyId: policyId,\r\n            policyholder: msg.sender,\r\n            insuranceType: _insuranceType,\r\n            coverageAmount: _coverageAmount,\r\n            premiumAmount: premiumAmount,\r\n            startDate: block.timestamp,\r\n            endDate: block.timestamp + _duration,\r\n            status: PolicyStatus.ACTIVE,\r\n            riskLevel: _riskLevel,\r\n            metadataURI: _metadataURI,\r\n            claimsCount: 0,\r\n            totalClaimsAmount: 0\r\n        });\r\n        \r\n        userPolicies[msg.sender].push(policyId);\r\n        \r\n        // Add premium to insurance pool\r\n        insurancePools[_insuranceType].availableFunds += premiumAmount;\r\n        \r\n        // Refund excess payment\r\n        if (msg.value > premiumAmount) {\r\n            payable(msg.sender).transfer(msg.value - premiumAmount);\r\n        }\r\n        \r\n        emit PolicyCreated(policyId, msg.sender, _insuranceType, _coverageAmount);\r\n        emit PremiumPaid(policyId, msg.sender, premiumAmount);\r\n    }\r\n    \r\n    /**\r\n     * @dev Calculate premium for a policy\r\n     */\r\n    function calculatePremium(\r\n        InsuranceType _insuranceType,\r\n        uint256 _coverageAmount,\r\n        uint256 _duration,\r\n        RiskLevel _riskLevel\r\n    ) public view returns (uint256) {\r\n        uint256 annualRate = premiumRates[_insuranceType][_riskLevel];\r\n        uint256 premium = (_coverageAmount * annualRate * _duration) / (10000 * 365 days);\r\n        return premium;\r\n    }\r\n    \r\n    /**\r\n     * @dev Submit a claim\r\n     */\r\n    function submitClaim(\r\n        uint256 _policyId,\r\n        uint256 _claimAmount,\r\n        string memory _evidenceURI\r\n    ) external nonReentrant validPolicy(_policyId) {\r\n        Policy storage policy = policies[_policyId];\r\n        require(msg.sender == policy.policyholder, \"Not policy holder\");\r\n        require(block.timestamp <= policy.endDate, \"Policy expired\");\r\n        require(_claimAmount > 0, \"Claim amount must be positive\");\r\n        require(_claimAmount <= policy.coverageAmount, \"Claim exceeds coverage\");\r\n        \r\n        uint256 claimId = nextClaimId++;\r\n        claims[claimId] = Claim({\r\n            claimId: claimId,\r\n            policyId: _policyId,\r\n            claimant: msg.sender,\r\n            claimAmount: _claimAmount,\r\n            submissionDate: block.timestamp,\r\n            investigationDeadline: block.timestamp + INVESTIGATION_PERIOD,\r\n            status: ClaimStatus.PENDING,\r\n            evidenceURI: _evidenceURI,\r\n            rejectionReason: \"\",\r\n            approvedAmount: 0,\r\n            payoutDate: 0,\r\n            investigator: address(0)\r\n        });\r\n        \r\n        userClaims[msg.sender].push(claimId);\r\n        \r\n        emit ClaimSubmitted(claimId, _policyId, msg.sender, _claimAmount);\r\n    }\r\n    \r\n    /**\r\n     * @dev Investigate a claim (only authorized investigators)\r\n     */\r\n    function investigateClaim(\r\n        uint256 _claimId,\r\n        ClaimStatus _decision,\r\n        uint256 _approvedAmount,\r\n        string memory _rejectionReason\r\n    ) external onlyInvestigator validClaim(_claimId) {\r\n        Claim storage claim = claims[_claimId];\r\n        require(claim.status == ClaimStatus.PENDING, \"Claim not pending\");\r\n        require(block.timestamp <= claim.investigationDeadline, \"Investigation period expired\");\r\n        require(_decision == ClaimStatus.APPROVED || _decision == ClaimStatus.REJECTED, \"Invalid decision\");\r\n        \r\n        if (_decision == ClaimStatus.APPROVED) {\r\n            require(_approvedAmount > 0 && _approvedAmount <= claim.claimAmount, \"Invalid approved amount\");\r\n            claim.approvedAmount = _approvedAmount;\r\n            claim.status = ClaimStatus.APPROVED;\r\n        } else {\r\n            require(bytes(_rejectionReason).length > 0, \"Rejection reason required\");\r\n            claim.rejectionReason = _rejectionReason;\r\n            claim.status = ClaimStatus.REJECTED;\r\n        }\r\n        \r\n        claim.investigator = msg.sender;\r\n        \r\n        emit ClaimInvestigated(_claimId, msg.sender, _decision);\r\n    }\r\n    \r\n    /**\r\n     * @dev Pay approved claim\r\n     */\r\n    function payClaim(uint256 _claimId) external nonReentrant validClaim(_claimId) {\r\n        Claim storage claim = claims[_claimId];\r\n        require(claim.status == ClaimStatus.APPROVED, \"Claim not approved\");\r\n        \r\n        Policy storage policy = policies[claim.policyId];\r\n        InsurancePool storage pool = insurancePools[policy.insuranceType];\r\n        \r\n        require(pool.availableFunds >= claim.approvedAmount, \"Insufficient pool funds\");\r\n        \r\n        // Update claim status\r\n        claim.status = ClaimStatus.PAID;\r\n        claim.payoutDate = block.timestamp;\r\n        \r\n        // Update policy\r\n        policy.claimsCount++;\r\n        policy.totalClaimsAmount += claim.approvedAmount;\r\n        \r\n        // Update pool\r\n        pool.availableFunds -= claim.approvedAmount;\r\n        pool.totalClaims += claim.approvedAmount;\r\n        \r\n        // Transfer payment\r\n        payable(claim.claimant).transfer(claim.approvedAmount);\r\n        \r\n        emit ClaimPaid(_claimId, claim.claimant, claim.approvedAmount);\r\n    }\r\n    \r\n    // Staking Functions\r\n    \r\n    /**\r\n     * @dev Stake CELO to provide liquidity\r\n     */\r\n    function stake() external payable nonReentrant whenNotPaused {\r\n        require(msg.value >= MIN_STAKE_AMOUNT, \"Minimum stake amount not met\");\r\n        \r\n        StakeInfo storage stakeInfo = stakes[msg.sender];\r\n        \r\n        // Update rewards before modifying stake\r\n        if (stakeInfo.amount > 0) {\r\n            updateRewards(msg.sender);\r\n        }\r\n        \r\n        stakeInfo.amount += msg.value;\r\n        stakeInfo.stakingDate = block.timestamp;\r\n        stakeInfo.lastRewardUpdate = block.timestamp;\r\n        \r\n        // Distribute stake across all active pools equally\r\n        uint256 stakePerPool = msg.value / 5;\r\n        for (uint i = 0; i < 5; i++) {\r\n            InsuranceType insType = InsuranceType(i);\r\n            if (insurancePools[insType].active) {\r\n                insurancePools[insType].totalStaked += stakePerPool;\r\n                insurancePools[insType].availableFunds += stakePerPool;\r\n            }\r\n        }\r\n        \r\n        emit StakeDeposited(msg.sender, msg.value);\r\n    }\r\n    \r\n    /**\r\n     * @dev Withdraw stake\r\n     */\r\n    function withdrawStake(uint256 _amount) external nonReentrant {\r\n        StakeInfo storage stakeInfo = stakes[msg.sender];\r\n        require(stakeInfo.amount >= _amount, \"Insufficient stake\");\r\n        require(_amount > 0, \"Amount must be positive\");\r\n        \r\n        // Update rewards before withdrawal\r\n        updateRewards(msg.sender);\r\n        \r\n        // Check if withdrawal affects pool solvency\r\n        uint256 totalPoolFunds = getTotalPoolFunds();\r\n        uint256 totalCoverage = getTotalActiveCoverage();\r\n        require(totalPoolFunds - _amount >= (totalCoverage * MAX_COVERAGE_RATIO) / 100, \"Withdrawal would affect solvency\");\r\n        \r\n        stakeInfo.amount -= _amount;\r\n        \r\n        // Remove stake from pools proportionally\r\n        uint256 withdrawalPerPool = _amount / 5;\r\n        for (uint i = 0; i < 5; i++) {\r\n            InsuranceType insType = InsuranceType(i);\r\n            if (insurancePools[insType].totalStaked >= withdrawalPerPool) {\r\n                insurancePools[insType].totalStaked -= withdrawalPerPool;\r\n                insurancePools[insType].availableFunds -= withdrawalPerPool;\r\n            }\r\n        }\r\n        \r\n        payable(msg.sender).transfer(_amount);\r\n        \r\n        emit StakeWithdrawn(msg.sender, _amount);\r\n    }\r\n    \r\n    /**\r\n     * @dev Claim staking rewards\r\n     */\r\n    function claimRewards() external nonReentrant {\r\n        updateRewards(msg.sender);\r\n        \r\n        StakeInfo storage stakeInfo = stakes[msg.sender];\r\n        uint256 rewards = stakeInfo.rewardsEarned;\r\n        require(rewards > 0, \"No rewards to claim\");\r\n        \r\n        stakeInfo.rewardsEarned = 0;\r\n        \r\n        payable(msg.sender).transfer(rewards);\r\n        \r\n        emit RewardsClaimed(msg.sender, rewards);\r\n    }\r\n    \r\n    /**\r\n     * @dev Update staking rewards for a user\r\n     */\r\n    function updateRewards(address _staker) internal {\r\n        StakeInfo storage stakeInfo = stakes[_staker];\r\n        if (stakeInfo.amount == 0) return;\r\n        \r\n        uint256 timeElapsed = block.timestamp - stakeInfo.lastRewardUpdate;\r\n        uint256 annualReward = (stakeInfo.amount * 1000) / 10000; // 10% annual rate\r\n        uint256 reward = (annualReward * timeElapsed) / 365 days;\r\n        \r\n        stakeInfo.rewardsEarned += reward;\r\n        stakeInfo.lastRewardUpdate = block.timestamp;\r\n    }\r\n    \r\n    // View Functions\r\n    \r\n    /**\r\n     * @dev Get policy details\r\n     */\r\n    function getPolicy(uint256 _policyId) external view returns (Policy memory) {\r\n        return policies[_policyId];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get claim details\r\n     */\r\n    function getClaim(uint256 _claimId) external view returns (Claim memory) {\r\n        return claims[_claimId];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get user's policies\r\n     */\r\n    function getUserPolicies(address _user) external view returns (uint256[] memory) {\r\n        return userPolicies[_user];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get user's claims\r\n     */\r\n    function getUserClaims(address _user) external view returns (uint256[] memory) {\r\n        return userClaims[_user];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get stake information\r\n     */\r\n    function getStakeInfo(address _staker) external view returns (StakeInfo memory) {\r\n        return stakes[_staker];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get insurance pool information\r\n     */\r\n    function getInsurancePool(InsuranceType _type) external view returns (InsurancePool memory) {\r\n        return insurancePools[_type];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get total pool funds across all insurance types\r\n     */\r\n    function getTotalPoolFunds() public view returns (uint256) {\r\n        uint256 total = 0;\r\n        for (uint i = 0; i < 5; i++) {\r\n            total += insurancePools[InsuranceType(i)].availableFunds;\r\n        }\r\n        return total;\r\n    }\r\n    \r\n    /**\r\n     * @dev Get total active coverage across all policies\r\n     */\r\n    function getTotalActiveCoverage() public view returns (uint256) {\r\n        uint256 total = 0;\r\n        for (uint256 i = 1; i < nextPolicyId; i++) {\r\n            if (policies[i].status == PolicyStatus.ACTIVE && block.timestamp <= policies[i].endDate) {\r\n                total += policies[i].coverageAmount;\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n    \r\n    /**\r\n     * @dev Calculate pending rewards for a staker\r\n     */\r\n    function calculatePendingRewards(address _staker) external view returns (uint256) {\r\n        StakeInfo memory stakeInfo = stakes[_staker];\r\n        if (stakeInfo.amount == 0) return stakeInfo.rewardsEarned;\r\n        \r\n        uint256 timeElapsed = block.timestamp - stakeInfo.lastRewardUpdate;\r\n        uint256 annualReward = (stakeInfo.amount * 1000) / 10000; // 10% annual rate\r\n        uint256 newReward = (annualReward * timeElapsed) / 365 days;\r\n        \r\n        return stakeInfo.rewardsEarned + newReward;\r\n    }\r\n    \r\n    // Admin Functions\r\n    \r\n    /**\r\n     * @dev Add authorized investigator\r\n     */\r\n    function addInvestigator(address _investigator) external onlyOwner {\r\n        authorizedInvestigators[_investigator] = true;\r\n        emit InvestigatorAdded(_investigator);\r\n    }\r\n    \r\n    /**\r\n     * @dev Remove authorized investigator\r\n     */\r\n    function removeInvestigator(address _investigator) external onlyOwner {\r\n        authorizedInvestigators[_investigator] = false;\r\n    }\r\n    \r\n    /**\r\n     * @dev Add authorized oracle\r\n     */\r\n    function addOracle(address _oracle) external onlyOwner {\r\n        authorizedOracles[_oracle] = true;\r\n        emit OracleAdded(_oracle);\r\n    }\r\n    \r\n    /**\r\n     * @dev Remove authorized oracle\r\n     */\r\n    function removeOracle(address _oracle) external onlyOwner {\r\n        authorizedOracles[_oracle] = false;\r\n    }\r\n    \r\n    /**\r\n     * @dev Update premium rates\r\n     */\r\n    function updatePremiumRate(\r\n        InsuranceType _type,\r\n        RiskLevel _risk,\r\n        uint256 _rate\r\n    ) external onlyOwner {\r\n        require(_rate <= 5000, \"Rate cannot exceed 50%\");\r\n        premiumRates[_type][_risk] = _rate;\r\n    }\r\n    \r\n    /**\r\n     * @dev Update pool reward rate\r\n     */\r\n    function updatePoolRewardRate(InsuranceType _type, uint256 _rate) external onlyOwner {\r\n        require(_rate <= 2000, \"Rate cannot exceed 20%\");\r\n        insurancePools[_type].rewardRate = _rate;\r\n    }\r\n    \r\n    /**\r\n     * @dev Toggle insurance pool active status\r\n     */\r\n    function togglePoolStatus(InsuranceType _type) external onlyOwner {\r\n        insurancePools[_type].active = !insurancePools[_type].active;\r\n    }\r\n    \r\n    /**\r\n     * @dev Emergency pause\r\n     */\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n    \r\n    /**\r\n     * @dev Unpause\r\n     */\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n    \r\n    /**\r\n     * @dev Oracle function to automatically approve small claims\r\n     */\r\n    function oracleApproveClaim(uint256 _claimId, uint256 _approvedAmount) external onlyOracle validClaim(_claimId) {\r\n        Claim storage claim = claims[_claimId];\r\n        require(claim.status == ClaimStatus.PENDING, \"Claim not pending\");\r\n        require(_approvedAmount <= claim.claimAmount, \"Approved amount exceeds claim\");\r\n        require(_approvedAmount <= 1000 ether, \"Oracle approval limit exceeded\"); // 1000 CELO limit\r\n        \r\n        claim.status = ClaimStatus.APPROVED;\r\n        claim.approvedAmount = _approvedAmount;\r\n        claim.investigator = msg.sender;\r\n        \r\n        emit ClaimInvestigated(_claimId, msg.sender, ClaimStatus.APPROVED);\r\n    }\r\n    \r\n    /**\r\n     * @dev Report fraud (reduces claimant's future coverage and applies penalty)\r\n     */\r\n    function reportFraud(uint256 _claimId) external onlyInvestigator validClaim(_claimId) {\r\n        Claim storage claim = claims[_claimId];\r\n        require(claim.status == ClaimStatus.REJECTED, \"Claim must be rejected first\");\r\n        \r\n        // Apply fraud penalty - reduce future coverage for this address\r\n        // This is a simplified implementation; in practice, you'd want more sophisticated fraud tracking\r\n        \r\n        emit FraudDetected(_claimId, claim.claimant);\r\n    }\r\n    \r\n    // Emergency withdrawal for contract upgrades (only owner)\r\n    function emergencyWithdraw() external onlyOwner {\r\n        payable(owner()).transfer(address(this).balance);\r\n    }\r\n    \r\n    // Receive function to accept CELO\r\n    receive() external payable {\r\n        // Allow contract to receive CELO for staking and premiums\r\n    }\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              177
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 178,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 177,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 177,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                177
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 159,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              177
            ]
          },
          "id": 178,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:1"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:1",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 177,
              "linearizedBaseContracts": [
                177
              ],
              "name": "Context",
              "nameLocation": "642:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 158,
                    "nodeType": "Block",
                    "src": "718:34:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 155,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 154,
                        "id": 157,
                        "nodeType": "Return",
                        "src": "728:17:1"
                      }
                    ]
                  },
                  "id": 159,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:1"
                  },
                  "returnParameters": {
                    "id": 154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "709:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:1"
                  },
                  "scope": 177,
                  "src": "656:96:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "825:32:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 164,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:1",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 163,
                        "id": 166,
                        "nodeType": "Return",
                        "src": "835:15:1"
                      }
                    ]
                  },
                  "id": 168,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:1"
                  },
                  "returnParameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "809:14:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:1"
                  },
                  "scope": 177,
                  "src": "758:99:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 175,
                    "nodeType": "Block",
                    "src": "935:25:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 172,
                        "id": 174,
                        "nodeType": "Return",
                        "src": "945:8:1"
                      }
                    ]
                  },
                  "id": 176,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:1"
                  },
                  "returnParameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "926:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:1"
                  },
                  "scope": 177,
                  "src": "863:97:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 178,
              "src": "624:338:1",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              177
            ],
            "Pausable": [
              285
            ]
          },
          "id": 286,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 179,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 181,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 286,
              "sourceUnit": 178,
              "src": "128:45:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 180,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 177,
                    "src": "136:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 183,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 177,
                    "src": "645:7:2"
                  },
                  "id": 184,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:2"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 182,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:2",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 285,
              "linearizedBaseContracts": [
                285,
                177
              ],
              "name": "Pausable",
              "nameLocation": "633:8:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "659:20:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 187,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:2",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 191,
                  "name": "Paused",
                  "nameLocation": "770:6:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 189,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "777:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:2"
                  },
                  "src": "764:30:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 192,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:2",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 196,
                  "name": "Unpaused",
                  "nameLocation": "881:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 194,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "890:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:2"
                  },
                  "src": "875:32:2"
                },
                {
                  "documentation": {
                    "id": 197,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:2",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 199,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:2"
                  },
                  "src": "994:22:2"
                },
                {
                  "documentation": {
                    "id": 200,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:2",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 202,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:2"
                  },
                  "src": "1107:22:2"
                },
                {
                  "body": {
                    "id": 209,
                    "nodeType": "Block",
                    "src": "1340:47:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 205,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "1350:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 207,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:2"
                      },
                      {
                        "id": 208,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 203,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:2",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 210,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 204,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:2"
                  },
                  "src": "1315:72:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 217,
                    "nodeType": "Block",
                    "src": "1587:44:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 213,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "1597:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:2"
                      },
                      {
                        "id": 216,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 211,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:2",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 218,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:2"
                  },
                  "src": "1565:66:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 226,
                    "nodeType": "Block",
                    "src": "1779:31:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 224,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "1796:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 223,
                        "id": 225,
                        "nodeType": "Return",
                        "src": "1789:14:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 219,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:2",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 227,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:2"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "1773:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:2"
                  },
                  "scope": 285,
                  "src": "1726:84:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 238,
                    "nodeType": "Block",
                    "src": "1929:77:2",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 231,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "1943:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 237,
                        "nodeType": "IfStatement",
                        "src": "1939:61:2",
                        "trueBody": {
                          "id": 236,
                          "nodeType": "Block",
                          "src": "1953:47:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 233,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 199,
                                  "src": "1974:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 235,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 228,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:2",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 239,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:2"
                  },
                  "returnParameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:2"
                  },
                  "scope": 285,
                  "src": "1878:128:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 251,
                    "nodeType": "Block",
                    "src": "2126:78:2",
                    "statements": [
                      {
                        "condition": {
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:2",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 243,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "2141:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 250,
                        "nodeType": "IfStatement",
                        "src": "2136:62:2",
                        "trueBody": {
                          "id": 249,
                          "nodeType": "Block",
                          "src": "2151:47:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 246,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 202,
                                  "src": "2172:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 248,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 240,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:2",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 252,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:2"
                  },
                  "returnParameters": {
                    "id": 242,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:2"
                  },
                  "scope": 285,
                  "src": "2078:126:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 267,
                    "nodeType": "Block",
                    "src": "2388:66:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 258,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "2398:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 261,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 263,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 159,
                                "src": "2434:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 262,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "2427:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 266,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 253,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:2",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 268,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 256,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 255,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 210,
                        "src": "2374:13:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:2"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 254,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:2"
                  },
                  "returnParameters": {
                    "id": 257,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:2"
                  },
                  "scope": 285,
                  "src": "2339:115:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 283,
                    "nodeType": "Block",
                    "src": "2634:69:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 274,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "2644:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 277,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 279,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 159,
                                "src": "2683:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 278,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "2674:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 282,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 269,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:2",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 284,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 272,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 271,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "2623:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:2"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:2"
                  },
                  "returnParameters": {
                    "id": 273,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:2"
                  },
                  "scope": 285,
                  "src": "2586:117:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 286,
              "src": "615:2090:2",
              "usedErrors": [
                199,
                202
              ],
              "usedEvents": [
                191,
                196
              ]
            }
          ],
          "src": "102:2604:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              354
            ]
          },
          "id": 355,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 287,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:3"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 288,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:3",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 354,
              "linearizedBaseContracts": [
                354
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 291,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "1818:40:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 294,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "1864:36:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 296,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "1907:23:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 297,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:3",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 299,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:3"
                  },
                  "src": "1994:37:3"
                },
                {
                  "body": {
                    "id": 306,
                    "nodeType": "Block",
                    "src": "2051:38:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 302,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "2061:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 303,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "2071:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 305,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:3"
                      }
                    ]
                  },
                  "id": 307,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 300,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:3"
                  },
                  "returnParameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:3"
                  },
                  "scope": 354,
                  "src": "2037:52:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 317,
                    "nodeType": "Block",
                    "src": "2490:79:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 310,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 334,
                            "src": "2500:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 312,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:3"
                      },
                      {
                        "id": 313,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:3"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 314,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "2542:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 316,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 308,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:3",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 318,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 309,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:3"
                  },
                  "src": "2466:103:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 333,
                    "nodeType": "Block",
                    "src": "2614:268:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 321,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "2702:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 322,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "2713:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 328,
                        "nodeType": "IfStatement",
                        "src": "2698:86:3",
                        "trueBody": {
                          "id": 327,
                          "nodeType": "Block",
                          "src": "2722:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 324,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "2743:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 326,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 329,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "2858:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 330,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "2868:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 332,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:3"
                      }
                    ]
                  },
                  "id": 334,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:3"
                  },
                  "returnParameters": {
                    "id": 320,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:3"
                  },
                  "scope": 354,
                  "src": "2575:307:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 341,
                    "nodeType": "Block",
                    "src": "2926:170:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 337,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "3068:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 338,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "3078:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 340,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:3"
                      }
                    ]
                  },
                  "id": 342,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 335,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:3"
                  },
                  "returnParameters": {
                    "id": 336,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:3"
                  },
                  "scope": 354,
                  "src": "2888:208:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 352,
                    "nodeType": "Block",
                    "src": "3339:42:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 348,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "3356:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 349,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "3367:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 347,
                        "id": 351,
                        "nodeType": "Return",
                        "src": "3349:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 343,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:3",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 353,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:3"
                  },
                  "returnParameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "3333:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:3"
                  },
                  "scope": 354,
                  "src": "3275:106:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 355,
              "src": "1030:2353:3",
              "usedErrors": [
                299
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:3"
        },
        "id": 3
      },
      "contracts/DecentralizedInsurance.sol": {
        "ast": {
          "absolutePath": "contracts/DecentralizedInsurance.sol",
          "exportedSymbols": {
            "Context": [
              177
            ],
            "DecentralizedInsurance": [
              2333
            ],
            "Ownable": [
              147
            ],
            "Pausable": [
              285
            ],
            "ReentrancyGuard": [
              354
            ]
          },
          "id": 2334,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 356,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 357,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2334,
              "sourceUnit": 148,
              "src": "61:52:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 358,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2334,
              "sourceUnit": 355,
              "src": "115:59:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 359,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2334,
              "sourceUnit": 286,
              "src": "176:52:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 361,
                    "name": "Ownable",
                    "nameLocations": [
                      "505:7:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "505:7:4"
                  },
                  "id": 362,
                  "nodeType": "InheritanceSpecifier",
                  "src": "505:7:4"
                },
                {
                  "baseName": {
                    "id": 363,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "514:15:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 354,
                    "src": "514:15:4"
                  },
                  "id": 364,
                  "nodeType": "InheritanceSpecifier",
                  "src": "514:15:4"
                },
                {
                  "baseName": {
                    "id": 365,
                    "name": "Pausable",
                    "nameLocations": [
                      "531:8:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 285,
                    "src": "531:8:4"
                  },
                  "id": 366,
                  "nodeType": "InheritanceSpecifier",
                  "src": "531:8:4"
                }
              ],
              "canonicalName": "DecentralizedInsurance",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 360,
                "nodeType": "StructuredDocumentation",
                "src": "232:236:4",
                "text": " @title DecentralizedInsurance\n @dev A comprehensive decentralized insurance platform supporting multiple coverage types\n Features: Premium calculation, claims processing, staking pools, governance, and fraud detection"
              },
              "fullyImplemented": true,
              "id": 2333,
              "linearizedBaseContracts": [
                2333,
                285,
                354,
                147,
                177
              ],
              "name": "DecentralizedInsurance",
              "nameLocation": "479:22:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "DecentralizedInsurance.InsuranceType",
                  "id": 372,
                  "members": [
                    {
                      "id": 367,
                      "name": "HEALTH",
                      "nameLocation": "598:6:4",
                      "nodeType": "EnumValue",
                      "src": "598:6:4"
                    },
                    {
                      "id": 368,
                      "name": "PROPERTY",
                      "nameLocation": "606:8:4",
                      "nodeType": "EnumValue",
                      "src": "606:8:4"
                    },
                    {
                      "id": 369,
                      "name": "TRAVEL",
                      "nameLocation": "616:6:4",
                      "nodeType": "EnumValue",
                      "src": "616:6:4"
                    },
                    {
                      "id": 370,
                      "name": "CRYPTO",
                      "nameLocation": "624:6:4",
                      "nodeType": "EnumValue",
                      "src": "624:6:4"
                    },
                    {
                      "id": 371,
                      "name": "LIFE",
                      "nameLocation": "632:4:4",
                      "nodeType": "EnumValue",
                      "src": "632:4:4"
                    }
                  ],
                  "name": "InsuranceType",
                  "nameLocation": "582:13:4",
                  "nodeType": "EnumDefinition",
                  "src": "577:61:4"
                },
                {
                  "canonicalName": "DecentralizedInsurance.PolicyStatus",
                  "id": 377,
                  "members": [
                    {
                      "id": 373,
                      "name": "ACTIVE",
                      "nameLocation": "692:6:4",
                      "nodeType": "EnumValue",
                      "src": "692:6:4"
                    },
                    {
                      "id": 374,
                      "name": "EXPIRED",
                      "nameLocation": "700:7:4",
                      "nodeType": "EnumValue",
                      "src": "700:7:4"
                    },
                    {
                      "id": 375,
                      "name": "CANCELLED",
                      "nameLocation": "709:9:4",
                      "nodeType": "EnumValue",
                      "src": "709:9:4"
                    },
                    {
                      "id": 376,
                      "name": "CLAIMED",
                      "nameLocation": "720:7:4",
                      "nodeType": "EnumValue",
                      "src": "720:7:4"
                    }
                  ],
                  "name": "PolicyStatus",
                  "nameLocation": "677:12:4",
                  "nodeType": "EnumDefinition",
                  "src": "672:57:4"
                },
                {
                  "canonicalName": "DecentralizedInsurance.ClaimStatus",
                  "id": 383,
                  "members": [
                    {
                      "id": 378,
                      "name": "PENDING",
                      "nameLocation": "781:7:4",
                      "nodeType": "EnumValue",
                      "src": "781:7:4"
                    },
                    {
                      "id": 379,
                      "name": "INVESTIGATING",
                      "nameLocation": "790:13:4",
                      "nodeType": "EnumValue",
                      "src": "790:13:4"
                    },
                    {
                      "id": 380,
                      "name": "APPROVED",
                      "nameLocation": "805:8:4",
                      "nodeType": "EnumValue",
                      "src": "805:8:4"
                    },
                    {
                      "id": 381,
                      "name": "REJECTED",
                      "nameLocation": "815:8:4",
                      "nodeType": "EnumValue",
                      "src": "815:8:4"
                    },
                    {
                      "id": 382,
                      "name": "PAID",
                      "nameLocation": "825:4:4",
                      "nodeType": "EnumValue",
                      "src": "825:4:4"
                    }
                  ],
                  "name": "ClaimStatus",
                  "nameLocation": "767:11:4",
                  "nodeType": "EnumDefinition",
                  "src": "762:69:4"
                },
                {
                  "canonicalName": "DecentralizedInsurance.RiskLevel",
                  "id": 388,
                  "members": [
                    {
                      "id": 384,
                      "name": "LOW",
                      "nameLocation": "880:3:4",
                      "nodeType": "EnumValue",
                      "src": "880:3:4"
                    },
                    {
                      "id": 385,
                      "name": "MEDIUM",
                      "nameLocation": "885:6:4",
                      "nodeType": "EnumValue",
                      "src": "885:6:4"
                    },
                    {
                      "id": 386,
                      "name": "HIGH",
                      "nameLocation": "893:4:4",
                      "nodeType": "EnumValue",
                      "src": "893:4:4"
                    },
                    {
                      "id": 387,
                      "name": "CRITICAL",
                      "nameLocation": "899:8:4",
                      "nodeType": "EnumValue",
                      "src": "899:8:4"
                    }
                  ],
                  "name": "RiskLevel",
                  "nameLocation": "868:9:4",
                  "nodeType": "EnumDefinition",
                  "src": "863:46:4"
                },
                {
                  "canonicalName": "DecentralizedInsurance.Policy",
                  "id": 416,
                  "members": [
                    {
                      "constant": false,
                      "id": 390,
                      "mutability": "mutable",
                      "name": "policyId",
                      "nameLocation": "954:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "946:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 389,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "946:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 392,
                      "mutability": "mutable",
                      "name": "policyholder",
                      "nameLocation": "981:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "973:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 391,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "973:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 395,
                      "mutability": "mutable",
                      "name": "insuranceType",
                      "nameLocation": "1018:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "1004:27:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InsuranceType_$372",
                        "typeString": "enum DecentralizedInsurance.InsuranceType"
                      },
                      "typeName": {
                        "id": 394,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 393,
                          "name": "InsuranceType",
                          "nameLocations": [
                            "1004:13:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 372,
                          "src": "1004:13:4"
                        },
                        "referencedDeclaration": 372,
                        "src": "1004:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InsuranceType_$372",
                          "typeString": "enum DecentralizedInsurance.InsuranceType"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 397,
                      "mutability": "mutable",
                      "name": "coverageAmount",
                      "nameLocation": "1050:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "1042:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 396,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1042:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 399,
                      "mutability": "mutable",
                      "name": "premiumAmount",
                      "nameLocation": "1083:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "1075:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 398,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1075:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 401,
                      "mutability": "mutable",
                      "name": "startDate",
                      "nameLocation": "1115:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "1107:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 400,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1107:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 403,
                      "mutability": "mutable",
                      "name": "endDate",
                      "nameLocation": "1143:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "1135:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 402,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1135:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 406,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "1174:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "1161:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$377",
                        "typeString": "enum DecentralizedInsurance.PolicyStatus"
                      },
                      "typeName": {
                        "id": 405,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 404,
                          "name": "PolicyStatus",
                          "nameLocations": [
                            "1161:12:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 377,
                          "src": "1161:12:4"
                        },
                        "referencedDeclaration": 377,
                        "src": "1161:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PolicyStatus_$377",
                          "typeString": "enum DecentralizedInsurance.PolicyStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 409,
                      "mutability": "mutable",
                      "name": "riskLevel",
                      "nameLocation": "1201:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "1191:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RiskLevel_$388",
                        "typeString": "enum DecentralizedInsurance.RiskLevel"
                      },
                      "typeName": {
                        "id": 408,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 407,
                          "name": "RiskLevel",
                          "nameLocations": [
                            "1191:9:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 388,
                          "src": "1191:9:4"
                        },
                        "referencedDeclaration": 388,
                        "src": "1191:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RiskLevel_$388",
                          "typeString": "enum DecentralizedInsurance.RiskLevel"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 411,
                      "mutability": "mutable",
                      "name": "metadataURI",
                      "nameLocation": "1228:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "1221:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 410,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1221:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 413,
                      "mutability": "mutable",
                      "name": "claimsCount",
                      "nameLocation": "1290:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "1282:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 412,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1282:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 415,
                      "mutability": "mutable",
                      "name": "totalClaimsAmount",
                      "nameLocation": "1320:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "1312:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 414,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1312:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Policy",
                  "nameLocation": "928:6:4",
                  "nodeType": "StructDefinition",
                  "scope": 2333,
                  "src": "921:424:4",
                  "visibility": "public"
                },
                {
                  "canonicalName": "DecentralizedInsurance.Claim",
                  "id": 442,
                  "members": [
                    {
                      "constant": false,
                      "id": 418,
                      "mutability": "mutable",
                      "name": "claimId",
                      "nameLocation": "1389:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "1381:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 417,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1381:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 420,
                      "mutability": "mutable",
                      "name": "policyId",
                      "nameLocation": "1415:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "1407:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 419,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1407:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 422,
                      "mutability": "mutable",
                      "name": "claimant",
                      "nameLocation": "1442:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "1434:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 421,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1434:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 424,
                      "mutability": "mutable",
                      "name": "claimAmount",
                      "nameLocation": "1469:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "1461:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 423,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1461:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "submissionDate",
                      "nameLocation": "1499:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "1491:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1491:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 428,
                      "mutability": "mutable",
                      "name": "investigationDeadline",
                      "nameLocation": "1532:21:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "1524:29:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 427,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1524:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 431,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "1576:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "1564:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimStatus_$383",
                        "typeString": "enum DecentralizedInsurance.ClaimStatus"
                      },
                      "typeName": {
                        "id": 430,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 429,
                          "name": "ClaimStatus",
                          "nameLocations": [
                            "1564:11:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 383,
                          "src": "1564:11:4"
                        },
                        "referencedDeclaration": 383,
                        "src": "1564:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ClaimStatus_$383",
                          "typeString": "enum DecentralizedInsurance.ClaimStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 433,
                      "mutability": "mutable",
                      "name": "evidenceURI",
                      "nameLocation": "1600:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "1593:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 432,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1593:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "rejectionReason",
                      "nameLocation": "1661:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "1654:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1654:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 437,
                      "mutability": "mutable",
                      "name": "approvedAmount",
                      "nameLocation": "1695:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "1687:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 436,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1687:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 439,
                      "mutability": "mutable",
                      "name": "payoutDate",
                      "nameLocation": "1728:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "1720:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 438,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1720:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 441,
                      "mutability": "mutable",
                      "name": "investigator",
                      "nameLocation": "1757:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "1749:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 440,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1749:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Claim",
                  "nameLocation": "1364:5:4",
                  "nodeType": "StructDefinition",
                  "scope": 2333,
                  "src": "1357:420:4",
                  "visibility": "public"
                },
                {
                  "canonicalName": "DecentralizedInsurance.StakeInfo",
                  "id": 451,
                  "members": [
                    {
                      "constant": false,
                      "id": 444,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1825:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 451,
                      "src": "1817:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 443,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1817:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 446,
                      "mutability": "mutable",
                      "name": "stakingDate",
                      "nameLocation": "1850:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 451,
                      "src": "1842:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 445,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1842:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 448,
                      "mutability": "mutable",
                      "name": "rewardsEarned",
                      "nameLocation": "1880:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 451,
                      "src": "1872:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 447,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1872:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 450,
                      "mutability": "mutable",
                      "name": "lastRewardUpdate",
                      "nameLocation": "1912:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 451,
                      "src": "1904:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 449,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1904:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "StakeInfo",
                  "nameLocation": "1796:9:4",
                  "nodeType": "StructDefinition",
                  "scope": 2333,
                  "src": "1789:147:4",
                  "visibility": "public"
                },
                {
                  "canonicalName": "DecentralizedInsurance.InsurancePool",
                  "id": 462,
                  "members": [
                    {
                      "constant": false,
                      "id": 453,
                      "mutability": "mutable",
                      "name": "totalStaked",
                      "nameLocation": "1988:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 462,
                      "src": "1980:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1980:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 455,
                      "mutability": "mutable",
                      "name": "totalClaims",
                      "nameLocation": "2018:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 462,
                      "src": "2010:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 454,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2010:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 457,
                      "mutability": "mutable",
                      "name": "availableFunds",
                      "nameLocation": "2048:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 462,
                      "src": "2040:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 456,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2040:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 459,
                      "mutability": "mutable",
                      "name": "rewardRate",
                      "nameLocation": "2081:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 462,
                      "src": "2073:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 458,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2073:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 461,
                      "mutability": "mutable",
                      "name": "active",
                      "nameLocation": "2151:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 462,
                      "src": "2146:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 460,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2146:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "InsurancePool",
                  "nameLocation": "1955:13:4",
                  "nodeType": "StructDefinition",
                  "scope": 2333,
                  "src": "1948:217:4",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 465,
                  "mutability": "mutable",
                  "name": "nextPolicyId",
                  "nameLocation": "2217:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2201:32:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2201:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2232:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 468,
                  "mutability": "mutable",
                  "name": "nextClaimId",
                  "nameLocation": "2256:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2240:31:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2270:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "d3e89483",
                  "id": 473,
                  "mutability": "mutable",
                  "name": "policies",
                  "nameLocation": "2335:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2301:42:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$416_storage_$",
                    "typeString": "mapping(uint256 => struct DecentralizedInsurance.Policy)"
                  },
                  "typeName": {
                    "id": 472,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 469,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2309:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2301:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$416_storage_$",
                      "typeString": "mapping(uint256 => struct DecentralizedInsurance.Policy)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 471,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 470,
                        "name": "Policy",
                        "nameLocations": [
                          "2320:6:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 416,
                        "src": "2320:6:4"
                      },
                      "referencedDeclaration": 416,
                      "src": "2320:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$416_storage_ptr",
                        "typeString": "struct DecentralizedInsurance.Policy"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a888c2cd",
                  "id": 478,
                  "mutability": "mutable",
                  "name": "claims",
                  "nameLocation": "2383:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2350:39:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$442_storage_$",
                    "typeString": "mapping(uint256 => struct DecentralizedInsurance.Claim)"
                  },
                  "typeName": {
                    "id": 477,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 474,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2358:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2350:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$442_storage_$",
                      "typeString": "mapping(uint256 => struct DecentralizedInsurance.Claim)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 476,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 475,
                        "name": "Claim",
                        "nameLocations": [
                          "2369:5:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 442,
                        "src": "2369:5:4"
                      },
                      "referencedDeclaration": 442,
                      "src": "2369:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                        "typeString": "struct DecentralizedInsurance.Claim"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3d36adc5",
                  "id": 483,
                  "mutability": "mutable",
                  "name": "userPolicies",
                  "nameLocation": "2433:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2396:49:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 482,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 479,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2404:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2396:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 480,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2415:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 481,
                      "nodeType": "ArrayTypeName",
                      "src": "2415:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ca9748ea",
                  "id": 488,
                  "mutability": "mutable",
                  "name": "userClaims",
                  "nameLocation": "2489:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2452:47:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 487,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 484,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2460:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2452:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 485,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2471:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 486,
                      "nodeType": "ArrayTypeName",
                      "src": "2471:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "16934fc4",
                  "id": 493,
                  "mutability": "mutable",
                  "name": "stakes",
                  "nameLocation": "2543:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2506:43:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$451_storage_$",
                    "typeString": "mapping(address => struct DecentralizedInsurance.StakeInfo)"
                  },
                  "typeName": {
                    "id": 492,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 489,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2514:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2506:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$451_storage_$",
                      "typeString": "mapping(address => struct DecentralizedInsurance.StakeInfo)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 491,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 490,
                        "name": "StakeInfo",
                        "nameLocations": [
                          "2525:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 451,
                        "src": "2525:9:4"
                      },
                      "referencedDeclaration": 451,
                      "src": "2525:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                        "typeString": "struct DecentralizedInsurance.StakeInfo"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "1988a684",
                  "id": 499,
                  "mutability": "mutable",
                  "name": "insurancePools",
                  "nameLocation": "2603:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2556:61:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                    "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool)"
                  },
                  "typeName": {
                    "id": 498,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 495,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 494,
                        "name": "InsuranceType",
                        "nameLocations": [
                          "2564:13:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 372,
                        "src": "2564:13:4"
                      },
                      "referencedDeclaration": 372,
                      "src": "2564:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InsuranceType_$372",
                        "typeString": "enum DecentralizedInsurance.InsuranceType"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2556:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                      "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 497,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 496,
                        "name": "InsurancePool",
                        "nameLocations": [
                          "2581:13:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 462,
                        "src": "2581:13:4"
                      },
                      "referencedDeclaration": 462,
                      "src": "2581:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InsurancePool_$462_storage_ptr",
                        "typeString": "struct DecentralizedInsurance.InsurancePool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "df9e9de8",
                  "id": 503,
                  "mutability": "mutable",
                  "name": "authorizedInvestigators",
                  "nameLocation": "2656:23:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2624:55:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 502,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 500,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2632:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2624:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 501,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2643:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "61c992a3",
                  "id": 507,
                  "mutability": "mutable",
                  "name": "authorizedOracles",
                  "nameLocation": "2718:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2686:49:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 506,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 504,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2694:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2686:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 505,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2705:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "5edcc348",
                  "id": 510,
                  "mutability": "constant",
                  "name": "INVESTIGATION_PERIOD",
                  "nameLocation": "2790:20:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2766:53:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2766:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "37",
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2813:6:4",
                    "subdenomination": "days",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_604800_by_1",
                      "typeString": "int_const 604800"
                    },
                    "value": "7"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "27ed7188",
                  "id": 513,
                  "mutability": "constant",
                  "name": "MIN_STAKE_AMOUNT",
                  "nameLocation": "2850:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2826:52:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2826:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313030",
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2869:9:4",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000000000_by_1",
                      "typeString": "int_const 100000000000000000000"
                    },
                    "value": "100"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "82670986",
                  "id": 516,
                  "mutability": "constant",
                  "name": "MAX_COVERAGE_RATIO",
                  "nameLocation": "2929:18:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2905:47:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3830",
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2950:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_80_by_1",
                      "typeString": "int_const 80"
                    },
                    "value": "80"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "238dcf88",
                  "id": 519,
                  "mutability": "constant",
                  "name": "FRAUD_PENALTY",
                  "nameLocation": "3023:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "2999:44:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2999:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31303030",
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3039:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "07efa984",
                  "id": 527,
                  "mutability": "mutable",
                  "name": "premiumRates",
                  "nameLocation": "3200:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "3137:75:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                    "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                  },
                  "typeName": {
                    "id": 526,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 521,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 520,
                        "name": "InsuranceType",
                        "nameLocations": [
                          "3145:13:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 372,
                        "src": "3145:13:4"
                      },
                      "referencedDeclaration": 372,
                      "src": "3145:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InsuranceType_$372",
                        "typeString": "enum DecentralizedInsurance.InsuranceType"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3137:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                      "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 525,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 523,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 522,
                          "name": "RiskLevel",
                          "nameLocations": [
                            "3170:9:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 388,
                          "src": "3170:9:4"
                        },
                        "referencedDeclaration": 388,
                        "src": "3170:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RiskLevel_$388",
                          "typeString": "enum DecentralizedInsurance.RiskLevel"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "3162:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                        "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 524,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3183:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "78e2ee02e1dd0cf71b75c6d5463946e0d324ca4b79fbd0b7e59ceffcf24654c1",
                  "id": 538,
                  "name": "PolicyCreated",
                  "nameLocation": "3246:13:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 529,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "policyId",
                        "nameLocation": "3276:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "3260:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 528,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3260:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 531,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "policyholder",
                        "nameLocation": "3302:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "3286:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3286:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 534,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "insuranceType",
                        "nameLocation": "3330:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "3316:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InsuranceType_$372",
                          "typeString": "enum DecentralizedInsurance.InsuranceType"
                        },
                        "typeName": {
                          "id": 533,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 532,
                            "name": "InsuranceType",
                            "nameLocations": [
                              "3316:13:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 372,
                            "src": "3316:13:4"
                          },
                          "referencedDeclaration": 372,
                          "src": "3316:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_InsuranceType_$372",
                            "typeString": "enum DecentralizedInsurance.InsuranceType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "coverageAmount",
                        "nameLocation": "3353:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "3345:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3345:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3259:109:4"
                  },
                  "src": "3240:129:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "fbf1458fbbddabb878de144276216e8ccda619cbac2d598e6ee37ff72173afb1",
                  "id": 546,
                  "name": "PremiumPaid",
                  "nameLocation": "3381:11:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 540,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "policyId",
                        "nameLocation": "3409:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "3393:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 539,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3393:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 542,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "policyholder",
                        "nameLocation": "3435:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "3419:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 541,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3419:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 544,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3457:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "3449:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 543,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3449:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3392:72:4"
                  },
                  "src": "3375:90:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "3a30d1c4069e097873e77443df9683e8de5c7ba3674315b8670a0211e3130195",
                  "id": 556,
                  "name": "ClaimSubmitted",
                  "nameLocation": "3477:14:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 555,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 548,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "claimId",
                        "nameLocation": "3508:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "3492:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 547,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3492:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 550,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "policyId",
                        "nameLocation": "3533:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "3517:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3517:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 552,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "claimant",
                        "nameLocation": "3559:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "3543:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 551,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3543:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 554,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3577:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "3569:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 553,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3569:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3491:93:4"
                  },
                  "src": "3471:114:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "00798eecabd6c187fcaa9108de48cf1a34f2d65b6eead4797edcd67fb73ee6c1",
                  "id": 565,
                  "name": "ClaimInvestigated",
                  "nameLocation": "3597:17:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 564,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 558,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "claimId",
                        "nameLocation": "3631:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 565,
                        "src": "3615:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 557,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3615:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 560,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "investigator",
                        "nameLocation": "3656:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 565,
                        "src": "3640:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3640:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 563,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "3682:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 565,
                        "src": "3670:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ClaimStatus_$383",
                          "typeString": "enum DecentralizedInsurance.ClaimStatus"
                        },
                        "typeName": {
                          "id": 562,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 561,
                            "name": "ClaimStatus",
                            "nameLocations": [
                              "3670:11:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 383,
                            "src": "3670:11:4"
                          },
                          "referencedDeclaration": 383,
                          "src": "3670:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ClaimStatus_$383",
                            "typeString": "enum DecentralizedInsurance.ClaimStatus"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3614:75:4"
                  },
                  "src": "3591:99:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "af3c8fdd75d667f71d36d7840b8ef9086c516c9b047ad6a83a5a66151342123a",
                  "id": 573,
                  "name": "ClaimPaid",
                  "nameLocation": "3702:9:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 567,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "claimId",
                        "nameLocation": "3728:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 573,
                        "src": "3712:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3712:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 569,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "claimant",
                        "nameLocation": "3753:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 573,
                        "src": "3737:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3737:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 571,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3771:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 573,
                        "src": "3763:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3763:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3711:67:4"
                  },
                  "src": "3696:83:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc2",
                  "id": 579,
                  "name": "StakeDeposited",
                  "nameLocation": "3791:14:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 575,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "staker",
                        "nameLocation": "3822:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 579,
                        "src": "3806:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 574,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3806:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 577,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3838:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 579,
                        "src": "3830:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3830:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3805:40:4"
                  },
                  "src": "3785:61:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc",
                  "id": 585,
                  "name": "StakeWithdrawn",
                  "nameLocation": "3858:14:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 584,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 581,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "staker",
                        "nameLocation": "3889:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "3873:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 580,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3873:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 583,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3905:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "3897:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 582,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3897:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3872:40:4"
                  },
                  "src": "3852:61:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe",
                  "id": 591,
                  "name": "RewardsClaimed",
                  "nameLocation": "3925:14:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 587,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "staker",
                        "nameLocation": "3956:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 591,
                        "src": "3940:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3940:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 589,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3972:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 591,
                        "src": "3964:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3964:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3939:40:4"
                  },
                  "src": "3919:61:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9b401e423fa8d3194b83fa5c9a9ddc45e0ae9d32daddd773ae631cc29b7be0ff",
                  "id": 595,
                  "name": "InvestigatorAdded",
                  "nameLocation": "3992:17:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 594,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 593,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "investigator",
                        "nameLocation": "4026:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "4010:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4010:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4009:30:4"
                  },
                  "src": "3986:54:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "0047706786c922d17b39285dc59d696bafea72c0b003d3841ae1202076f4c2e4",
                  "id": 599,
                  "name": "OracleAdded",
                  "nameLocation": "4052:11:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 598,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 597,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oracle",
                        "nameLocation": "4080:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 599,
                        "src": "4064:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 596,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4064:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4063:24:4"
                  },
                  "src": "4046:42:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d333905bc6384a6f4b921b01917e6ee525790cae96dbdc5d4f60cb7efb594244",
                  "id": 605,
                  "name": "FraudDetected",
                  "nameLocation": "4100:13:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 601,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "claimId",
                        "nameLocation": "4130:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 605,
                        "src": "4114:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 600,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4114:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 603,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "claimant",
                        "nameLocation": "4155:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 605,
                        "src": "4139:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4139:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4113:51:4"
                  },
                  "src": "4094:71:4"
                },
                {
                  "body": {
                    "id": 843,
                    "nodeType": "Block",
                    "src": "4211:2204:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 612,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "4315:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 617,
                              "indexExpression": {
                                "expression": {
                                  "id": 613,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "4328:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4342:6:4",
                                "memberName": "HEALTH",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 367,
                                "src": "4328:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4315:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 618,
                            "indexExpression": {
                              "expression": {
                                "id": 615,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "4350:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4360:3:4",
                              "memberName": "LOW",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 384,
                              "src": "4350:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4315:49:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "323030",
                            "id": 619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4367:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "value": "200"
                          },
                          "src": "4315:55:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 621,
                        "nodeType": "ExpressionStatement",
                        "src": "4315:55:4"
                      },
                      {
                        "expression": {
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 622,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "4390:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 627,
                              "indexExpression": {
                                "expression": {
                                  "id": 623,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "4403:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 624,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4417:6:4",
                                "memberName": "HEALTH",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 367,
                                "src": "4403:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4390:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 628,
                            "indexExpression": {
                              "expression": {
                                "id": 625,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "4425:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4435:6:4",
                              "memberName": "MEDIUM",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 385,
                              "src": "4425:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4390:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "343030",
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4445:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_400_by_1",
                              "typeString": "int_const 400"
                            },
                            "value": "400"
                          },
                          "src": "4390:58:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 631,
                        "nodeType": "ExpressionStatement",
                        "src": "4390:58:4"
                      },
                      {
                        "expression": {
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 632,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "4465:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 637,
                              "indexExpression": {
                                "expression": {
                                  "id": 633,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "4478:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4492:6:4",
                                "memberName": "HEALTH",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 367,
                                "src": "4478:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4465:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 638,
                            "indexExpression": {
                              "expression": {
                                "id": 635,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "4500:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4510:4:4",
                              "memberName": "HIGH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 386,
                              "src": "4500:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4465:50:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "383030",
                            "id": 639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4518:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_800_by_1",
                              "typeString": "int_const 800"
                            },
                            "value": "800"
                          },
                          "src": "4465:56:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 641,
                        "nodeType": "ExpressionStatement",
                        "src": "4465:56:4"
                      },
                      {
                        "expression": {
                          "id": 650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 642,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "4540:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 647,
                              "indexExpression": {
                                "expression": {
                                  "id": 643,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "4553:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 644,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4567:6:4",
                                "memberName": "HEALTH",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 367,
                                "src": "4553:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4540:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 648,
                            "indexExpression": {
                              "expression": {
                                "id": 645,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "4575:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4585:8:4",
                              "memberName": "CRITICAL",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 387,
                              "src": "4575:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4540:54:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31353030",
                            "id": 649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4597:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1500_by_1",
                              "typeString": "int_const 1500"
                            },
                            "value": "1500"
                          },
                          "src": "4540:61:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 651,
                        "nodeType": "ExpressionStatement",
                        "src": "4540:61:4"
                      },
                      {
                        "expression": {
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 652,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "4660:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 657,
                              "indexExpression": {
                                "expression": {
                                  "id": 653,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "4673:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4687:8:4",
                                "memberName": "PROPERTY",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 368,
                                "src": "4673:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4660:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 658,
                            "indexExpression": {
                              "expression": {
                                "id": 655,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "4697:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4707:3:4",
                              "memberName": "LOW",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 384,
                              "src": "4697:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4660:51:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "313030",
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4714:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "4660:57:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 661,
                        "nodeType": "ExpressionStatement",
                        "src": "4660:57:4"
                      },
                      {
                        "expression": {
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 662,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "4737:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 667,
                              "indexExpression": {
                                "expression": {
                                  "id": 663,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "4750:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4764:8:4",
                                "memberName": "PROPERTY",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 368,
                                "src": "4750:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4737:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 668,
                            "indexExpression": {
                              "expression": {
                                "id": 665,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "4774:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4784:6:4",
                              "memberName": "MEDIUM",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 385,
                              "src": "4774:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4737:54:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "323530",
                            "id": 669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4794:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_250_by_1",
                              "typeString": "int_const 250"
                            },
                            "value": "250"
                          },
                          "src": "4737:60:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 671,
                        "nodeType": "ExpressionStatement",
                        "src": "4737:60:4"
                      },
                      {
                        "expression": {
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 672,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "4816:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 677,
                              "indexExpression": {
                                "expression": {
                                  "id": 673,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "4829:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4843:8:4",
                                "memberName": "PROPERTY",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 368,
                                "src": "4829:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4816:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 678,
                            "indexExpression": {
                              "expression": {
                                "id": 675,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "4853:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4863:4:4",
                              "memberName": "HIGH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 386,
                              "src": "4853:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4816:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "353030",
                            "id": 679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4871:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500_by_1",
                              "typeString": "int_const 500"
                            },
                            "value": "500"
                          },
                          "src": "4816:58:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 681,
                        "nodeType": "ExpressionStatement",
                        "src": "4816:58:4"
                      },
                      {
                        "expression": {
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 682,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "4893:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 687,
                              "indexExpression": {
                                "expression": {
                                  "id": 683,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "4906:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4920:8:4",
                                "memberName": "PROPERTY",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 368,
                                "src": "4906:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4893:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 688,
                            "indexExpression": {
                              "expression": {
                                "id": 685,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "4930:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4940:8:4",
                              "memberName": "CRITICAL",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 387,
                              "src": "4930:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4893:56:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31303030",
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4952:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "4893:63:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 691,
                        "nodeType": "ExpressionStatement",
                        "src": "4893:63:4"
                      },
                      {
                        "expression": {
                          "id": 700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 692,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "5013:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 697,
                              "indexExpression": {
                                "expression": {
                                  "id": 693,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "5026:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5040:6:4",
                                "memberName": "TRAVEL",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 369,
                                "src": "5026:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5013:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 698,
                            "indexExpression": {
                              "expression": {
                                "id": 695,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "5048:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5058:3:4",
                              "memberName": "LOW",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 384,
                              "src": "5048:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5013:49:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "313530",
                            "id": 699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5065:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_150_by_1",
                              "typeString": "int_const 150"
                            },
                            "value": "150"
                          },
                          "src": "5013:55:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 701,
                        "nodeType": "ExpressionStatement",
                        "src": "5013:55:4"
                      },
                      {
                        "expression": {
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 702,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "5090:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 707,
                              "indexExpression": {
                                "expression": {
                                  "id": 703,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "5103:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5117:6:4",
                                "memberName": "TRAVEL",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 369,
                                "src": "5103:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5090:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 708,
                            "indexExpression": {
                              "expression": {
                                "id": 705,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "5125:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5135:6:4",
                              "memberName": "MEDIUM",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 385,
                              "src": "5125:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5090:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "333030",
                            "id": 709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5145:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_300_by_1",
                              "typeString": "int_const 300"
                            },
                            "value": "300"
                          },
                          "src": "5090:58:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 711,
                        "nodeType": "ExpressionStatement",
                        "src": "5090:58:4"
                      },
                      {
                        "expression": {
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 712,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "5165:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 717,
                              "indexExpression": {
                                "expression": {
                                  "id": 713,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "5178:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5192:6:4",
                                "memberName": "TRAVEL",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 369,
                                "src": "5178:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5165:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 718,
                            "indexExpression": {
                              "expression": {
                                "id": 715,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "5200:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5210:4:4",
                              "memberName": "HIGH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 386,
                              "src": "5200:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5165:50:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "363030",
                            "id": 719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5218:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_600_by_1",
                              "typeString": "int_const 600"
                            },
                            "value": "600"
                          },
                          "src": "5165:56:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 721,
                        "nodeType": "ExpressionStatement",
                        "src": "5165:56:4"
                      },
                      {
                        "expression": {
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 722,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "5240:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 727,
                              "indexExpression": {
                                "expression": {
                                  "id": 723,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "5253:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5267:6:4",
                                "memberName": "TRAVEL",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 369,
                                "src": "5253:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5240:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 728,
                            "indexExpression": {
                              "expression": {
                                "id": 725,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "5275:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5285:8:4",
                              "memberName": "CRITICAL",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 387,
                              "src": "5275:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5240:54:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31323030",
                            "id": 729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5297:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1200_by_1",
                              "typeString": "int_const 1200"
                            },
                            "value": "1200"
                          },
                          "src": "5240:61:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 731,
                        "nodeType": "ExpressionStatement",
                        "src": "5240:61:4"
                      },
                      {
                        "expression": {
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 732,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "5358:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 737,
                              "indexExpression": {
                                "expression": {
                                  "id": 733,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "5371:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5385:6:4",
                                "memberName": "CRYPTO",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 370,
                                "src": "5371:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5358:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 738,
                            "indexExpression": {
                              "expression": {
                                "id": 735,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "5393:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5403:3:4",
                              "memberName": "LOW",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 384,
                              "src": "5393:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5358:49:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "333030",
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5410:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_300_by_1",
                              "typeString": "int_const 300"
                            },
                            "value": "300"
                          },
                          "src": "5358:55:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 741,
                        "nodeType": "ExpressionStatement",
                        "src": "5358:55:4"
                      },
                      {
                        "expression": {
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 742,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "5433:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 747,
                              "indexExpression": {
                                "expression": {
                                  "id": 743,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "5446:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5460:6:4",
                                "memberName": "CRYPTO",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 370,
                                "src": "5446:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5433:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 748,
                            "indexExpression": {
                              "expression": {
                                "id": 745,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "5468:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5478:6:4",
                              "memberName": "MEDIUM",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 385,
                              "src": "5468:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5433:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "363030",
                            "id": 749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5488:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_600_by_1",
                              "typeString": "int_const 600"
                            },
                            "value": "600"
                          },
                          "src": "5433:58:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 751,
                        "nodeType": "ExpressionStatement",
                        "src": "5433:58:4"
                      },
                      {
                        "expression": {
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 752,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "5508:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 757,
                              "indexExpression": {
                                "expression": {
                                  "id": 753,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "5521:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5535:6:4",
                                "memberName": "CRYPTO",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 370,
                                "src": "5521:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5508:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 758,
                            "indexExpression": {
                              "expression": {
                                "id": 755,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "5543:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5553:4:4",
                              "memberName": "HIGH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 386,
                              "src": "5543:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5508:50:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31323030",
                            "id": 759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5561:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1200_by_1",
                              "typeString": "int_const 1200"
                            },
                            "value": "1200"
                          },
                          "src": "5508:57:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 761,
                        "nodeType": "ExpressionStatement",
                        "src": "5508:57:4"
                      },
                      {
                        "expression": {
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 762,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "5584:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 767,
                              "indexExpression": {
                                "expression": {
                                  "id": 763,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "5597:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5611:6:4",
                                "memberName": "CRYPTO",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 370,
                                "src": "5597:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5584:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 768,
                            "indexExpression": {
                              "expression": {
                                "id": 765,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "5619:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5629:8:4",
                              "memberName": "CRITICAL",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 387,
                              "src": "5619:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5584:54:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "32303030",
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5641:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2000_by_1",
                              "typeString": "int_const 2000"
                            },
                            "value": "2000"
                          },
                          "src": "5584:61:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 771,
                        "nodeType": "ExpressionStatement",
                        "src": "5584:61:4"
                      },
                      {
                        "expression": {
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 772,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "5700:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 777,
                              "indexExpression": {
                                "expression": {
                                  "id": 773,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "5713:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5727:4:4",
                                "memberName": "LIFE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 371,
                                "src": "5713:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5700:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 778,
                            "indexExpression": {
                              "expression": {
                                "id": 775,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "5733:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5743:3:4",
                              "memberName": "LOW",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 384,
                              "src": "5733:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5700:47:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3530",
                            "id": 779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5750:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "src": "5700:52:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 781,
                        "nodeType": "ExpressionStatement",
                        "src": "5700:52:4"
                      },
                      {
                        "expression": {
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 782,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "5775:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 787,
                              "indexExpression": {
                                "expression": {
                                  "id": 783,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "5788:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5802:4:4",
                                "memberName": "LIFE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 371,
                                "src": "5788:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5775:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 788,
                            "indexExpression": {
                              "expression": {
                                "id": 785,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "5808:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5818:6:4",
                              "memberName": "MEDIUM",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 385,
                              "src": "5808:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5775:50:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "313530",
                            "id": 789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5828:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_150_by_1",
                              "typeString": "int_const 150"
                            },
                            "value": "150"
                          },
                          "src": "5775:56:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 791,
                        "nodeType": "ExpressionStatement",
                        "src": "5775:56:4"
                      },
                      {
                        "expression": {
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 792,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "5850:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 797,
                              "indexExpression": {
                                "expression": {
                                  "id": 793,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "5863:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5877:4:4",
                                "memberName": "LIFE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 371,
                                "src": "5863:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5850:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 798,
                            "indexExpression": {
                              "expression": {
                                "id": 795,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "5883:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5893:4:4",
                              "memberName": "HIGH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 386,
                              "src": "5883:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5850:48:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "343030",
                            "id": 799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5901:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_400_by_1",
                              "typeString": "int_const 400"
                            },
                            "value": "400"
                          },
                          "src": "5850:54:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 801,
                        "nodeType": "ExpressionStatement",
                        "src": "5850:54:4"
                      },
                      {
                        "expression": {
                          "id": 810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 802,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "5923:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 807,
                              "indexExpression": {
                                "expression": {
                                  "id": 803,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "5936:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5950:4:4",
                                "memberName": "LIFE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 371,
                                "src": "5936:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5923:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 808,
                            "indexExpression": {
                              "expression": {
                                "id": 805,
                                "name": "RiskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "5956:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RiskLevel_$388_$",
                                  "typeString": "type(enum DecentralizedInsurance.RiskLevel)"
                                }
                              },
                              "id": 806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5966:8:4",
                              "memberName": "CRITICAL",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 387,
                              "src": "5956:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5923:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "383030",
                            "id": 809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5978:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_800_by_1",
                              "typeString": "int_const 800"
                            },
                            "value": "800"
                          },
                          "src": "5923:58:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 811,
                        "nodeType": "ExpressionStatement",
                        "src": "5923:58:4"
                      },
                      {
                        "body": {
                          "id": 841,
                          "nodeType": "Block",
                          "src": "6076:332:4",
                          "statements": [
                            {
                              "assignments": [
                                824
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 824,
                                  "mutability": "mutable",
                                  "name": "insType",
                                  "nameLocation": "6105:7:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 841,
                                  "src": "6091:21:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_InsuranceType_$372",
                                    "typeString": "enum DecentralizedInsurance.InsuranceType"
                                  },
                                  "typeName": {
                                    "id": 823,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 822,
                                      "name": "InsuranceType",
                                      "nameLocations": [
                                        "6091:13:4"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 372,
                                      "src": "6091:13:4"
                                    },
                                    "referencedDeclaration": 372,
                                    "src": "6091:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_InsuranceType_$372",
                                      "typeString": "enum DecentralizedInsurance.InsuranceType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 828,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 826,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 813,
                                    "src": "6129:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 825,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "6115:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6115:16:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6091:40:4"
                            },
                            {
                              "expression": {
                                "id": 839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 829,
                                    "name": "insurancePools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 499,
                                    "src": "6146:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                      "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                    }
                                  },
                                  "id": 831,
                                  "indexExpression": {
                                    "id": 830,
                                    "name": "insType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 824,
                                    "src": "6161:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_InsuranceType_$372",
                                      "typeString": "enum DecentralizedInsurance.InsuranceType"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6146:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                    "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 833,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6218:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    {
                                      "hexValue": "30",
                                      "id": 834,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6251:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    {
                                      "hexValue": "30",
                                      "id": 835,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6287:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    {
                                      "hexValue": "31303030",
                                      "id": 836,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6319:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    },
                                    {
                                      "hexValue": "74727565",
                                      "id": 837,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6376:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "id": 832,
                                    "name": "InsurancePool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 462,
                                    "src": "6172:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_InsurancePool_$462_storage_ptr_$",
                                      "typeString": "type(struct DecentralizedInsurance.InsurancePool storage pointer)"
                                    }
                                  },
                                  "id": 838,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "nameLocations": [
                                    "6205:11:4",
                                    "6238:11:4",
                                    "6271:14:4",
                                    "6307:10:4",
                                    "6368:6:4"
                                  ],
                                  "names": [
                                    "totalStaked",
                                    "totalClaims",
                                    "availableFunds",
                                    "rewardRate",
                                    "active"
                                  ],
                                  "nodeType": "FunctionCall",
                                  "src": "6172:224:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePool_$462_memory_ptr",
                                    "typeString": "struct DecentralizedInsurance.InsurancePool memory"
                                  }
                                },
                                "src": "6146:250:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                  "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                                }
                              },
                              "id": 840,
                              "nodeType": "ExpressionStatement",
                              "src": "6146:250:4"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 816,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "6064:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6068:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "6064:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 842,
                        "initializationExpression": {
                          "assignments": [
                            813
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 813,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6057:1:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 842,
                              "src": "6052:6:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 812,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6052:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 815,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6061:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6052:10:4"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6071:3:4",
                            "subExpression": {
                              "id": 819,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "6071:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 821,
                          "nodeType": "ExpressionStatement",
                          "src": "6071:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "6047:361:4"
                      }
                    ]
                  },
                  "id": 844,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 608,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4199:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4203:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4199:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 610,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 607,
                        "name": "Ownable",
                        "nameLocations": [
                          "4191:7:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "4191:7:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4191:19:4"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 606,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4188:2:4"
                  },
                  "returnParameters": {
                    "id": 611,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4211:0:4"
                  },
                  "scope": 2333,
                  "src": "4177:2238:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 855,
                    "nodeType": "Block",
                    "src": "6473:106:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 847,
                                "name": "authorizedInvestigators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 503,
                                "src": "6492:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 850,
                              "indexExpression": {
                                "expression": {
                                  "id": 848,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6516:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6520:6:4",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6516:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6492:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a656420696e76657374696761746f72",
                              "id": 851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6529:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96696d0b4d22dc2a10831113e834c70120ca20bfeb517f9fe43c800b24a6e8e4",
                                "typeString": "literal_string \"Not authorized investigator\""
                              },
                              "value": "Not authorized investigator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_96696d0b4d22dc2a10831113e834c70120ca20bfeb517f9fe43c800b24a6e8e4",
                                "typeString": "literal_string \"Not authorized investigator\""
                              }
                            ],
                            "id": 846,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6484:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6484:75:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 853,
                        "nodeType": "ExpressionStatement",
                        "src": "6484:75:4"
                      },
                      {
                        "id": 854,
                        "nodeType": "PlaceholderStatement",
                        "src": "6570:1:4"
                      }
                    ]
                  },
                  "id": 856,
                  "name": "onlyInvestigator",
                  "nameLocation": "6454:16:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 845,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6470:2:4"
                  },
                  "src": "6445:134:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 867,
                    "nodeType": "Block",
                    "src": "6613:94:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 859,
                                "name": "authorizedOracles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 507,
                                "src": "6632:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 862,
                              "indexExpression": {
                                "expression": {
                                  "id": 860,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6650:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6654:6:4",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6650:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6632:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a6564206f7261636c65",
                              "id": 863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6663:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_36814994bee7035561531cc8c4f1f230479c45e6bccc4871cc426851cda156a2",
                                "typeString": "literal_string \"Not authorized oracle\""
                              },
                              "value": "Not authorized oracle"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_36814994bee7035561531cc8c4f1f230479c45e6bccc4871cc426851cda156a2",
                                "typeString": "literal_string \"Not authorized oracle\""
                              }
                            ],
                            "id": 858,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6624:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6624:63:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 865,
                        "nodeType": "ExpressionStatement",
                        "src": "6624:63:4"
                      },
                      {
                        "id": 866,
                        "nodeType": "PlaceholderStatement",
                        "src": "6698:1:4"
                      }
                    ]
                  },
                  "id": 868,
                  "name": "onlyOracle",
                  "nameLocation": "6600:10:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 857,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6610:2:4"
                  },
                  "src": "6591:116:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 895,
                    "nodeType": "Block",
                    "src": "6759:192:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 873,
                                  "name": "_policyId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 870,
                                  "src": "6778:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 874,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6790:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6778:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 878,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 876,
                                  "name": "_policyId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 870,
                                  "src": "6795:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 877,
                                  "name": "nextPolicyId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 465,
                                  "src": "6807:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6795:24:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6778:41:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420706f6c696379204944",
                              "id": 880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6821:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5a518a71c67ad9aa45f0b2ec9d3bd0cea3da308c65915b240c42263822ab5c2",
                                "typeString": "literal_string \"Invalid policy ID\""
                              },
                              "value": "Invalid policy ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5a518a71c67ad9aa45f0b2ec9d3bd0cea3da308c65915b240c42263822ab5c2",
                                "typeString": "literal_string \"Invalid policy ID\""
                              }
                            ],
                            "id": 872,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6770:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6770:71:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 882,
                        "nodeType": "ExpressionStatement",
                        "src": "6770:71:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PolicyStatus_$377",
                                "typeString": "enum DecentralizedInsurance.PolicyStatus"
                              },
                              "id": 890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 884,
                                    "name": "policies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 473,
                                    "src": "6860:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$416_storage_$",
                                      "typeString": "mapping(uint256 => struct DecentralizedInsurance.Policy storage ref)"
                                    }
                                  },
                                  "id": 886,
                                  "indexExpression": {
                                    "id": 885,
                                    "name": "_policyId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 870,
                                    "src": "6869:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6860:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Policy_$416_storage",
                                    "typeString": "struct DecentralizedInsurance.Policy storage ref"
                                  }
                                },
                                "id": 887,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6880:6:4",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 406,
                                "src": "6860:26:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PolicyStatus_$377",
                                  "typeString": "enum DecentralizedInsurance.PolicyStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 888,
                                  "name": "PolicyStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "6890:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$377_$",
                                    "typeString": "type(enum DecentralizedInsurance.PolicyStatus)"
                                  }
                                },
                                "id": 889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6903:6:4",
                                "memberName": "ACTIVE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 373,
                                "src": "6890:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PolicyStatus_$377",
                                  "typeString": "enum DecentralizedInsurance.PolicyStatus"
                                }
                              },
                              "src": "6860:49:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6c696379206e6f7420616374697665",
                              "id": 891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6911:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718",
                                "typeString": "literal_string \"Policy not active\""
                              },
                              "value": "Policy not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718",
                                "typeString": "literal_string \"Policy not active\""
                              }
                            ],
                            "id": 883,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6852:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6852:79:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 893,
                        "nodeType": "ExpressionStatement",
                        "src": "6852:79:4"
                      },
                      {
                        "id": 894,
                        "nodeType": "PlaceholderStatement",
                        "src": "6942:1:4"
                      }
                    ]
                  },
                  "id": 896,
                  "name": "validPolicy",
                  "nameLocation": "6728:11:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 871,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 870,
                        "mutability": "mutable",
                        "name": "_policyId",
                        "nameLocation": "6748:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 896,
                        "src": "6740:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 869,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6740:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6739:19:4"
                  },
                  "src": "6719:232:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 912,
                    "nodeType": "Block",
                    "src": "7001:98:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 901,
                                  "name": "_claimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 898,
                                  "src": "7020:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 902,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7031:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7020:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 904,
                                  "name": "_claimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 898,
                                  "src": "7036:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 905,
                                  "name": "nextClaimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 468,
                                  "src": "7047:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7036:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7020:38:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420636c61696d204944",
                              "id": 908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7060:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e7321d9bf4d10df54fd2aec5dc5d6f0f523bb6db0728c52879facaa5cf489f17",
                                "typeString": "literal_string \"Invalid claim ID\""
                              },
                              "value": "Invalid claim ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e7321d9bf4d10df54fd2aec5dc5d6f0f523bb6db0728c52879facaa5cf489f17",
                                "typeString": "literal_string \"Invalid claim ID\""
                              }
                            ],
                            "id": 900,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7012:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7012:67:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 910,
                        "nodeType": "ExpressionStatement",
                        "src": "7012:67:4"
                      },
                      {
                        "id": 911,
                        "nodeType": "PlaceholderStatement",
                        "src": "7090:1:4"
                      }
                    ]
                  },
                  "id": 913,
                  "name": "validClaim",
                  "nameLocation": "6972:10:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 899,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 898,
                        "mutability": "mutable",
                        "name": "_claimId",
                        "nameLocation": "6991:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 913,
                        "src": "6983:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 897,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6983:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6982:18:4"
                  },
                  "src": "6963:136:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1076,
                    "nodeType": "Block",
                    "src": "7470:1891:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 934,
                                "name": "_coverageAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "7489:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7507:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7489:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f76657261676520616d6f756e74206d75737420626520706f736974697665",
                              "id": 937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7510:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ab4c6d23a5e77791ce1a791c91efe5bce61b46e882c584057d59839cc40a1dea",
                                "typeString": "literal_string \"Coverage amount must be positive\""
                              },
                              "value": "Coverage amount must be positive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ab4c6d23a5e77791ce1a791c91efe5bce61b46e882c584057d59839cc40a1dea",
                                "typeString": "literal_string \"Coverage amount must be positive\""
                              }
                            ],
                            "id": 933,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7481:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7481:64:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 939,
                        "nodeType": "ExpressionStatement",
                        "src": "7481:64:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 941,
                                "name": "_duration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 921,
                                "src": "7564:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "3330",
                                "id": 942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7577:7:4",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2592000_by_1",
                                  "typeString": "int_const 2592000"
                                },
                                "value": "30"
                              },
                              "src": "7564:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d696e696d756d206475726174696f6e2069732033302064617973",
                              "id": 944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7586:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_162730d1990a6a3d533e05c647807c92436ad20c6bf18c8fa109f4052c548c4f",
                                "typeString": "literal_string \"Minimum duration is 30 days\""
                              },
                              "value": "Minimum duration is 30 days"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_162730d1990a6a3d533e05c647807c92436ad20c6bf18c8fa109f4052c548c4f",
                                "typeString": "literal_string \"Minimum duration is 30 days\""
                              }
                            ],
                            "id": 940,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7556:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7556:60:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 946,
                        "nodeType": "ExpressionStatement",
                        "src": "7556:60:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 948,
                                "name": "_duration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 921,
                                "src": "7635:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "333635",
                                "id": 949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7648:8:4",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_31536000_by_1",
                                  "typeString": "int_const 31536000"
                                },
                                "value": "365"
                              },
                              "src": "7635:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d6178696d756d206475726174696f6e206973203336352064617973",
                              "id": 951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7658:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cf7a839bcb3c830a781de6ce2ceb20634061f532f7480e12f8ac18c8933dfef7",
                                "typeString": "literal_string \"Maximum duration is 365 days\""
                              },
                              "value": "Maximum duration is 365 days"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cf7a839bcb3c830a781de6ce2ceb20634061f532f7480e12f8ac18c8933dfef7",
                                "typeString": "literal_string \"Maximum duration is 365 days\""
                              }
                            ],
                            "id": 947,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7627:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7627:62:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 953,
                        "nodeType": "ExpressionStatement",
                        "src": "7627:62:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 955,
                                  "name": "insurancePools",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 499,
                                  "src": "7708:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                    "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                  }
                                },
                                "id": 957,
                                "indexExpression": {
                                  "id": 956,
                                  "name": "_insuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 917,
                                  "src": "7723:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_InsuranceType_$372",
                                    "typeString": "enum DecentralizedInsurance.InsuranceType"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7708:30:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                  "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                                }
                              },
                              "id": 958,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7739:6:4",
                              "memberName": "active",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 461,
                              "src": "7708:37:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e737572616e63652074797065206e6f7420616374697665",
                              "id": 959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7747:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_49314bc79fbe4084e95ab58ccdae39fcaaf2686b210ac50da09d833674143388",
                                "typeString": "literal_string \"Insurance type not active\""
                              },
                              "value": "Insurance type not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_49314bc79fbe4084e95ab58ccdae39fcaaf2686b210ac50da09d833674143388",
                                "typeString": "literal_string \"Insurance type not active\""
                              }
                            ],
                            "id": 954,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7700:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7700:75:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 961,
                        "nodeType": "ExpressionStatement",
                        "src": "7700:75:4"
                      },
                      {
                        "assignments": [
                          963
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 963,
                            "mutability": "mutable",
                            "name": "premiumAmount",
                            "nameLocation": "7834:13:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1076,
                            "src": "7826:21:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 962,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7826:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 970,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 965,
                              "name": "_insuranceType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "7867:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_InsuranceType_$372",
                                "typeString": "enum DecentralizedInsurance.InsuranceType"
                              }
                            },
                            {
                              "id": 966,
                              "name": "_coverageAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "7883:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 967,
                              "name": "_duration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 921,
                              "src": "7900:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 968,
                              "name": "_riskLevel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 924,
                              "src": "7911:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_InsuranceType_$372",
                                "typeString": "enum DecentralizedInsurance.InsuranceType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            ],
                            "id": 964,
                            "name": "calculatePremium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "7850:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_enum$_InsuranceType_$372_$_t_uint256_$_t_uint256_$_t_enum$_RiskLevel_$388_$returns$_t_uint256_$",
                              "typeString": "function (enum DecentralizedInsurance.InsuranceType,uint256,uint256,enum DecentralizedInsurance.RiskLevel) view returns (uint256)"
                            }
                          },
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7850:72:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7826:96:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 972,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7941:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7945:5:4",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "7941:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 974,
                                "name": "premiumAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 963,
                                "src": "7954:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7941:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e74207072656d69756d207061796d656e74",
                              "id": 976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7969:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f",
                                "typeString": "literal_string \"Insufficient premium payment\""
                              },
                              "value": "Insufficient premium payment"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f",
                                "typeString": "literal_string \"Insufficient premium payment\""
                              }
                            ],
                            "id": 971,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7933:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7933:67:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 978,
                        "nodeType": "ExpressionStatement",
                        "src": "7933:67:4"
                      },
                      {
                        "assignments": [
                          980
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 980,
                            "mutability": "mutable",
                            "name": "maxCoverage",
                            "nameLocation": "8061:11:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1076,
                            "src": "8053:19:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 979,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8053:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 990,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 986,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 981,
                                      "name": "insurancePools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 499,
                                      "src": "8076:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                        "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                      }
                                    },
                                    "id": 983,
                                    "indexExpression": {
                                      "id": 982,
                                      "name": "_insuranceType",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 917,
                                      "src": "8091:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_InsuranceType_$372",
                                        "typeString": "enum DecentralizedInsurance.InsuranceType"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8076:30:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                      "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                                    }
                                  },
                                  "id": 984,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8107:14:4",
                                  "memberName": "availableFunds",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 457,
                                  "src": "8076:45:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 985,
                                  "name": "MAX_COVERAGE_RATIO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 516,
                                  "src": "8124:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8076:66:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 987,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8075:68:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8146:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "8075:74:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8053:96:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 992,
                                "name": "_coverageAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "8168:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 993,
                                "name": "maxCoverage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 980,
                                "src": "8187:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8168:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f766572616765206578636565647320706f6f6c206361706163697479",
                              "id": 995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8200:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b8f02f93e78e98ca437628a2262137a01bf3f1b5b7702ac1f0fbba4d5c4a47cc",
                                "typeString": "literal_string \"Coverage exceeds pool capacity\""
                              },
                              "value": "Coverage exceeds pool capacity"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b8f02f93e78e98ca437628a2262137a01bf3f1b5b7702ac1f0fbba4d5c4a47cc",
                                "typeString": "literal_string \"Coverage exceeds pool capacity\""
                              }
                            ],
                            "id": 991,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8160:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8160:73:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 997,
                        "nodeType": "ExpressionStatement",
                        "src": "8160:73:4"
                      },
                      {
                        "assignments": [
                          999
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 999,
                            "mutability": "mutable",
                            "name": "policyId",
                            "nameLocation": "8288:8:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1076,
                            "src": "8280:16:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 998,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8280:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1002,
                        "initialValue": {
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8299:14:4",
                          "subExpression": {
                            "id": 1000,
                            "name": "nextPolicyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "8299:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8280:33:4"
                      },
                      {
                        "expression": {
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1003,
                              "name": "policies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 473,
                              "src": "8324:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$416_storage_$",
                                "typeString": "mapping(uint256 => struct DecentralizedInsurance.Policy storage ref)"
                              }
                            },
                            "id": 1005,
                            "indexExpression": {
                              "id": 1004,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 999,
                              "src": "8333:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8324:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$416_storage",
                              "typeString": "struct DecentralizedInsurance.Policy storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1007,
                                "name": "policyId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 999,
                                "src": "8377:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1008,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8414:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8418:6:4",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8414:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1010,
                                "name": "_insuranceType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 917,
                                "src": "8454:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              {
                                "id": 1011,
                                "name": "_coverageAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "8499:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1012,
                                "name": "premiumAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 963,
                                "src": "8544:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1013,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "8583:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1014,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8589:9:4",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "8583:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1015,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8622:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1016,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8628:9:4",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8622:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1017,
                                  "name": "_duration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 921,
                                  "src": "8640:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8622:27:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1019,
                                  "name": "PolicyStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "8672:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$377_$",
                                    "typeString": "type(enum DecentralizedInsurance.PolicyStatus)"
                                  }
                                },
                                "id": 1020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8685:6:4",
                                "memberName": "ACTIVE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 373,
                                "src": "8672:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PolicyStatus_$377",
                                  "typeString": "enum DecentralizedInsurance.PolicyStatus"
                                }
                              },
                              {
                                "id": 1021,
                                "name": "_riskLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 924,
                                "src": "8717:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RiskLevel_$388",
                                  "typeString": "enum DecentralizedInsurance.RiskLevel"
                                }
                              },
                              {
                                "id": 1022,
                                "name": "_metadataURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 926,
                                "src": "8755:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 1023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8795:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 1024,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8830:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_enum$_PolicyStatus_$377",
                                  "typeString": "enum DecentralizedInsurance.PolicyStatus"
                                },
                                {
                                  "typeIdentifier": "t_enum$_RiskLevel_$388",
                                  "typeString": "enum DecentralizedInsurance.RiskLevel"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1006,
                              "name": "Policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "8345:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Policy_$416_storage_ptr_$",
                                "typeString": "type(struct DecentralizedInsurance.Policy storage pointer)"
                              }
                            },
                            "id": 1025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "8367:8:4",
                              "8400:12:4",
                              "8439:13:4",
                              "8483:14:4",
                              "8529:13:4",
                              "8572:9:4",
                              "8613:7:4",
                              "8664:6:4",
                              "8706:9:4",
                              "8742:11:4",
                              "8782:11:4",
                              "8811:17:4"
                            ],
                            "names": [
                              "policyId",
                              "policyholder",
                              "insuranceType",
                              "coverageAmount",
                              "premiumAmount",
                              "startDate",
                              "endDate",
                              "status",
                              "riskLevel",
                              "metadataURI",
                              "claimsCount",
                              "totalClaimsAmount"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "8345:498:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$416_memory_ptr",
                              "typeString": "struct DecentralizedInsurance.Policy memory"
                            }
                          },
                          "src": "8324:519:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$416_storage",
                            "typeString": "struct DecentralizedInsurance.Policy storage ref"
                          }
                        },
                        "id": 1027,
                        "nodeType": "ExpressionStatement",
                        "src": "8324:519:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1033,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 999,
                              "src": "8894:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1028,
                                "name": "userPolicies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 483,
                                "src": "8864:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 1031,
                              "indexExpression": {
                                "expression": {
                                  "id": 1029,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8877:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1030,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8881:6:4",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8877:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8864:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8889:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8864:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8864:39:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1035,
                        "nodeType": "ExpressionStatement",
                        "src": "8864:39:4"
                      },
                      {
                        "expression": {
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1036,
                                "name": "insurancePools",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 499,
                                "src": "8966:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                }
                              },
                              "id": 1038,
                              "indexExpression": {
                                "id": 1037,
                                "name": "_insuranceType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 917,
                                "src": "8981:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8966:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                              }
                            },
                            "id": 1039,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8997:14:4",
                            "memberName": "availableFunds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 457,
                            "src": "8966:45:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1040,
                            "name": "premiumAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "9015:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8966:62:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1042,
                        "nodeType": "ExpressionStatement",
                        "src": "8966:62:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1043,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9087:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9091:5:4",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "9087:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1045,
                            "name": "premiumAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "9099:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9087:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1060,
                        "nodeType": "IfStatement",
                        "src": "9083:113:4",
                        "trueBody": {
                          "id": 1059,
                          "nodeType": "Block",
                          "src": "9114:82:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1056,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1053,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "9158:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1054,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9162:5:4",
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "9158:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 1055,
                                      "name": "premiumAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 963,
                                      "src": "9170:13:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9158:25:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1049,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "9137:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1050,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "9141:6:4",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "9137:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1048,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9129:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 1047,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9129:8:4",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1051,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9129:19:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1052,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9149:8:4",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "9129:28:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9129:55:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1058,
                              "nodeType": "ExpressionStatement",
                              "src": "9129:55:4"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1062,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 999,
                              "src": "9235:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1063,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9245:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9249:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9245:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1065,
                              "name": "_insuranceType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "9257:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_InsuranceType_$372",
                                "typeString": "enum DecentralizedInsurance.InsuranceType"
                              }
                            },
                            {
                              "id": 1066,
                              "name": "_coverageAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "9273:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_InsuranceType_$372",
                                "typeString": "enum DecentralizedInsurance.InsuranceType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1061,
                            "name": "PolicyCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "9221:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_enum$_InsuranceType_$372_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,enum DecentralizedInsurance.InsuranceType,uint256)"
                            }
                          },
                          "id": 1067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9221:68:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1068,
                        "nodeType": "EmitStatement",
                        "src": "9216:73:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1070,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 999,
                              "src": "9317:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1071,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9327:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9331:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9327:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1073,
                              "name": "premiumAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 963,
                              "src": "9339:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1069,
                            "name": "PremiumPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "9305:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9305:48:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1075,
                        "nodeType": "EmitStatement",
                        "src": "9300:53:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 914,
                    "nodeType": "StructuredDocumentation",
                    "src": "7153:55:4",
                    "text": " @dev Create a new insurance policy"
                  },
                  "functionSelector": "991c6cfc",
                  "id": 1077,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 929,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 928,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "7443:12:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 318,
                        "src": "7443:12:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7443:12:4"
                    },
                    {
                      "id": 931,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 930,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "7456:13:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 210,
                        "src": "7456:13:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7456:13:4"
                    }
                  ],
                  "name": "createPolicy",
                  "nameLocation": "7223:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 927,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 917,
                        "mutability": "mutable",
                        "name": "_insuranceType",
                        "nameLocation": "7260:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "7246:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InsuranceType_$372",
                          "typeString": "enum DecentralizedInsurance.InsuranceType"
                        },
                        "typeName": {
                          "id": 916,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 915,
                            "name": "InsuranceType",
                            "nameLocations": [
                              "7246:13:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 372,
                            "src": "7246:13:4"
                          },
                          "referencedDeclaration": 372,
                          "src": "7246:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_InsuranceType_$372",
                            "typeString": "enum DecentralizedInsurance.InsuranceType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 919,
                        "mutability": "mutable",
                        "name": "_coverageAmount",
                        "nameLocation": "7293:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "7285:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7285:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 921,
                        "mutability": "mutable",
                        "name": "_duration",
                        "nameLocation": "7327:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "7319:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 920,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7319:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 924,
                        "mutability": "mutable",
                        "name": "_riskLevel",
                        "nameLocation": "7371:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "7361:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RiskLevel_$388",
                          "typeString": "enum DecentralizedInsurance.RiskLevel"
                        },
                        "typeName": {
                          "id": 923,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 922,
                            "name": "RiskLevel",
                            "nameLocations": [
                              "7361:9:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 388,
                            "src": "7361:9:4"
                          },
                          "referencedDeclaration": 388,
                          "src": "7361:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RiskLevel_$388",
                            "typeString": "enum DecentralizedInsurance.RiskLevel"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 926,
                        "mutability": "mutable",
                        "name": "_metadataURI",
                        "nameLocation": "7406:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "7392:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 925,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7392:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7235:190:4"
                  },
                  "returnParameters": {
                    "id": 932,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7470:0:4"
                  },
                  "scope": 2333,
                  "src": "7214:2147:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1117,
                    "nodeType": "Block",
                    "src": "9630:197:4",
                    "statements": [
                      {
                        "assignments": [
                          1094
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1094,
                            "mutability": "mutable",
                            "name": "annualRate",
                            "nameLocation": "9649:10:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1117,
                            "src": "9641:18:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1093,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9641:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1100,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1095,
                              "name": "premiumRates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "9662:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                              }
                            },
                            "id": 1097,
                            "indexExpression": {
                              "id": 1096,
                              "name": "_insuranceType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1081,
                              "src": "9675:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_InsuranceType_$372",
                                "typeString": "enum DecentralizedInsurance.InsuranceType"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9662:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                              "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                            }
                          },
                          "id": 1099,
                          "indexExpression": {
                            "id": 1098,
                            "name": "_riskLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1088,
                            "src": "9691:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RiskLevel_$388",
                              "typeString": "enum DecentralizedInsurance.RiskLevel"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9662:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9641:61:4"
                      },
                      {
                        "assignments": [
                          1102
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1102,
                            "mutability": "mutable",
                            "name": "premium",
                            "nameLocation": "9721:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1117,
                            "src": "9713:15:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1101,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9713:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1114,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1105,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1103,
                                    "name": "_coverageAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1083,
                                    "src": "9732:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1104,
                                    "name": "annualRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1094,
                                    "src": "9750:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9732:28:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1106,
                                  "name": "_duration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1085,
                                  "src": "9763:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9732:40:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1108,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9731:42:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_315360000000_by_1",
                                  "typeString": "int_const 315360000000"
                                },
                                "id": 1111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130303030",
                                  "id": 1109,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9777:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000_by_1",
                                    "typeString": "int_const 10000"
                                  },
                                  "value": "10000"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "333635",
                                  "id": 1110,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9785:8:4",
                                  "subdenomination": "days",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_31536000_by_1",
                                    "typeString": "int_const 31536000"
                                  },
                                  "value": "365"
                                },
                                "src": "9777:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_315360000000_by_1",
                                  "typeString": "int_const 315360000000"
                                }
                              }
                            ],
                            "id": 1112,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9776:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_315360000000_by_1",
                              "typeString": "int_const 315360000000"
                            }
                          },
                          "src": "9731:63:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9713:81:4"
                      },
                      {
                        "expression": {
                          "id": 1115,
                          "name": "premium",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "9812:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1092,
                        "id": 1116,
                        "nodeType": "Return",
                        "src": "9805:14:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1078,
                    "nodeType": "StructuredDocumentation",
                    "src": "9373:56:4",
                    "text": " @dev Calculate premium for a policy"
                  },
                  "functionSelector": "9f169273",
                  "id": 1118,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculatePremium",
                  "nameLocation": "9444:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1089,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1081,
                        "mutability": "mutable",
                        "name": "_insuranceType",
                        "nameLocation": "9485:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "9471:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InsuranceType_$372",
                          "typeString": "enum DecentralizedInsurance.InsuranceType"
                        },
                        "typeName": {
                          "id": 1080,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1079,
                            "name": "InsuranceType",
                            "nameLocations": [
                              "9471:13:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 372,
                            "src": "9471:13:4"
                          },
                          "referencedDeclaration": 372,
                          "src": "9471:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_InsuranceType_$372",
                            "typeString": "enum DecentralizedInsurance.InsuranceType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1083,
                        "mutability": "mutable",
                        "name": "_coverageAmount",
                        "nameLocation": "9518:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "9510:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9510:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1085,
                        "mutability": "mutable",
                        "name": "_duration",
                        "nameLocation": "9552:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "9544:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1084,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9544:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "_riskLevel",
                        "nameLocation": "9582:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "9572:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RiskLevel_$388",
                          "typeString": "enum DecentralizedInsurance.RiskLevel"
                        },
                        "typeName": {
                          "id": 1087,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1086,
                            "name": "RiskLevel",
                            "nameLocations": [
                              "9572:9:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 388,
                            "src": "9572:9:4"
                          },
                          "referencedDeclaration": 388,
                          "src": "9572:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RiskLevel_$388",
                            "typeString": "enum DecentralizedInsurance.RiskLevel"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9460:139:4"
                  },
                  "returnParameters": {
                    "id": 1092,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1091,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "9621:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1090,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9621:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9620:9:4"
                  },
                  "scope": 2333,
                  "src": "9435:392:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1222,
                    "nodeType": "Block",
                    "src": "10054:1078:4",
                    "statements": [
                      {
                        "assignments": [
                          1135
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1135,
                            "mutability": "mutable",
                            "name": "policy",
                            "nameLocation": "10080:6:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1222,
                            "src": "10065:21:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$416_storage_ptr",
                              "typeString": "struct DecentralizedInsurance.Policy"
                            },
                            "typeName": {
                              "id": 1134,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1133,
                                "name": "Policy",
                                "nameLocations": [
                                  "10065:6:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 416,
                                "src": "10065:6:4"
                              },
                              "referencedDeclaration": 416,
                              "src": "10065:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$416_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Policy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1139,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1136,
                            "name": "policies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 473,
                            "src": "10089:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$416_storage_$",
                              "typeString": "mapping(uint256 => struct DecentralizedInsurance.Policy storage ref)"
                            }
                          },
                          "id": 1138,
                          "indexExpression": {
                            "id": 1137,
                            "name": "_policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1121,
                            "src": "10098:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10089:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$416_storage",
                            "typeString": "struct DecentralizedInsurance.Policy storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10065:43:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1141,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10127:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10131:6:4",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "10127:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1143,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1135,
                                  "src": "10141:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Policy_$416_storage_ptr",
                                    "typeString": "struct DecentralizedInsurance.Policy storage pointer"
                                  }
                                },
                                "id": 1144,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10148:12:4",
                                "memberName": "policyholder",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 392,
                                "src": "10141:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "10127:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420706f6c69637920686f6c646572",
                              "id": 1146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10162:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_37dd60e4fe5e1cfe83accbfcdbf0cdcc0a15f4bd1d5e67a582379d063eaa4713",
                                "typeString": "literal_string \"Not policy holder\""
                              },
                              "value": "Not policy holder"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_37dd60e4fe5e1cfe83accbfcdbf0cdcc0a15f4bd1d5e67a582379d063eaa4713",
                                "typeString": "literal_string \"Not policy holder\""
                              }
                            ],
                            "id": 1140,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10119:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10119:63:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1148,
                        "nodeType": "ExpressionStatement",
                        "src": "10119:63:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1150,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10201:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10207:9:4",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "10201:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1152,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1135,
                                  "src": "10220:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Policy_$416_storage_ptr",
                                    "typeString": "struct DecentralizedInsurance.Policy storage pointer"
                                  }
                                },
                                "id": 1153,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10227:7:4",
                                "memberName": "endDate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 403,
                                "src": "10220:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10201:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6c6963792065787069726564",
                              "id": 1155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10236:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700",
                                "typeString": "literal_string \"Policy expired\""
                              },
                              "value": "Policy expired"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700",
                                "typeString": "literal_string \"Policy expired\""
                              }
                            ],
                            "id": 1149,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10193:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10193:60:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1157,
                        "nodeType": "ExpressionStatement",
                        "src": "10193:60:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1159,
                                "name": "_claimAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1123,
                                "src": "10272:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10287:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "10272:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436c61696d20616d6f756e74206d75737420626520706f736974697665",
                              "id": 1162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10290:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d7474211e55b12a0d156d121f7800c6ca522ad3954a9a82a33ace92b43f8a00f",
                                "typeString": "literal_string \"Claim amount must be positive\""
                              },
                              "value": "Claim amount must be positive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d7474211e55b12a0d156d121f7800c6ca522ad3954a9a82a33ace92b43f8a00f",
                                "typeString": "literal_string \"Claim amount must be positive\""
                              }
                            ],
                            "id": 1158,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10264:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10264:58:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1164,
                        "nodeType": "ExpressionStatement",
                        "src": "10264:58:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1166,
                                "name": "_claimAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1123,
                                "src": "10341:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1167,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1135,
                                  "src": "10357:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Policy_$416_storage_ptr",
                                    "typeString": "struct DecentralizedInsurance.Policy storage pointer"
                                  }
                                },
                                "id": 1168,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10364:14:4",
                                "memberName": "coverageAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 397,
                                "src": "10357:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10341:37:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436c61696d206578636565647320636f766572616765",
                              "id": 1170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10380:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf2f3d25f301e240afacef15043abc1ee18b0da84adf9883c165407713a362d",
                                "typeString": "literal_string \"Claim exceeds coverage\""
                              },
                              "value": "Claim exceeds coverage"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebf2f3d25f301e240afacef15043abc1ee18b0da84adf9883c165407713a362d",
                                "typeString": "literal_string \"Claim exceeds coverage\""
                              }
                            ],
                            "id": 1165,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10333:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10333:72:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1172,
                        "nodeType": "ExpressionStatement",
                        "src": "10333:72:4"
                      },
                      {
                        "assignments": [
                          1174
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1174,
                            "mutability": "mutable",
                            "name": "claimId",
                            "nameLocation": "10434:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1222,
                            "src": "10426:15:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1173,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10426:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1177,
                        "initialValue": {
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "10444:13:4",
                          "subExpression": {
                            "id": 1175,
                            "name": "nextClaimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 468,
                            "src": "10444:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10426:31:4"
                      },
                      {
                        "expression": {
                          "id": 1204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1178,
                              "name": "claims",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 478,
                              "src": "10468:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$442_storage_$",
                                "typeString": "mapping(uint256 => struct DecentralizedInsurance.Claim storage ref)"
                              }
                            },
                            "id": 1180,
                            "indexExpression": {
                              "id": 1179,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1174,
                              "src": "10475:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10468:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$442_storage",
                              "typeString": "struct DecentralizedInsurance.Claim storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1182,
                                "name": "claimId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1174,
                                "src": "10516:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1183,
                                "name": "_policyId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1121,
                                "src": "10548:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1184,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10582:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10586:6:4",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "10582:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1186,
                                "name": "_claimAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1123,
                                "src": "10620:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1187,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10663:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10669:9:4",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "10663:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1189,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "10716:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1190,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10722:9:4",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "10716:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1191,
                                  "name": "INVESTIGATION_PERIOD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 510,
                                  "src": "10734:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10716:38:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1193,
                                  "name": "ClaimStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 383,
                                  "src": "10777:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$383_$",
                                    "typeString": "type(enum DecentralizedInsurance.ClaimStatus)"
                                  }
                                },
                                "id": 1194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "10789:7:4",
                                "memberName": "PENDING",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 378,
                                "src": "10777:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                }
                              },
                              {
                                "id": 1195,
                                "name": "_evidenceURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "10824:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "",
                                "id": 1196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10868:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "30",
                                "id": 1197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10901:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 1198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10929:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1201,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10967:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10959:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1199,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10959:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10959:10:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1181,
                              "name": "Claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "10486:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Claim_$442_storage_ptr_$",
                                "typeString": "type(struct DecentralizedInsurance.Claim storage pointer)"
                              }
                            },
                            "id": 1203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "10507:7:4",
                              "10538:8:4",
                              "10572:8:4",
                              "10607:11:4",
                              "10647:14:4",
                              "10693:21:4",
                              "10769:6:4",
                              "10811:11:4",
                              "10851:15:4",
                              "10885:14:4",
                              "10917:10:4",
                              "10945:12:4"
                            ],
                            "names": [
                              "claimId",
                              "policyId",
                              "claimant",
                              "claimAmount",
                              "submissionDate",
                              "investigationDeadline",
                              "status",
                              "evidenceURI",
                              "rejectionReason",
                              "approvedAmount",
                              "payoutDate",
                              "investigator"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "10486:495:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$442_memory_ptr",
                              "typeString": "struct DecentralizedInsurance.Claim memory"
                            }
                          },
                          "src": "10468:513:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$442_storage",
                            "typeString": "struct DecentralizedInsurance.Claim storage ref"
                          }
                        },
                        "id": 1205,
                        "nodeType": "ExpressionStatement",
                        "src": "10468:513:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1211,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1174,
                              "src": "11030:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1206,
                                "name": "userClaims",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 488,
                                "src": "11002:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 1209,
                              "indexExpression": {
                                "expression": {
                                  "id": 1207,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "11013:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11017:6:4",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "11013:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11002:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11025:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "11002:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11002:36:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1213,
                        "nodeType": "ExpressionStatement",
                        "src": "11002:36:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1215,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1174,
                              "src": "11079:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1216,
                              "name": "_policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1121,
                              "src": "11088:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1217,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11099:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11103:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11099:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1219,
                              "name": "_claimAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1123,
                              "src": "11111:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1214,
                            "name": "ClaimSubmitted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 556,
                            "src": "11064:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address,uint256)"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11064:60:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1221,
                        "nodeType": "EmitStatement",
                        "src": "11059:65:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1119,
                    "nodeType": "StructuredDocumentation",
                    "src": "9839:40:4",
                    "text": " @dev Submit a claim"
                  },
                  "functionSelector": "06964de7",
                  "id": 1223,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1128,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1127,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "10018:12:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 318,
                        "src": "10018:12:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10018:12:4"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1130,
                          "name": "_policyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1121,
                          "src": "10043:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1131,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1129,
                        "name": "validPolicy",
                        "nameLocations": [
                          "10031:11:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 896,
                        "src": "10031:11:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10031:22:4"
                    }
                  ],
                  "name": "submitClaim",
                  "nameLocation": "9894:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1121,
                        "mutability": "mutable",
                        "name": "_policyId",
                        "nameLocation": "9924:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1223,
                        "src": "9916:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1120,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9916:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1123,
                        "mutability": "mutable",
                        "name": "_claimAmount",
                        "nameLocation": "9952:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1223,
                        "src": "9944:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9944:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1125,
                        "mutability": "mutable",
                        "name": "_evidenceURI",
                        "nameLocation": "9989:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1223,
                        "src": "9975:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1124,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9975:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9905:103:4"
                  },
                  "returnParameters": {
                    "id": 1132,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10054:0:4"
                  },
                  "scope": 2333,
                  "src": "9885:1247:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1349,
                    "nodeType": "Block",
                    "src": "11441:963:4",
                    "statements": [
                      {
                        "assignments": [
                          1243
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1243,
                            "mutability": "mutable",
                            "name": "claim",
                            "nameLocation": "11466:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1349,
                            "src": "11452:19:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                              "typeString": "struct DecentralizedInsurance.Claim"
                            },
                            "typeName": {
                              "id": 1242,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1241,
                                "name": "Claim",
                                "nameLocations": [
                                  "11452:5:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 442,
                                "src": "11452:5:4"
                              },
                              "referencedDeclaration": 442,
                              "src": "11452:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1247,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1244,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "11474:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$442_storage_$",
                              "typeString": "mapping(uint256 => struct DecentralizedInsurance.Claim storage ref)"
                            }
                          },
                          "id": 1246,
                          "indexExpression": {
                            "id": 1245,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1226,
                            "src": "11481:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11474:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$442_storage",
                            "typeString": "struct DecentralizedInsurance.Claim storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11452:38:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                "typeString": "enum DecentralizedInsurance.ClaimStatus"
                              },
                              "id": 1253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1249,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1243,
                                  "src": "11509:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                    "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                  }
                                },
                                "id": 1250,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11515:6:4",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 431,
                                "src": "11509:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1251,
                                  "name": "ClaimStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 383,
                                  "src": "11525:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$383_$",
                                    "typeString": "type(enum DecentralizedInsurance.ClaimStatus)"
                                  }
                                },
                                "id": 1252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "11537:7:4",
                                "memberName": "PENDING",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 378,
                                "src": "11525:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                }
                              },
                              "src": "11509:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436c61696d206e6f742070656e64696e67",
                              "id": 1254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11546:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0edb5d590621ac4802ac27a575f89b90d78c10be903b73b8182489a716e7a695",
                                "typeString": "literal_string \"Claim not pending\""
                              },
                              "value": "Claim not pending"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0edb5d590621ac4802ac27a575f89b90d78c10be903b73b8182489a716e7a695",
                                "typeString": "literal_string \"Claim not pending\""
                              }
                            ],
                            "id": 1248,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11501:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11501:65:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1256,
                        "nodeType": "ExpressionStatement",
                        "src": "11501:65:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1258,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "11585:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11591:9:4",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "11585:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1260,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1243,
                                  "src": "11604:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                    "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                  }
                                },
                                "id": 1261,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11610:21:4",
                                "memberName": "investigationDeadline",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 428,
                                "src": "11604:27:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11585:46:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e7665737469676174696f6e20706572696f642065787069726564",
                              "id": 1263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11633:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5ae393e3ae09280778288a1146d415e8532f7cc0f2195a5a4ae8f91be0736dc3",
                                "typeString": "literal_string \"Investigation period expired\""
                              },
                              "value": "Investigation period expired"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5ae393e3ae09280778288a1146d415e8532f7cc0f2195a5a4ae8f91be0736dc3",
                                "typeString": "literal_string \"Investigation period expired\""
                              }
                            ],
                            "id": 1257,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11577:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11577:87:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1265,
                        "nodeType": "ExpressionStatement",
                        "src": "11577:87:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                },
                                "id": 1270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1267,
                                  "name": "_decision",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1229,
                                  "src": "11683:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                    "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1268,
                                    "name": "ClaimStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 383,
                                    "src": "11696:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$383_$",
                                      "typeString": "type(enum DecentralizedInsurance.ClaimStatus)"
                                    }
                                  },
                                  "id": 1269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "11708:8:4",
                                  "memberName": "APPROVED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 380,
                                  "src": "11696:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                    "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                  }
                                },
                                "src": "11683:33:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                },
                                "id": 1274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1271,
                                  "name": "_decision",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1229,
                                  "src": "11720:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                    "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1272,
                                    "name": "ClaimStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 383,
                                    "src": "11733:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$383_$",
                                      "typeString": "type(enum DecentralizedInsurance.ClaimStatus)"
                                    }
                                  },
                                  "id": 1273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "11745:8:4",
                                  "memberName": "REJECTED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 381,
                                  "src": "11733:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                    "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                  }
                                },
                                "src": "11720:33:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "11683:70:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206465636973696f6e",
                              "id": 1276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11755:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e9acdd50eecf30202560c7a7989f096f1cf3aeacdf1f232cd4f4b467d1b90606",
                                "typeString": "literal_string \"Invalid decision\""
                              },
                              "value": "Invalid decision"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e9acdd50eecf30202560c7a7989f096f1cf3aeacdf1f232cd4f4b467d1b90606",
                                "typeString": "literal_string \"Invalid decision\""
                              }
                            ],
                            "id": 1266,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11675:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11675:99:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1278,
                        "nodeType": "ExpressionStatement",
                        "src": "11675:99:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ClaimStatus_$383",
                            "typeString": "enum DecentralizedInsurance.ClaimStatus"
                          },
                          "id": 1282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1279,
                            "name": "_decision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "11799:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ClaimStatus_$383",
                              "typeString": "enum DecentralizedInsurance.ClaimStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1280,
                              "name": "ClaimStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 383,
                              "src": "11812:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$383_$",
                                "typeString": "type(enum DecentralizedInsurance.ClaimStatus)"
                              }
                            },
                            "id": 1281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11824:8:4",
                            "memberName": "APPROVED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 380,
                            "src": "11812:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ClaimStatus_$383",
                              "typeString": "enum DecentralizedInsurance.ClaimStatus"
                            }
                          },
                          "src": "11799:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1333,
                          "nodeType": "Block",
                          "src": "12065:204:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1316,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1312,
                                            "name": "_rejectionReason",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1233,
                                            "src": "12094:16:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          ],
                                          "id": 1311,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "12088:5:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                            "typeString": "type(bytes storage pointer)"
                                          },
                                          "typeName": {
                                            "id": 1310,
                                            "name": "bytes",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "12088:5:4",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1313,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "12088:23:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 1314,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "12112:6:4",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12088:30:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1315,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12121:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12088:34:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "52656a656374696f6e20726561736f6e207265717569726564",
                                    "id": 1317,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12124:27:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_22b184d25cae045f1a07c6f1913c0f3d2c14448baee482dffe8872d41fefcb4c",
                                      "typeString": "literal_string \"Rejection reason required\""
                                    },
                                    "value": "Rejection reason required"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_22b184d25cae045f1a07c6f1913c0f3d2c14448baee482dffe8872d41fefcb4c",
                                      "typeString": "literal_string \"Rejection reason required\""
                                    }
                                  ],
                                  "id": 1309,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "12080:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12080:72:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1319,
                              "nodeType": "ExpressionStatement",
                              "src": "12080:72:4"
                            },
                            {
                              "expression": {
                                "id": 1324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1320,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1243,
                                    "src": "12167:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                      "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                    }
                                  },
                                  "id": 1322,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "12173:15:4",
                                  "memberName": "rejectionReason",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 435,
                                  "src": "12167:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1323,
                                  "name": "_rejectionReason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1233,
                                  "src": "12191:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "12167:40:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "id": 1325,
                              "nodeType": "ExpressionStatement",
                              "src": "12167:40:4"
                            },
                            {
                              "expression": {
                                "id": 1331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1326,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1243,
                                    "src": "12222:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                      "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                    }
                                  },
                                  "id": 1328,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "12228:6:4",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 431,
                                  "src": "12222:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                    "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1329,
                                    "name": "ClaimStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 383,
                                    "src": "12237:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$383_$",
                                      "typeString": "type(enum DecentralizedInsurance.ClaimStatus)"
                                    }
                                  },
                                  "id": 1330,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "12249:8:4",
                                  "memberName": "REJECTED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 381,
                                  "src": "12237:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                    "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                  }
                                },
                                "src": "12222:35:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                }
                              },
                              "id": 1332,
                              "nodeType": "ExpressionStatement",
                              "src": "12222:35:4"
                            }
                          ]
                        },
                        "id": 1334,
                        "nodeType": "IfStatement",
                        "src": "11795:474:4",
                        "trueBody": {
                          "id": 1308,
                          "nodeType": "Block",
                          "src": "11834:225:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1291,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1286,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1284,
                                        "name": "_approvedAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1231,
                                        "src": "11857:15:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 1285,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11875:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "11857:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1290,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1287,
                                        "name": "_approvedAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1231,
                                        "src": "11880:15:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1288,
                                          "name": "claim",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1243,
                                          "src": "11899:5:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                            "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                          }
                                        },
                                        "id": 1289,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "11905:11:4",
                                        "memberName": "claimAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 424,
                                        "src": "11899:17:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11880:36:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "11857:59:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e76616c696420617070726f76656420616d6f756e74",
                                    "id": 1292,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11918:25:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_18817458311a230f7cdb06b44c6e2e41a1e0d4dd37dbacdb6b0a8dcd4516dc32",
                                      "typeString": "literal_string \"Invalid approved amount\""
                                    },
                                    "value": "Invalid approved amount"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_18817458311a230f7cdb06b44c6e2e41a1e0d4dd37dbacdb6b0a8dcd4516dc32",
                                      "typeString": "literal_string \"Invalid approved amount\""
                                    }
                                  ],
                                  "id": 1283,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "11849:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11849:95:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1294,
                              "nodeType": "ExpressionStatement",
                              "src": "11849:95:4"
                            },
                            {
                              "expression": {
                                "id": 1299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1295,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1243,
                                    "src": "11959:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                      "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                    }
                                  },
                                  "id": 1297,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "11965:14:4",
                                  "memberName": "approvedAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 437,
                                  "src": "11959:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1298,
                                  "name": "_approvedAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1231,
                                  "src": "11982:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11959:38:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1300,
                              "nodeType": "ExpressionStatement",
                              "src": "11959:38:4"
                            },
                            {
                              "expression": {
                                "id": 1306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1301,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1243,
                                    "src": "12012:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                      "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                    }
                                  },
                                  "id": 1303,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "12018:6:4",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 431,
                                  "src": "12012:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                    "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1304,
                                    "name": "ClaimStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 383,
                                    "src": "12027:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$383_$",
                                      "typeString": "type(enum DecentralizedInsurance.ClaimStatus)"
                                    }
                                  },
                                  "id": 1305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "12039:8:4",
                                  "memberName": "APPROVED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 380,
                                  "src": "12027:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                    "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                  }
                                },
                                "src": "12012:35:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                }
                              },
                              "id": 1307,
                              "nodeType": "ExpressionStatement",
                              "src": "12012:35:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1335,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1243,
                              "src": "12289:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                              }
                            },
                            "id": 1337,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "12295:12:4",
                            "memberName": "investigator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 441,
                            "src": "12289:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1338,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "12310:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12314:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "12310:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12289:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1341,
                        "nodeType": "ExpressionStatement",
                        "src": "12289:31:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1343,
                              "name": "_claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1226,
                              "src": "12364:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1344,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12374:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12378:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12374:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1346,
                              "name": "_decision",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1229,
                              "src": "12386:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                "typeString": "enum DecentralizedInsurance.ClaimStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                "typeString": "enum DecentralizedInsurance.ClaimStatus"
                              }
                            ],
                            "id": 1342,
                            "name": "ClaimInvestigated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 565,
                            "src": "12346:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_enum$_ClaimStatus_$383_$returns$__$",
                              "typeString": "function (uint256,address,enum DecentralizedInsurance.ClaimStatus)"
                            }
                          },
                          "id": 1347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12346:50:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1348,
                        "nodeType": "EmitStatement",
                        "src": "12341:55:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1224,
                    "nodeType": "StructuredDocumentation",
                    "src": "11144:77:4",
                    "text": " @dev Investigate a claim (only authorized investigators)"
                  },
                  "functionSelector": "8606f9a5",
                  "id": 1350,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1236,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1235,
                        "name": "onlyInvestigator",
                        "nameLocations": [
                          "11403:16:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 856,
                        "src": "11403:16:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11403:16:4"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1238,
                          "name": "_claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1226,
                          "src": "11431:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1239,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1237,
                        "name": "validClaim",
                        "nameLocations": [
                          "11420:10:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 913,
                        "src": "11420:10:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11420:20:4"
                    }
                  ],
                  "name": "investigateClaim",
                  "nameLocation": "11236:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1234,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1226,
                        "mutability": "mutable",
                        "name": "_claimId",
                        "nameLocation": "11271:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "11263:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1225,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11263:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1229,
                        "mutability": "mutable",
                        "name": "_decision",
                        "nameLocation": "11302:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "11290:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ClaimStatus_$383",
                          "typeString": "enum DecentralizedInsurance.ClaimStatus"
                        },
                        "typeName": {
                          "id": 1228,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1227,
                            "name": "ClaimStatus",
                            "nameLocations": [
                              "11290:11:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 383,
                            "src": "11290:11:4"
                          },
                          "referencedDeclaration": 383,
                          "src": "11290:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ClaimStatus_$383",
                            "typeString": "enum DecentralizedInsurance.ClaimStatus"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1231,
                        "mutability": "mutable",
                        "name": "_approvedAmount",
                        "nameLocation": "11330:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "11322:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1230,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11322:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1233,
                        "mutability": "mutable",
                        "name": "_rejectionReason",
                        "nameLocation": "11370:16:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "11356:30:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1232,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "11356:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11252:141:4"
                  },
                  "returnParameters": {
                    "id": 1240,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11441:0:4"
                  },
                  "scope": 2333,
                  "src": "11227:1177:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1460,
                    "nodeType": "Block",
                    "src": "12545:961:4",
                    "statements": [
                      {
                        "assignments": [
                          1363
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1363,
                            "mutability": "mutable",
                            "name": "claim",
                            "nameLocation": "12570:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1460,
                            "src": "12556:19:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                              "typeString": "struct DecentralizedInsurance.Claim"
                            },
                            "typeName": {
                              "id": 1362,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1361,
                                "name": "Claim",
                                "nameLocations": [
                                  "12556:5:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 442,
                                "src": "12556:5:4"
                              },
                              "referencedDeclaration": 442,
                              "src": "12556:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1367,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1364,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "12578:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$442_storage_$",
                              "typeString": "mapping(uint256 => struct DecentralizedInsurance.Claim storage ref)"
                            }
                          },
                          "id": 1366,
                          "indexExpression": {
                            "id": 1365,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "12585:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12578:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$442_storage",
                            "typeString": "struct DecentralizedInsurance.Claim storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12556:38:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                "typeString": "enum DecentralizedInsurance.ClaimStatus"
                              },
                              "id": 1373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1369,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1363,
                                  "src": "12613:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                    "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                  }
                                },
                                "id": 1370,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12619:6:4",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 431,
                                "src": "12613:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1371,
                                  "name": "ClaimStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 383,
                                  "src": "12629:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$383_$",
                                    "typeString": "type(enum DecentralizedInsurance.ClaimStatus)"
                                  }
                                },
                                "id": 1372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "12641:8:4",
                                "memberName": "APPROVED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 380,
                                "src": "12629:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                }
                              },
                              "src": "12613:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436c61696d206e6f7420617070726f766564",
                              "id": 1374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12651:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8f2ac7780f8c4b666ae6f1602d751e11665ff69603cb4edbe64b77456fa2681a",
                                "typeString": "literal_string \"Claim not approved\""
                              },
                              "value": "Claim not approved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8f2ac7780f8c4b666ae6f1602d751e11665ff69603cb4edbe64b77456fa2681a",
                                "typeString": "literal_string \"Claim not approved\""
                              }
                            ],
                            "id": 1368,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12605:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12605:67:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1376,
                        "nodeType": "ExpressionStatement",
                        "src": "12605:67:4"
                      },
                      {
                        "assignments": [
                          1379
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1379,
                            "mutability": "mutable",
                            "name": "policy",
                            "nameLocation": "12708:6:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1460,
                            "src": "12693:21:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$416_storage_ptr",
                              "typeString": "struct DecentralizedInsurance.Policy"
                            },
                            "typeName": {
                              "id": 1378,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1377,
                                "name": "Policy",
                                "nameLocations": [
                                  "12693:6:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 416,
                                "src": "12693:6:4"
                              },
                              "referencedDeclaration": 416,
                              "src": "12693:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$416_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Policy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1384,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1380,
                            "name": "policies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 473,
                            "src": "12717:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$416_storage_$",
                              "typeString": "mapping(uint256 => struct DecentralizedInsurance.Policy storage ref)"
                            }
                          },
                          "id": 1383,
                          "indexExpression": {
                            "expression": {
                              "id": 1381,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "12726:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                              }
                            },
                            "id": 1382,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12732:8:4",
                            "memberName": "policyId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 420,
                            "src": "12726:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12717:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$416_storage",
                            "typeString": "struct DecentralizedInsurance.Policy storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12693:48:4"
                      },
                      {
                        "assignments": [
                          1387
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1387,
                            "mutability": "mutable",
                            "name": "pool",
                            "nameLocation": "12774:4:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1460,
                            "src": "12752:26:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InsurancePool_$462_storage_ptr",
                              "typeString": "struct DecentralizedInsurance.InsurancePool"
                            },
                            "typeName": {
                              "id": 1386,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1385,
                                "name": "InsurancePool",
                                "nameLocations": [
                                  "12752:13:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 462,
                                "src": "12752:13:4"
                              },
                              "referencedDeclaration": 462,
                              "src": "12752:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePool_$462_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.InsurancePool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1392,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1388,
                            "name": "insurancePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 499,
                            "src": "12781:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                              "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                            }
                          },
                          "id": 1391,
                          "indexExpression": {
                            "expression": {
                              "id": 1389,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1379,
                              "src": "12796:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$416_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Policy storage pointer"
                              }
                            },
                            "id": 1390,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12803:13:4",
                            "memberName": "insuranceType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 395,
                            "src": "12796:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_InsuranceType_$372",
                              "typeString": "enum DecentralizedInsurance.InsuranceType"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12781:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                            "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12752:65:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1394,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1387,
                                  "src": "12846:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePool_$462_storage_ptr",
                                    "typeString": "struct DecentralizedInsurance.InsurancePool storage pointer"
                                  }
                                },
                                "id": 1395,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12851:14:4",
                                "memberName": "availableFunds",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 457,
                                "src": "12846:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1396,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1363,
                                  "src": "12869:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                    "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                  }
                                },
                                "id": 1397,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12875:14:4",
                                "memberName": "approvedAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 437,
                                "src": "12869:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12846:43:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420706f6f6c2066756e6473",
                              "id": 1399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12891:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3a25deeb664b936579c3e921fdf4b9eabb8da1c46f27bc5997b40ca952658ca5",
                                "typeString": "literal_string \"Insufficient pool funds\""
                              },
                              "value": "Insufficient pool funds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3a25deeb664b936579c3e921fdf4b9eabb8da1c46f27bc5997b40ca952658ca5",
                                "typeString": "literal_string \"Insufficient pool funds\""
                              }
                            ],
                            "id": 1393,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12838:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12838:79:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1401,
                        "nodeType": "ExpressionStatement",
                        "src": "12838:79:4"
                      },
                      {
                        "expression": {
                          "id": 1407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1402,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "12970:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                              }
                            },
                            "id": 1404,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "12976:6:4",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 431,
                            "src": "12970:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ClaimStatus_$383",
                              "typeString": "enum DecentralizedInsurance.ClaimStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1405,
                              "name": "ClaimStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 383,
                              "src": "12985:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$383_$",
                                "typeString": "type(enum DecentralizedInsurance.ClaimStatus)"
                              }
                            },
                            "id": 1406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "12997:4:4",
                            "memberName": "PAID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 382,
                            "src": "12985:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ClaimStatus_$383",
                              "typeString": "enum DecentralizedInsurance.ClaimStatus"
                            }
                          },
                          "src": "12970:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ClaimStatus_$383",
                            "typeString": "enum DecentralizedInsurance.ClaimStatus"
                          }
                        },
                        "id": 1408,
                        "nodeType": "ExpressionStatement",
                        "src": "12970:31:4"
                      },
                      {
                        "expression": {
                          "id": 1414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1409,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "13012:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                              }
                            },
                            "id": 1411,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13018:10:4",
                            "memberName": "payoutDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 439,
                            "src": "13012:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1412,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "13031:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13037:9:4",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "13031:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13012:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1415,
                        "nodeType": "ExpressionStatement",
                        "src": "13012:34:4"
                      },
                      {
                        "expression": {
                          "id": 1419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "13093:20:4",
                          "subExpression": {
                            "expression": {
                              "id": 1416,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1379,
                              "src": "13093:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$416_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Policy storage pointer"
                              }
                            },
                            "id": 1418,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13100:11:4",
                            "memberName": "claimsCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "13093:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1420,
                        "nodeType": "ExpressionStatement",
                        "src": "13093:20:4"
                      },
                      {
                        "expression": {
                          "id": 1426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1421,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1379,
                              "src": "13124:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$416_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Policy storage pointer"
                              }
                            },
                            "id": 1423,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13131:17:4",
                            "memberName": "totalClaimsAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 415,
                            "src": "13124:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1424,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "13152:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                              }
                            },
                            "id": 1425,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13158:14:4",
                            "memberName": "approvedAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 437,
                            "src": "13152:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13124:48:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1427,
                        "nodeType": "ExpressionStatement",
                        "src": "13124:48:4"
                      },
                      {
                        "expression": {
                          "id": 1433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1428,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1387,
                              "src": "13217:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePool_$462_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.InsurancePool storage pointer"
                              }
                            },
                            "id": 1430,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13222:14:4",
                            "memberName": "availableFunds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 457,
                            "src": "13217:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1431,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "13240:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                              }
                            },
                            "id": 1432,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13246:14:4",
                            "memberName": "approvedAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 437,
                            "src": "13240:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13217:43:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1434,
                        "nodeType": "ExpressionStatement",
                        "src": "13217:43:4"
                      },
                      {
                        "expression": {
                          "id": 1440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1435,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1387,
                              "src": "13271:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePool_$462_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.InsurancePool storage pointer"
                              }
                            },
                            "id": 1437,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13276:11:4",
                            "memberName": "totalClaims",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 455,
                            "src": "13271:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1438,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "13291:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                              }
                            },
                            "id": 1439,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13297:14:4",
                            "memberName": "approvedAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 437,
                            "src": "13291:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13271:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1441,
                        "nodeType": "ExpressionStatement",
                        "src": "13271:40:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1448,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1363,
                                "src": "13394:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                  "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                }
                              },
                              "id": 1449,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13400:14:4",
                              "memberName": "approvedAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 437,
                              "src": "13394:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1444,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1363,
                                    "src": "13369:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                      "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                    }
                                  },
                                  "id": 1445,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13375:8:4",
                                  "memberName": "claimant",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 422,
                                  "src": "13369:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13361:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1442,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13361:8:4",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13361:23:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13385:8:4",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "13361:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13361:54:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1451,
                        "nodeType": "ExpressionStatement",
                        "src": "13361:54:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1453,
                              "name": "_claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1353,
                              "src": "13451:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1454,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1363,
                                "src": "13461:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                  "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                }
                              },
                              "id": 1455,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13467:8:4",
                              "memberName": "claimant",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 422,
                              "src": "13461:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1456,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1363,
                                "src": "13477:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                  "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                }
                              },
                              "id": 1457,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13483:14:4",
                              "memberName": "approvedAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 437,
                              "src": "13477:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1452,
                            "name": "ClaimPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "13441:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13441:57:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1459,
                        "nodeType": "EmitStatement",
                        "src": "13436:62:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1351,
                    "nodeType": "StructuredDocumentation",
                    "src": "12416:44:4",
                    "text": " @dev Pay approved claim"
                  },
                  "functionSelector": "d70356cc",
                  "id": 1461,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1356,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1355,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "12511:12:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 318,
                        "src": "12511:12:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12511:12:4"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1358,
                          "name": "_claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1353,
                          "src": "12535:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1359,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1357,
                        "name": "validClaim",
                        "nameLocations": [
                          "12524:10:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 913,
                        "src": "12524:10:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12524:20:4"
                    }
                  ],
                  "name": "payClaim",
                  "nameLocation": "12475:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1353,
                        "mutability": "mutable",
                        "name": "_claimId",
                        "nameLocation": "12492:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1461,
                        "src": "12484:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1352,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12484:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12483:18:4"
                  },
                  "returnParameters": {
                    "id": 1360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12545:0:4"
                  },
                  "scope": 2333,
                  "src": "12466:1040:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1570,
                    "nodeType": "Block",
                    "src": "13674:957:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1470,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "13693:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13697:5:4",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "13693:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1472,
                                "name": "MIN_STAKE_AMOUNT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 513,
                                "src": "13706:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13693:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d696e696d756d207374616b6520616d6f756e74206e6f74206d6574",
                              "id": 1474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13724:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c488f0d2caf1223adad1a670f61d156960b460f735961f1a679438678b64476e",
                                "typeString": "literal_string \"Minimum stake amount not met\""
                              },
                              "value": "Minimum stake amount not met"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c488f0d2caf1223adad1a670f61d156960b460f735961f1a679438678b64476e",
                                "typeString": "literal_string \"Minimum stake amount not met\""
                              }
                            ],
                            "id": 1469,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13685:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13685:70:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1476,
                        "nodeType": "ExpressionStatement",
                        "src": "13685:70:4"
                      },
                      {
                        "assignments": [
                          1479
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1479,
                            "mutability": "mutable",
                            "name": "stakeInfo",
                            "nameLocation": "13794:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1570,
                            "src": "13776:27:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                              "typeString": "struct DecentralizedInsurance.StakeInfo"
                            },
                            "typeName": {
                              "id": 1478,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1477,
                                "name": "StakeInfo",
                                "nameLocations": [
                                  "13776:9:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 451,
                                "src": "13776:9:4"
                              },
                              "referencedDeclaration": 451,
                              "src": "13776:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1484,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1480,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "13806:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$451_storage_$",
                              "typeString": "mapping(address => struct DecentralizedInsurance.StakeInfo storage ref)"
                            }
                          },
                          "id": 1483,
                          "indexExpression": {
                            "expression": {
                              "id": 1481,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "13813:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13817:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "13813:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13806:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$451_storage",
                            "typeString": "struct DecentralizedInsurance.StakeInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13776:48:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1485,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "13899:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo storage pointer"
                              }
                            },
                            "id": 1486,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13909:6:4",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 444,
                            "src": "13899:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13918:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13899:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1495,
                        "nodeType": "IfStatement",
                        "src": "13895:78:4",
                        "trueBody": {
                          "id": 1494,
                          "nodeType": "Block",
                          "src": "13921:52:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1490,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "13950:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1491,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "13954:6:4",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "13950:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1489,
                                  "name": "updateRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1813,
                                  "src": "13936:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 1492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13936:25:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1493,
                              "nodeType": "ExpressionStatement",
                              "src": "13936:25:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1496,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "13993:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo storage pointer"
                              }
                            },
                            "id": 1498,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "14003:6:4",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 444,
                            "src": "13993:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1499,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14013:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14017:5:4",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "14013:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13993:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1502,
                        "nodeType": "ExpressionStatement",
                        "src": "13993:29:4"
                      },
                      {
                        "expression": {
                          "id": 1508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1503,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "14033:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo storage pointer"
                              }
                            },
                            "id": 1505,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "14043:11:4",
                            "memberName": "stakingDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 446,
                            "src": "14033:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1506,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "14057:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14063:9:4",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "14057:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14033:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1509,
                        "nodeType": "ExpressionStatement",
                        "src": "14033:39:4"
                      },
                      {
                        "expression": {
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1510,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "14083:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo storage pointer"
                              }
                            },
                            "id": 1512,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "14093:16:4",
                            "memberName": "lastRewardUpdate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 450,
                            "src": "14083:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1513,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "14112:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14118:9:4",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "14112:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14083:44:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1516,
                        "nodeType": "ExpressionStatement",
                        "src": "14083:44:4"
                      },
                      {
                        "assignments": [
                          1518
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1518,
                            "mutability": "mutable",
                            "name": "stakePerPool",
                            "nameLocation": "14217:12:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1570,
                            "src": "14209:20:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1517,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14209:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1523,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1519,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14232:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14236:5:4",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "14232:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 1521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14244:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "14232:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14209:36:4"
                      },
                      {
                        "body": {
                          "id": 1561,
                          "nodeType": "Block",
                          "src": "14285:276:4",
                          "statements": [
                            {
                              "assignments": [
                                1536
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1536,
                                  "mutability": "mutable",
                                  "name": "insType",
                                  "nameLocation": "14314:7:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1561,
                                  "src": "14300:21:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_InsuranceType_$372",
                                    "typeString": "enum DecentralizedInsurance.InsuranceType"
                                  },
                                  "typeName": {
                                    "id": 1535,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1534,
                                      "name": "InsuranceType",
                                      "nameLocations": [
                                        "14300:13:4"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 372,
                                      "src": "14300:13:4"
                                    },
                                    "referencedDeclaration": 372,
                                    "src": "14300:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_InsuranceType_$372",
                                      "typeString": "enum DecentralizedInsurance.InsuranceType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1540,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1538,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1525,
                                    "src": "14338:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1537,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "14324:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 1539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14324:16:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "14300:40:4"
                            },
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1541,
                                    "name": "insurancePools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 499,
                                    "src": "14359:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                      "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                    }
                                  },
                                  "id": 1543,
                                  "indexExpression": {
                                    "id": 1542,
                                    "name": "insType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1536,
                                    "src": "14374:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_InsuranceType_$372",
                                      "typeString": "enum DecentralizedInsurance.InsuranceType"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14359:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                    "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                                  }
                                },
                                "id": 1544,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14383:6:4",
                                "memberName": "active",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 461,
                                "src": "14359:30:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1560,
                              "nodeType": "IfStatement",
                              "src": "14355:195:4",
                              "trueBody": {
                                "id": 1559,
                                "nodeType": "Block",
                                "src": "14391:159:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1550,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1545,
                                            "name": "insurancePools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 499,
                                            "src": "14410:14:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                              "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                            }
                                          },
                                          "id": 1547,
                                          "indexExpression": {
                                            "id": 1546,
                                            "name": "insType",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1536,
                                            "src": "14425:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_InsuranceType_$372",
                                              "typeString": "enum DecentralizedInsurance.InsuranceType"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "14410:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                            "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                                          }
                                        },
                                        "id": 1548,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "14434:11:4",
                                        "memberName": "totalStaked",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 453,
                                        "src": "14410:35:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "id": 1549,
                                        "name": "stakePerPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1518,
                                        "src": "14449:12:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "14410:51:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1551,
                                    "nodeType": "ExpressionStatement",
                                    "src": "14410:51:4"
                                  },
                                  {
                                    "expression": {
                                      "id": 1557,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1552,
                                            "name": "insurancePools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 499,
                                            "src": "14480:14:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                              "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                            }
                                          },
                                          "id": 1554,
                                          "indexExpression": {
                                            "id": 1553,
                                            "name": "insType",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1536,
                                            "src": "14495:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_InsuranceType_$372",
                                              "typeString": "enum DecentralizedInsurance.InsuranceType"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "14480:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                            "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                                          }
                                        },
                                        "id": 1555,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "14504:14:4",
                                        "memberName": "availableFunds",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 457,
                                        "src": "14480:38:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "id": 1556,
                                        "name": "stakePerPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1518,
                                        "src": "14522:12:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "14480:54:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1558,
                                    "nodeType": "ExpressionStatement",
                                    "src": "14480:54:4"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1528,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1525,
                            "src": "14273:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 1529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14277:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "14273:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1562,
                        "initializationExpression": {
                          "assignments": [
                            1525
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1525,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "14266:1:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 1562,
                              "src": "14261:6:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1524,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "14261:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1527,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14270:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14261:10:4"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "14280:3:4",
                            "subExpression": {
                              "id": 1531,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1525,
                              "src": "14280:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1533,
                          "nodeType": "ExpressionStatement",
                          "src": "14280:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "14256:305:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1564,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14601:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14605:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14601:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1566,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14613:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14617:5:4",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "14613:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1563,
                            "name": "StakeDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "14586:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14586:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1569,
                        "nodeType": "EmitStatement",
                        "src": "14581:42:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1462,
                    "nodeType": "StructuredDocumentation",
                    "src": "13550:57:4",
                    "text": " @dev Stake CELO to provide liquidity"
                  },
                  "functionSelector": "3a4b66f1",
                  "id": 1571,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1465,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1464,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "13647:12:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 318,
                        "src": "13647:12:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13647:12:4"
                    },
                    {
                      "id": 1467,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1466,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "13660:13:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 210,
                        "src": "13660:13:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13660:13:4"
                    }
                  ],
                  "name": "stake",
                  "nameLocation": "13622:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1463,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13627:2:4"
                  },
                  "returnParameters": {
                    "id": 1468,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13674:0:4"
                  },
                  "scope": 2333,
                  "src": "13613:1018:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1699,
                    "nodeType": "Block",
                    "src": "14751:1218:4",
                    "statements": [
                      {
                        "assignments": [
                          1581
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1581,
                            "mutability": "mutable",
                            "name": "stakeInfo",
                            "nameLocation": "14780:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1699,
                            "src": "14762:27:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                              "typeString": "struct DecentralizedInsurance.StakeInfo"
                            },
                            "typeName": {
                              "id": 1580,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1579,
                                "name": "StakeInfo",
                                "nameLocations": [
                                  "14762:9:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 451,
                                "src": "14762:9:4"
                              },
                              "referencedDeclaration": 451,
                              "src": "14762:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1586,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1582,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "14792:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$451_storage_$",
                              "typeString": "mapping(address => struct DecentralizedInsurance.StakeInfo storage ref)"
                            }
                          },
                          "id": 1585,
                          "indexExpression": {
                            "expression": {
                              "id": 1583,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14799:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14803:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "14799:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14792:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$451_storage",
                            "typeString": "struct DecentralizedInsurance.StakeInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14762:48:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1588,
                                  "name": "stakeInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1581,
                                  "src": "14829:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                    "typeString": "struct DecentralizedInsurance.StakeInfo storage pointer"
                                  }
                                },
                                "id": 1589,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14839:6:4",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 444,
                                "src": "14829:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1590,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1574,
                                "src": "14849:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14829:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e74207374616b65",
                              "id": 1592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14858:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b",
                                "typeString": "literal_string \"Insufficient stake\""
                              },
                              "value": "Insufficient stake"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b",
                                "typeString": "literal_string \"Insufficient stake\""
                              }
                            ],
                            "id": 1587,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14821:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14821:58:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1594,
                        "nodeType": "ExpressionStatement",
                        "src": "14821:58:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1596,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1574,
                                "src": "14898:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14908:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "14898:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d75737420626520706f736974697665",
                              "id": 1599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14911:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc",
                                "typeString": "literal_string \"Amount must be positive\""
                              },
                              "value": "Amount must be positive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc",
                                "typeString": "literal_string \"Amount must be positive\""
                              }
                            ],
                            "id": 1595,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14890:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14890:47:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1601,
                        "nodeType": "ExpressionStatement",
                        "src": "14890:47:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1603,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15017:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15021:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15017:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1602,
                            "name": "updateRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1813,
                            "src": "15003:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15003:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1606,
                        "nodeType": "ExpressionStatement",
                        "src": "15003:25:4"
                      },
                      {
                        "assignments": [
                          1608
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1608,
                            "mutability": "mutable",
                            "name": "totalPoolFunds",
                            "nameLocation": "15111:14:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1699,
                            "src": "15103:22:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1607,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15103:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1611,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1609,
                            "name": "getTotalPoolFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "15128:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15128:19:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15103:44:4"
                      },
                      {
                        "assignments": [
                          1613
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1613,
                            "mutability": "mutable",
                            "name": "totalCoverage",
                            "nameLocation": "15166:13:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1699,
                            "src": "15158:21:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1612,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15158:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1616,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1614,
                            "name": "getTotalActiveCoverage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1981,
                            "src": "15182:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15182:24:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15158:48:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1618,
                                  "name": "totalPoolFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1608,
                                  "src": "15225:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1619,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1574,
                                  "src": "15242:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15225:24:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1623,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1621,
                                        "name": "totalCoverage",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1613,
                                        "src": "15254:13:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1622,
                                        "name": "MAX_COVERAGE_RATIO",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 516,
                                        "src": "15270:18:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15254:34:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1624,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "15253:36:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 1625,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15292:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "15253:42:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15225:70:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5769746864726177616c20776f756c642061666665637420736f6c76656e6379",
                              "id": 1628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15297:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6297e70c723b9146b16f383fb90a1838ae57064a3e31232c2c2b7200601b69ec",
                                "typeString": "literal_string \"Withdrawal would affect solvency\""
                              },
                              "value": "Withdrawal would affect solvency"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6297e70c723b9146b16f383fb90a1838ae57064a3e31232c2c2b7200601b69ec",
                                "typeString": "literal_string \"Withdrawal would affect solvency\""
                              }
                            ],
                            "id": 1617,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15217:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15217:115:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1630,
                        "nodeType": "ExpressionStatement",
                        "src": "15217:115:4"
                      },
                      {
                        "expression": {
                          "id": 1635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1631,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1581,
                              "src": "15353:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo storage pointer"
                              }
                            },
                            "id": 1633,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "15363:6:4",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 444,
                            "src": "15353:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1634,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1574,
                            "src": "15373:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15353:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1636,
                        "nodeType": "ExpressionStatement",
                        "src": "15353:27:4"
                      },
                      {
                        "assignments": [
                          1638
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1638,
                            "mutability": "mutable",
                            "name": "withdrawalPerPool",
                            "nameLocation": "15460:17:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1699,
                            "src": "15452:25:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1637,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15452:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1642,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1639,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1574,
                            "src": "15480:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 1640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15490:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "15480:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15452:39:4"
                      },
                      {
                        "body": {
                          "id": 1682,
                          "nodeType": "Block",
                          "src": "15531:312:4",
                          "statements": [
                            {
                              "assignments": [
                                1655
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1655,
                                  "mutability": "mutable",
                                  "name": "insType",
                                  "nameLocation": "15560:7:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1682,
                                  "src": "15546:21:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_InsuranceType_$372",
                                    "typeString": "enum DecentralizedInsurance.InsuranceType"
                                  },
                                  "typeName": {
                                    "id": 1654,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1653,
                                      "name": "InsuranceType",
                                      "nameLocations": [
                                        "15546:13:4"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 372,
                                      "src": "15546:13:4"
                                    },
                                    "referencedDeclaration": 372,
                                    "src": "15546:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_InsuranceType_$372",
                                      "typeString": "enum DecentralizedInsurance.InsuranceType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1659,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1657,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1644,
                                    "src": "15584:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1656,
                                  "name": "InsuranceType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "15570:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                    "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                  }
                                },
                                "id": 1658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15570:16:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15546:40:4"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1660,
                                      "name": "insurancePools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 499,
                                      "src": "15605:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                        "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                      }
                                    },
                                    "id": 1662,
                                    "indexExpression": {
                                      "id": 1661,
                                      "name": "insType",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1655,
                                      "src": "15620:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_InsuranceType_$372",
                                        "typeString": "enum DecentralizedInsurance.InsuranceType"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15605:23:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                      "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                                    }
                                  },
                                  "id": 1663,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15629:11:4",
                                  "memberName": "totalStaked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 453,
                                  "src": "15605:35:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1664,
                                  "name": "withdrawalPerPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1638,
                                  "src": "15644:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15605:56:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1681,
                              "nodeType": "IfStatement",
                              "src": "15601:231:4",
                              "trueBody": {
                                "id": 1680,
                                "nodeType": "Block",
                                "src": "15663:169:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1671,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1666,
                                            "name": "insurancePools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 499,
                                            "src": "15682:14:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                              "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                            }
                                          },
                                          "id": 1668,
                                          "indexExpression": {
                                            "id": 1667,
                                            "name": "insType",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1655,
                                            "src": "15697:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_InsuranceType_$372",
                                              "typeString": "enum DecentralizedInsurance.InsuranceType"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15682:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                            "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                                          }
                                        },
                                        "id": 1669,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "15706:11:4",
                                        "memberName": "totalStaked",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 453,
                                        "src": "15682:35:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 1670,
                                        "name": "withdrawalPerPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1638,
                                        "src": "15721:17:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15682:56:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1672,
                                    "nodeType": "ExpressionStatement",
                                    "src": "15682:56:4"
                                  },
                                  {
                                    "expression": {
                                      "id": 1678,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1673,
                                            "name": "insurancePools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 499,
                                            "src": "15757:14:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                              "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                            }
                                          },
                                          "id": 1675,
                                          "indexExpression": {
                                            "id": 1674,
                                            "name": "insType",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1655,
                                            "src": "15772:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_InsuranceType_$372",
                                              "typeString": "enum DecentralizedInsurance.InsuranceType"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15757:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                            "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                                          }
                                        },
                                        "id": 1676,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "15781:14:4",
                                        "memberName": "availableFunds",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 457,
                                        "src": "15757:38:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 1677,
                                        "name": "withdrawalPerPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1638,
                                        "src": "15799:17:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15757:59:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1679,
                                    "nodeType": "ExpressionStatement",
                                    "src": "15757:59:4"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1647,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1644,
                            "src": "15519:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 1648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15523:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "15519:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1683,
                        "initializationExpression": {
                          "assignments": [
                            1644
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1644,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "15512:1:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 1683,
                              "src": "15507:6:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1643,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "15507:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1646,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15516:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "15507:10:4"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "15526:3:4",
                            "subExpression": {
                              "id": 1650,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1644,
                              "src": "15526:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1652,
                          "nodeType": "ExpressionStatement",
                          "src": "15526:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "15502:341:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1690,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1574,
                              "src": "15892:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1686,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "15871:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15875:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "15871:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15863:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1684,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15863:8:4",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15863:19:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15883:8:4",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "15863:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15863:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1692,
                        "nodeType": "ExpressionStatement",
                        "src": "15863:37:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1694,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15941:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15945:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15941:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1696,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1574,
                              "src": "15953:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1693,
                            "name": "StakeWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 585,
                            "src": "15926:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15926:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1698,
                        "nodeType": "EmitStatement",
                        "src": "15921:40:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1572,
                    "nodeType": "StructuredDocumentation",
                    "src": "14643:40:4",
                    "text": " @dev Withdraw stake"
                  },
                  "functionSelector": "25d5971f",
                  "id": 1700,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1577,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1576,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "14738:12:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 318,
                        "src": "14738:12:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14738:12:4"
                    }
                  ],
                  "name": "withdrawStake",
                  "nameLocation": "14698:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1575,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1574,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "14720:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1700,
                        "src": "14712:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1573,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14712:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14711:17:4"
                  },
                  "returnParameters": {
                    "id": 1578,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14751:0:4"
                  },
                  "scope": 2333,
                  "src": "14689:1280:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1752,
                    "nodeType": "Block",
                    "src": "16080:386:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1707,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16105:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16109:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16105:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1706,
                            "name": "updateRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1813,
                            "src": "16091:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16091:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1710,
                        "nodeType": "ExpressionStatement",
                        "src": "16091:25:4"
                      },
                      {
                        "assignments": [
                          1713
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1713,
                            "mutability": "mutable",
                            "name": "stakeInfo",
                            "nameLocation": "16155:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1752,
                            "src": "16137:27:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                              "typeString": "struct DecentralizedInsurance.StakeInfo"
                            },
                            "typeName": {
                              "id": 1712,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1711,
                                "name": "StakeInfo",
                                "nameLocations": [
                                  "16137:9:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 451,
                                "src": "16137:9:4"
                              },
                              "referencedDeclaration": 451,
                              "src": "16137:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1718,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1714,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "16167:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$451_storage_$",
                              "typeString": "mapping(address => struct DecentralizedInsurance.StakeInfo storage ref)"
                            }
                          },
                          "id": 1717,
                          "indexExpression": {
                            "expression": {
                              "id": 1715,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16174:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16178:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16174:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16167:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$451_storage",
                            "typeString": "struct DecentralizedInsurance.StakeInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16137:48:4"
                      },
                      {
                        "assignments": [
                          1720
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1720,
                            "mutability": "mutable",
                            "name": "rewards",
                            "nameLocation": "16204:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1752,
                            "src": "16196:15:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1719,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16196:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1723,
                        "initialValue": {
                          "expression": {
                            "id": 1721,
                            "name": "stakeInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1713,
                            "src": "16214:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                              "typeString": "struct DecentralizedInsurance.StakeInfo storage pointer"
                            }
                          },
                          "id": 1722,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16224:13:4",
                          "memberName": "rewardsEarned",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 448,
                          "src": "16214:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16196:41:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1725,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1720,
                                "src": "16256:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16266:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "16256:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f207265776172647320746f20636c61696d",
                              "id": 1728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16269:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
                                "typeString": "literal_string \"No rewards to claim\""
                              },
                              "value": "No rewards to claim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
                                "typeString": "literal_string \"No rewards to claim\""
                              }
                            ],
                            "id": 1724,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16248:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16248:43:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1730,
                        "nodeType": "ExpressionStatement",
                        "src": "16248:43:4"
                      },
                      {
                        "expression": {
                          "id": 1735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1731,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1713,
                              "src": "16312:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo storage pointer"
                              }
                            },
                            "id": 1733,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "16322:13:4",
                            "memberName": "rewardsEarned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 448,
                            "src": "16312:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16338:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16312:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1736,
                        "nodeType": "ExpressionStatement",
                        "src": "16312:27:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1743,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1720,
                              "src": "16389:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1739,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "16368:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16372:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "16368:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16360:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1737,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16360:8:4",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16360:19:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16380:8:4",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "16360:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16360:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1745,
                        "nodeType": "ExpressionStatement",
                        "src": "16360:37:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1747,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16438:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16442:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16438:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1749,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1720,
                              "src": "16450:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1746,
                            "name": "RewardsClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "16423:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16423:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1751,
                        "nodeType": "EmitStatement",
                        "src": "16418:40:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1701,
                    "nodeType": "StructuredDocumentation",
                    "src": "15981:47:4",
                    "text": " @dev Claim staking rewards"
                  },
                  "functionSelector": "372500ab",
                  "id": 1753,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1704,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1703,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "16067:12:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 318,
                        "src": "16067:12:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16067:12:4"
                    }
                  ],
                  "name": "claimRewards",
                  "nameLocation": "16043:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1702,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16055:2:4"
                  },
                  "returnParameters": {
                    "id": 1705,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16080:0:4"
                  },
                  "scope": 2333,
                  "src": "16034:432:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1812,
                    "nodeType": "Block",
                    "src": "16592:457:4",
                    "statements": [
                      {
                        "assignments": [
                          1761
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1761,
                            "mutability": "mutable",
                            "name": "stakeInfo",
                            "nameLocation": "16621:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1812,
                            "src": "16603:27:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                              "typeString": "struct DecentralizedInsurance.StakeInfo"
                            },
                            "typeName": {
                              "id": 1760,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1759,
                                "name": "StakeInfo",
                                "nameLocations": [
                                  "16603:9:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 451,
                                "src": "16603:9:4"
                              },
                              "referencedDeclaration": 451,
                              "src": "16603:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1765,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1762,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "16633:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$451_storage_$",
                              "typeString": "mapping(address => struct DecentralizedInsurance.StakeInfo storage ref)"
                            }
                          },
                          "id": 1764,
                          "indexExpression": {
                            "id": 1763,
                            "name": "_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1756,
                            "src": "16640:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16633:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$451_storage",
                            "typeString": "struct DecentralizedInsurance.StakeInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16603:45:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1766,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1761,
                              "src": "16663:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo storage pointer"
                              }
                            },
                            "id": 1767,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16673:6:4",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 444,
                            "src": "16663:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16683:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16663:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1771,
                        "nodeType": "IfStatement",
                        "src": "16659:34:4",
                        "trueBody": {
                          "functionReturnParameters": 1758,
                          "id": 1770,
                          "nodeType": "Return",
                          "src": "16686:7:4"
                        }
                      },
                      {
                        "assignments": [
                          1773
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1773,
                            "mutability": "mutable",
                            "name": "timeElapsed",
                            "nameLocation": "16721:11:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1812,
                            "src": "16713:19:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1772,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16713:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1779,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1774,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "16735:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16741:9:4",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "16735:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 1776,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1761,
                              "src": "16753:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo storage pointer"
                              }
                            },
                            "id": 1777,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16763:16:4",
                            "memberName": "lastRewardUpdate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 450,
                            "src": "16753:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16735:44:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16713:66:4"
                      },
                      {
                        "assignments": [
                          1781
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1781,
                            "mutability": "mutable",
                            "name": "annualReward",
                            "nameLocation": "16798:12:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1812,
                            "src": "16790:20:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1780,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16790:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1789,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1782,
                                    "name": "stakeInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1761,
                                    "src": "16814:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                      "typeString": "struct DecentralizedInsurance.StakeInfo storage pointer"
                                    }
                                  },
                                  "id": 1783,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16824:6:4",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 444,
                                  "src": "16814:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31303030",
                                  "id": 1784,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16833:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "src": "16814:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1786,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16813:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 1787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16841:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "16813:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16790:56:4"
                      },
                      {
                        "assignments": [
                          1791
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1791,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "16884:6:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1812,
                            "src": "16876:14:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1790,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16876:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1798,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1792,
                                  "name": "annualReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1781,
                                  "src": "16894:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1793,
                                  "name": "timeElapsed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1773,
                                  "src": "16909:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16894:26:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1795,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16893:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "333635",
                            "id": 1796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16924:8:4",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_31536000_by_1",
                              "typeString": "int_const 31536000"
                            },
                            "value": "365"
                          },
                          "src": "16893:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16876:56:4"
                      },
                      {
                        "expression": {
                          "id": 1803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1799,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1761,
                              "src": "16953:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo storage pointer"
                              }
                            },
                            "id": 1801,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "16963:13:4",
                            "memberName": "rewardsEarned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 448,
                            "src": "16953:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1802,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1791,
                            "src": "16980:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16953:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1804,
                        "nodeType": "ExpressionStatement",
                        "src": "16953:33:4"
                      },
                      {
                        "expression": {
                          "id": 1810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1805,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1761,
                              "src": "16997:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo storage pointer"
                              }
                            },
                            "id": 1807,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "17007:16:4",
                            "memberName": "lastRewardUpdate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 450,
                            "src": "16997:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1808,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "17026:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17032:9:4",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "17026:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16997:44:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1811,
                        "nodeType": "ExpressionStatement",
                        "src": "16997:44:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1754,
                    "nodeType": "StructuredDocumentation",
                    "src": "16478:59:4",
                    "text": " @dev Update staking rewards for a user"
                  },
                  "id": 1813,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateRewards",
                  "nameLocation": "16552:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1757,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1756,
                        "mutability": "mutable",
                        "name": "_staker",
                        "nameLocation": "16574:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1813,
                        "src": "16566:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1755,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16566:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16565:17:4"
                  },
                  "returnParameters": {
                    "id": 1758,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16592:0:4"
                  },
                  "scope": 2333,
                  "src": "16543:506:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1826,
                    "nodeType": "Block",
                    "src": "17216:45:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1822,
                            "name": "policies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 473,
                            "src": "17234:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$416_storage_$",
                              "typeString": "mapping(uint256 => struct DecentralizedInsurance.Policy storage ref)"
                            }
                          },
                          "id": 1824,
                          "indexExpression": {
                            "id": 1823,
                            "name": "_policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1816,
                            "src": "17243:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17234:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$416_storage",
                            "typeString": "struct DecentralizedInsurance.Policy storage ref"
                          }
                        },
                        "functionReturnParameters": 1821,
                        "id": 1825,
                        "nodeType": "Return",
                        "src": "17227:26:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1814,
                    "nodeType": "StructuredDocumentation",
                    "src": "17090:44:4",
                    "text": " @dev Get policy details"
                  },
                  "functionSelector": "2b07fce3",
                  "id": 1827,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPolicy",
                  "nameLocation": "17149:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1817,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1816,
                        "mutability": "mutable",
                        "name": "_policyId",
                        "nameLocation": "17167:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "17159:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1815,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17159:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17158:19:4"
                  },
                  "returnParameters": {
                    "id": 1821,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1820,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "17201:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$416_memory_ptr",
                          "typeString": "struct DecentralizedInsurance.Policy"
                        },
                        "typeName": {
                          "id": 1819,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1818,
                            "name": "Policy",
                            "nameLocations": [
                              "17201:6:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 416,
                            "src": "17201:6:4"
                          },
                          "referencedDeclaration": 416,
                          "src": "17201:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$416_storage_ptr",
                            "typeString": "struct DecentralizedInsurance.Policy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17200:15:4"
                  },
                  "scope": 2333,
                  "src": "17140:121:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1840,
                    "nodeType": "Block",
                    "src": "17395:42:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1836,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "17413:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$442_storage_$",
                              "typeString": "mapping(uint256 => struct DecentralizedInsurance.Claim storage ref)"
                            }
                          },
                          "id": 1838,
                          "indexExpression": {
                            "id": 1837,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1830,
                            "src": "17420:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17413:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$442_storage",
                            "typeString": "struct DecentralizedInsurance.Claim storage ref"
                          }
                        },
                        "functionReturnParameters": 1835,
                        "id": 1839,
                        "nodeType": "Return",
                        "src": "17406:23:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1828,
                    "nodeType": "StructuredDocumentation",
                    "src": "17273:43:4",
                    "text": " @dev Get claim details"
                  },
                  "functionSelector": "5aef2447",
                  "id": 1841,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaim",
                  "nameLocation": "17331:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1831,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1830,
                        "mutability": "mutable",
                        "name": "_claimId",
                        "nameLocation": "17348:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1841,
                        "src": "17340:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1829,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17340:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17339:18:4"
                  },
                  "returnParameters": {
                    "id": 1835,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1834,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1841,
                        "src": "17381:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$442_memory_ptr",
                          "typeString": "struct DecentralizedInsurance.Claim"
                        },
                        "typeName": {
                          "id": 1833,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1832,
                            "name": "Claim",
                            "nameLocations": [
                              "17381:5:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 442,
                            "src": "17381:5:4"
                          },
                          "referencedDeclaration": 442,
                          "src": "17381:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                            "typeString": "struct DecentralizedInsurance.Claim"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17380:14:4"
                  },
                  "scope": 2333,
                  "src": "17322:115:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1854,
                    "nodeType": "Block",
                    "src": "17581:45:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1850,
                            "name": "userPolicies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 483,
                            "src": "17599:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 1852,
                          "indexExpression": {
                            "id": 1851,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1844,
                            "src": "17612:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17599:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1849,
                        "id": 1853,
                        "nodeType": "Return",
                        "src": "17592:26:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1842,
                    "nodeType": "StructuredDocumentation",
                    "src": "17449:45:4",
                    "text": " @dev Get user's policies"
                  },
                  "functionSelector": "19ac4614",
                  "id": 1855,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserPolicies",
                  "nameLocation": "17509:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1845,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1844,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "17533:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1855,
                        "src": "17525:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1843,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17525:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17524:15:4"
                  },
                  "returnParameters": {
                    "id": 1849,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1848,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1855,
                        "src": "17563:16:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1846,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "17563:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1847,
                          "nodeType": "ArrayTypeName",
                          "src": "17563:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17562:18:4"
                  },
                  "scope": 2333,
                  "src": "17500:126:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1868,
                    "nodeType": "Block",
                    "src": "17766:43:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1864,
                            "name": "userClaims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 488,
                            "src": "17784:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 1866,
                          "indexExpression": {
                            "id": 1865,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1858,
                            "src": "17795:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17784:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1863,
                        "id": 1867,
                        "nodeType": "Return",
                        "src": "17777:24:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1856,
                    "nodeType": "StructuredDocumentation",
                    "src": "17638:43:4",
                    "text": " @dev Get user's claims"
                  },
                  "functionSelector": "7bcb4a64",
                  "id": 1869,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserClaims",
                  "nameLocation": "17696:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1859,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1858,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "17718:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1869,
                        "src": "17710:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1857,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17710:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17709:15:4"
                  },
                  "returnParameters": {
                    "id": 1863,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1862,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1869,
                        "src": "17748:16:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1860,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "17748:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1861,
                          "nodeType": "ArrayTypeName",
                          "src": "17748:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17747:18:4"
                  },
                  "scope": 2333,
                  "src": "17687:122:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1882,
                    "nodeType": "Block",
                    "src": "17954:41:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1878,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "17972:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$451_storage_$",
                              "typeString": "mapping(address => struct DecentralizedInsurance.StakeInfo storage ref)"
                            }
                          },
                          "id": 1880,
                          "indexExpression": {
                            "id": 1879,
                            "name": "_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1872,
                            "src": "17979:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17972:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$451_storage",
                            "typeString": "struct DecentralizedInsurance.StakeInfo storage ref"
                          }
                        },
                        "functionReturnParameters": 1877,
                        "id": 1881,
                        "nodeType": "Return",
                        "src": "17965:22:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1870,
                    "nodeType": "StructuredDocumentation",
                    "src": "17821:47:4",
                    "text": " @dev Get stake information"
                  },
                  "functionSelector": "c3453153",
                  "id": 1883,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStakeInfo",
                  "nameLocation": "17883:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1873,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1872,
                        "mutability": "mutable",
                        "name": "_staker",
                        "nameLocation": "17904:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1883,
                        "src": "17896:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1871,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17896:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17895:17:4"
                  },
                  "returnParameters": {
                    "id": 1877,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1876,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1883,
                        "src": "17936:16:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakeInfo_$451_memory_ptr",
                          "typeString": "struct DecentralizedInsurance.StakeInfo"
                        },
                        "typeName": {
                          "id": 1875,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1874,
                            "name": "StakeInfo",
                            "nameLocations": [
                              "17936:9:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 451,
                            "src": "17936:9:4"
                          },
                          "referencedDeclaration": 451,
                          "src": "17936:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                            "typeString": "struct DecentralizedInsurance.StakeInfo"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17935:18:4"
                  },
                  "scope": 2333,
                  "src": "17874:121:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1897,
                    "nodeType": "Block",
                    "src": "18161:47:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1893,
                            "name": "insurancePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 499,
                            "src": "18179:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                              "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                            }
                          },
                          "id": 1895,
                          "indexExpression": {
                            "id": 1894,
                            "name": "_type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1887,
                            "src": "18194:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_InsuranceType_$372",
                              "typeString": "enum DecentralizedInsurance.InsuranceType"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18179:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                            "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                          }
                        },
                        "functionReturnParameters": 1892,
                        "id": 1896,
                        "nodeType": "Return",
                        "src": "18172:28:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1884,
                    "nodeType": "StructuredDocumentation",
                    "src": "18007:56:4",
                    "text": " @dev Get insurance pool information"
                  },
                  "functionSelector": "7a1419a1",
                  "id": 1898,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getInsurancePool",
                  "nameLocation": "18078:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1888,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1887,
                        "mutability": "mutable",
                        "name": "_type",
                        "nameLocation": "18109:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1898,
                        "src": "18095:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InsuranceType_$372",
                          "typeString": "enum DecentralizedInsurance.InsuranceType"
                        },
                        "typeName": {
                          "id": 1886,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1885,
                            "name": "InsuranceType",
                            "nameLocations": [
                              "18095:13:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 372,
                            "src": "18095:13:4"
                          },
                          "referencedDeclaration": 372,
                          "src": "18095:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_InsuranceType_$372",
                            "typeString": "enum DecentralizedInsurance.InsuranceType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18094:21:4"
                  },
                  "returnParameters": {
                    "id": 1892,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1891,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1898,
                        "src": "18139:20:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$462_memory_ptr",
                          "typeString": "struct DecentralizedInsurance.InsurancePool"
                        },
                        "typeName": {
                          "id": 1890,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1889,
                            "name": "InsurancePool",
                            "nameLocations": [
                              "18139:13:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 462,
                            "src": "18139:13:4"
                          },
                          "referencedDeclaration": 462,
                          "src": "18139:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InsurancePool_$462_storage_ptr",
                            "typeString": "struct DecentralizedInsurance.InsurancePool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18138:22:4"
                  },
                  "scope": 2333,
                  "src": "18069:139:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1931,
                    "nodeType": "Block",
                    "src": "18358:181:4",
                    "statements": [
                      {
                        "assignments": [
                          1905
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1905,
                            "mutability": "mutable",
                            "name": "total",
                            "nameLocation": "18377:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1931,
                            "src": "18369:13:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1904,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18369:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1907,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18385:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18369:17:4"
                      },
                      {
                        "body": {
                          "id": 1927,
                          "nodeType": "Block",
                          "src": "18426:83:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1925,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1918,
                                  "name": "total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1905,
                                  "src": "18441:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1919,
                                      "name": "insurancePools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 499,
                                      "src": "18450:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                        "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                      }
                                    },
                                    "id": 1923,
                                    "indexExpression": {
                                      "arguments": [
                                        {
                                          "id": 1921,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1909,
                                          "src": "18479:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1920,
                                        "name": "InsuranceType",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 372,
                                        "src": "18465:13:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_InsuranceType_$372_$",
                                          "typeString": "type(enum DecentralizedInsurance.InsuranceType)"
                                        }
                                      },
                                      "id": 1922,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18465:16:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_InsuranceType_$372",
                                        "typeString": "enum DecentralizedInsurance.InsuranceType"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18450:32:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                      "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                                    }
                                  },
                                  "id": 1924,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "18483:14:4",
                                  "memberName": "availableFunds",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 457,
                                  "src": "18450:47:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18441:56:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1926,
                              "nodeType": "ExpressionStatement",
                              "src": "18441:56:4"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1912,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1909,
                            "src": "18414:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 1913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18418:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "18414:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1928,
                        "initializationExpression": {
                          "assignments": [
                            1909
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1909,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "18407:1:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 1928,
                              "src": "18402:6:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1908,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "18402:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1911,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18411:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18402:10:4"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "18421:3:4",
                            "subExpression": {
                              "id": 1915,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1909,
                              "src": "18421:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1917,
                          "nodeType": "ExpressionStatement",
                          "src": "18421:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "18397:112:4"
                      },
                      {
                        "expression": {
                          "id": 1929,
                          "name": "total",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1905,
                          "src": "18526:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1903,
                        "id": 1930,
                        "nodeType": "Return",
                        "src": "18519:12:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1899,
                    "nodeType": "StructuredDocumentation",
                    "src": "18220:73:4",
                    "text": " @dev Get total pool funds across all insurance types"
                  },
                  "functionSelector": "b31ef5bb",
                  "id": 1932,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalPoolFunds",
                  "nameLocation": "18308:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1900,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18325:2:4"
                  },
                  "returnParameters": {
                    "id": 1903,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1902,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1932,
                        "src": "18349:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1901,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18349:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18348:9:4"
                  },
                  "scope": 2333,
                  "src": "18299:240:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1980,
                    "nodeType": "Block",
                    "src": "18692:297:4",
                    "statements": [
                      {
                        "assignments": [
                          1939
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1939,
                            "mutability": "mutable",
                            "name": "total",
                            "nameLocation": "18711:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1980,
                            "src": "18703:13:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1938,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18703:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1941,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18719:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18703:17:4"
                      },
                      {
                        "body": {
                          "id": 1976,
                          "nodeType": "Block",
                          "src": "18774:185:4",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_PolicyStatus_$377",
                                    "typeString": "enum DecentralizedInsurance.PolicyStatus"
                                  },
                                  "id": 1958,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1952,
                                        "name": "policies",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 473,
                                        "src": "18793:8:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$416_storage_$",
                                          "typeString": "mapping(uint256 => struct DecentralizedInsurance.Policy storage ref)"
                                        }
                                      },
                                      "id": 1954,
                                      "indexExpression": {
                                        "id": 1953,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1943,
                                        "src": "18802:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "18793:11:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Policy_$416_storage",
                                        "typeString": "struct DecentralizedInsurance.Policy storage ref"
                                      }
                                    },
                                    "id": 1955,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "18805:6:4",
                                    "memberName": "status",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 406,
                                    "src": "18793:18:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_PolicyStatus_$377",
                                      "typeString": "enum DecentralizedInsurance.PolicyStatus"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1956,
                                      "name": "PolicyStatus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 377,
                                      "src": "18815:12:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$377_$",
                                        "typeString": "type(enum DecentralizedInsurance.PolicyStatus)"
                                      }
                                    },
                                    "id": 1957,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "18828:6:4",
                                    "memberName": "ACTIVE",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 373,
                                    "src": "18815:19:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_PolicyStatus_$377",
                                      "typeString": "enum DecentralizedInsurance.PolicyStatus"
                                    }
                                  },
                                  "src": "18793:41:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1965,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1959,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "18838:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1960,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "18844:9:4",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "18838:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1961,
                                        "name": "policies",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 473,
                                        "src": "18857:8:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$416_storage_$",
                                          "typeString": "mapping(uint256 => struct DecentralizedInsurance.Policy storage ref)"
                                        }
                                      },
                                      "id": 1963,
                                      "indexExpression": {
                                        "id": 1962,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1943,
                                        "src": "18866:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "18857:11:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Policy_$416_storage",
                                        "typeString": "struct DecentralizedInsurance.Policy storage ref"
                                      }
                                    },
                                    "id": 1964,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "18869:7:4",
                                    "memberName": "endDate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 403,
                                    "src": "18857:19:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18838:38:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "18793:83:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1975,
                              "nodeType": "IfStatement",
                              "src": "18789:159:4",
                              "trueBody": {
                                "id": 1974,
                                "nodeType": "Block",
                                "src": "18878:70:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1972,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1967,
                                        "name": "total",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1939,
                                        "src": "18897:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1968,
                                            "name": "policies",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 473,
                                            "src": "18906:8:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$416_storage_$",
                                              "typeString": "mapping(uint256 => struct DecentralizedInsurance.Policy storage ref)"
                                            }
                                          },
                                          "id": 1970,
                                          "indexExpression": {
                                            "id": 1969,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1943,
                                            "src": "18915:1:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "18906:11:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Policy_$416_storage",
                                            "typeString": "struct DecentralizedInsurance.Policy storage ref"
                                          }
                                        },
                                        "id": 1971,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "18918:14:4",
                                        "memberName": "coverageAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 397,
                                        "src": "18906:26:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "18897:35:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1973,
                                    "nodeType": "ExpressionStatement",
                                    "src": "18897:35:4"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1946,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1943,
                            "src": "18751:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1947,
                            "name": "nextPolicyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "18755:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18751:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1977,
                        "initializationExpression": {
                          "assignments": [
                            1943
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1943,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "18744:1:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 1977,
                              "src": "18736:9:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1942,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "18736:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1945,
                          "initialValue": {
                            "hexValue": "31",
                            "id": 1944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18748:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18736:13:4"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "18769:3:4",
                            "subExpression": {
                              "id": 1949,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1943,
                              "src": "18769:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1951,
                          "nodeType": "ExpressionStatement",
                          "src": "18769:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "18731:228:4"
                      },
                      {
                        "expression": {
                          "id": 1978,
                          "name": "total",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1939,
                          "src": "18976:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1937,
                        "id": 1979,
                        "nodeType": "Return",
                        "src": "18969:12:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1933,
                    "nodeType": "StructuredDocumentation",
                    "src": "18551:71:4",
                    "text": " @dev Get total active coverage across all policies"
                  },
                  "functionSelector": "e1c8b86f",
                  "id": 1981,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalActiveCoverage",
                  "nameLocation": "18637:22:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1934,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18659:2:4"
                  },
                  "returnParameters": {
                    "id": 1937,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1936,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1981,
                        "src": "18683:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1935,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18683:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18682:9:4"
                  },
                  "scope": 2333,
                  "src": "18628:361:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2036,
                    "nodeType": "Block",
                    "src": "19153:437:4",
                    "statements": [
                      {
                        "assignments": [
                          1991
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1991,
                            "mutability": "mutable",
                            "name": "stakeInfo",
                            "nameLocation": "19181:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 2036,
                            "src": "19164:26:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$451_memory_ptr",
                              "typeString": "struct DecentralizedInsurance.StakeInfo"
                            },
                            "typeName": {
                              "id": 1990,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1989,
                                "name": "StakeInfo",
                                "nameLocations": [
                                  "19164:9:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 451,
                                "src": "19164:9:4"
                              },
                              "referencedDeclaration": 451,
                              "src": "19164:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1995,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1992,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "19193:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$451_storage_$",
                              "typeString": "mapping(address => struct DecentralizedInsurance.StakeInfo storage ref)"
                            }
                          },
                          "id": 1994,
                          "indexExpression": {
                            "id": 1993,
                            "name": "_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1984,
                            "src": "19200:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19193:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$451_storage",
                            "typeString": "struct DecentralizedInsurance.StakeInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19164:44:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1996,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "19223:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_memory_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo memory"
                              }
                            },
                            "id": 1997,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19233:6:4",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 444,
                            "src": "19223:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19243:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "19223:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2003,
                        "nodeType": "IfStatement",
                        "src": "19219:57:4",
                        "trueBody": {
                          "expression": {
                            "expression": {
                              "id": 2000,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "19253:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_memory_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo memory"
                              }
                            },
                            "id": 2001,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19263:13:4",
                            "memberName": "rewardsEarned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 448,
                            "src": "19253:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1988,
                          "id": 2002,
                          "nodeType": "Return",
                          "src": "19246:30:4"
                        }
                      },
                      {
                        "assignments": [
                          2005
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2005,
                            "mutability": "mutable",
                            "name": "timeElapsed",
                            "nameLocation": "19305:11:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 2036,
                            "src": "19297:19:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2004,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19297:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2011,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2006,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "19319:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19325:9:4",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "19319:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 2008,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "19337:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_memory_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo memory"
                              }
                            },
                            "id": 2009,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19347:16:4",
                            "memberName": "lastRewardUpdate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 450,
                            "src": "19337:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19319:44:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19297:66:4"
                      },
                      {
                        "assignments": [
                          2013
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2013,
                            "mutability": "mutable",
                            "name": "annualReward",
                            "nameLocation": "19382:12:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 2036,
                            "src": "19374:20:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2012,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19374:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2021,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2014,
                                    "name": "stakeInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1991,
                                    "src": "19398:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakeInfo_$451_memory_ptr",
                                      "typeString": "struct DecentralizedInsurance.StakeInfo memory"
                                    }
                                  },
                                  "id": 2015,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "19408:6:4",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 444,
                                  "src": "19398:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31303030",
                                  "id": 2016,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19417:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "src": "19398:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2018,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "19397:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 2019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19425:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "19397:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19374:56:4"
                      },
                      {
                        "assignments": [
                          2023
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2023,
                            "mutability": "mutable",
                            "name": "newReward",
                            "nameLocation": "19468:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 2036,
                            "src": "19460:17:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2022,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19460:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2030,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2026,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2024,
                                  "name": "annualReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2013,
                                  "src": "19481:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2025,
                                  "name": "timeElapsed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2005,
                                  "src": "19496:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19481:26:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2027,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "19480:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "333635",
                            "id": 2028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19511:8:4",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_31536000_by_1",
                              "typeString": "int_const 31536000"
                            },
                            "value": "365"
                          },
                          "src": "19480:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19460:59:4"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2031,
                              "name": "stakeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "19547:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$451_memory_ptr",
                                "typeString": "struct DecentralizedInsurance.StakeInfo memory"
                              }
                            },
                            "id": 2032,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19557:13:4",
                            "memberName": "rewardsEarned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 448,
                            "src": "19547:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2033,
                            "name": "newReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2023,
                            "src": "19573:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19547:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1988,
                        "id": 2035,
                        "nodeType": "Return",
                        "src": "19540:42:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1982,
                    "nodeType": "StructuredDocumentation",
                    "src": "19001:64:4",
                    "text": " @dev Calculate pending rewards for a staker"
                  },
                  "functionSelector": "097aad10",
                  "id": 2037,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculatePendingRewards",
                  "nameLocation": "19080:23:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1985,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1984,
                        "mutability": "mutable",
                        "name": "_staker",
                        "nameLocation": "19112:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2037,
                        "src": "19104:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1983,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19104:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19103:17:4"
                  },
                  "returnParameters": {
                    "id": 1988,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1987,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2037,
                        "src": "19144:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1986,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19144:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19143:9:4"
                  },
                  "scope": 2333,
                  "src": "19071:519:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2055,
                    "nodeType": "Block",
                    "src": "19758:112:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2045,
                              "name": "authorizedInvestigators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "19769:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2047,
                            "indexExpression": {
                              "id": 2046,
                              "name": "_investigator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2040,
                              "src": "19793:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19769:38:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19810:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "19769:45:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2050,
                        "nodeType": "ExpressionStatement",
                        "src": "19769:45:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2052,
                              "name": "_investigator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2040,
                              "src": "19848:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2051,
                            "name": "InvestigatorAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 595,
                            "src": "19830:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19830:32:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2054,
                        "nodeType": "EmitStatement",
                        "src": "19825:37:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2038,
                    "nodeType": "StructuredDocumentation",
                    "src": "19632:53:4",
                    "text": " @dev Add authorized investigator"
                  },
                  "functionSelector": "e5078ed7",
                  "id": 2056,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2043,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2042,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "19748:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "19748:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "19748:9:4"
                    }
                  ],
                  "name": "addInvestigator",
                  "nameLocation": "19700:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2040,
                        "mutability": "mutable",
                        "name": "_investigator",
                        "nameLocation": "19724:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2056,
                        "src": "19716:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2039,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19716:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19715:23:4"
                  },
                  "returnParameters": {
                    "id": 2044,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19758:0:4"
                  },
                  "scope": 2333,
                  "src": "19691:179:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2070,
                    "nodeType": "Block",
                    "src": "20014:65:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2064,
                              "name": "authorizedInvestigators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "20025:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2066,
                            "indexExpression": {
                              "id": 2065,
                              "name": "_investigator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2059,
                              "src": "20049:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20025:38:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 2067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20066:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "20025:46:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2069,
                        "nodeType": "ExpressionStatement",
                        "src": "20025:46:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2057,
                    "nodeType": "StructuredDocumentation",
                    "src": "19882:56:4",
                    "text": " @dev Remove authorized investigator"
                  },
                  "functionSelector": "4c5e3e85",
                  "id": 2071,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2062,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2061,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "20004:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "20004:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "20004:9:4"
                    }
                  ],
                  "name": "removeInvestigator",
                  "nameLocation": "19953:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2060,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2059,
                        "mutability": "mutable",
                        "name": "_investigator",
                        "nameLocation": "19980:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2071,
                        "src": "19972:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2058,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19972:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19971:23:4"
                  },
                  "returnParameters": {
                    "id": 2063,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20014:0:4"
                  },
                  "scope": 2333,
                  "src": "19944:135:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2089,
                    "nodeType": "Block",
                    "src": "20199:88:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2079,
                              "name": "authorizedOracles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 507,
                              "src": "20210:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2081,
                            "indexExpression": {
                              "id": 2080,
                              "name": "_oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2074,
                              "src": "20228:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20210:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20239:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "20210:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2084,
                        "nodeType": "ExpressionStatement",
                        "src": "20210:33:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2086,
                              "name": "_oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2074,
                              "src": "20271:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2085,
                            "name": "OracleAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "20259:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20259:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2088,
                        "nodeType": "EmitStatement",
                        "src": "20254:25:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2072,
                    "nodeType": "StructuredDocumentation",
                    "src": "20091:47:4",
                    "text": " @dev Add authorized oracle"
                  },
                  "functionSelector": "df5dd1a5",
                  "id": 2090,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2077,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2076,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "20189:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "20189:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "20189:9:4"
                    }
                  ],
                  "name": "addOracle",
                  "nameLocation": "20153:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2075,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2074,
                        "mutability": "mutable",
                        "name": "_oracle",
                        "nameLocation": "20171:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2090,
                        "src": "20163:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2073,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20163:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20162:17:4"
                  },
                  "returnParameters": {
                    "id": 2078,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20199:0:4"
                  },
                  "scope": 2333,
                  "src": "20144:143:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2104,
                    "nodeType": "Block",
                    "src": "20413:53:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2098,
                              "name": "authorizedOracles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 507,
                              "src": "20424:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2100,
                            "indexExpression": {
                              "id": 2099,
                              "name": "_oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2093,
                              "src": "20442:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20424:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20453:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "20424:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2103,
                        "nodeType": "ExpressionStatement",
                        "src": "20424:34:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2091,
                    "nodeType": "StructuredDocumentation",
                    "src": "20299:50:4",
                    "text": " @dev Remove authorized oracle"
                  },
                  "functionSelector": "fdc85fc4",
                  "id": 2105,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2096,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2095,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "20403:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "20403:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "20403:9:4"
                    }
                  ],
                  "name": "removeOracle",
                  "nameLocation": "20364:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2093,
                        "mutability": "mutable",
                        "name": "_oracle",
                        "nameLocation": "20385:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2105,
                        "src": "20377:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2092,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20377:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20376:17:4"
                  },
                  "returnParameters": {
                    "id": 2097,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20413:0:4"
                  },
                  "scope": 2333,
                  "src": "20355:111:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2134,
                    "nodeType": "Block",
                    "src": "20663:112:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2120,
                                "name": "_rate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2114,
                                "src": "20682:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "35303030",
                                "id": 2121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20691:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5000_by_1",
                                  "typeString": "int_const 5000"
                                },
                                "value": "5000"
                              },
                              "src": "20682:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526174652063616e6e6f742065786365656420353025",
                              "id": 2123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20697:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_13332bf0d2fe8e3b38be44a4927a6fb21aa63f32b2dcf401b8f1f6b1aa532662",
                                "typeString": "literal_string \"Rate cannot exceed 50%\""
                              },
                              "value": "Rate cannot exceed 50%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_13332bf0d2fe8e3b38be44a4927a6fb21aa63f32b2dcf401b8f1f6b1aa532662",
                                "typeString": "literal_string \"Rate cannot exceed 50%\""
                              }
                            ],
                            "id": 2119,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20674:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20674:48:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2125,
                        "nodeType": "ExpressionStatement",
                        "src": "20674:48:4"
                      },
                      {
                        "expression": {
                          "id": 2132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2126,
                                "name": "premiumRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "20733:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => mapping(enum DecentralizedInsurance.RiskLevel => uint256))"
                                }
                              },
                              "id": 2129,
                              "indexExpression": {
                                "id": 2127,
                                "name": "_type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2109,
                                "src": "20746:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20733:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_RiskLevel_$388_$_t_uint256_$",
                                "typeString": "mapping(enum DecentralizedInsurance.RiskLevel => uint256)"
                              }
                            },
                            "id": 2130,
                            "indexExpression": {
                              "id": 2128,
                              "name": "_risk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2112,
                              "src": "20753:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RiskLevel_$388",
                                "typeString": "enum DecentralizedInsurance.RiskLevel"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20733:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2131,
                            "name": "_rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2114,
                            "src": "20762:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20733:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2133,
                        "nodeType": "ExpressionStatement",
                        "src": "20733:34:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2106,
                    "nodeType": "StructuredDocumentation",
                    "src": "20478:46:4",
                    "text": " @dev Update premium rates"
                  },
                  "functionSelector": "7b73ba67",
                  "id": 2135,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2117,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2116,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "20653:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "20653:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "20653:9:4"
                    }
                  ],
                  "name": "updatePremiumRate",
                  "nameLocation": "20539:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2109,
                        "mutability": "mutable",
                        "name": "_type",
                        "nameLocation": "20581:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2135,
                        "src": "20567:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InsuranceType_$372",
                          "typeString": "enum DecentralizedInsurance.InsuranceType"
                        },
                        "typeName": {
                          "id": 2108,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2107,
                            "name": "InsuranceType",
                            "nameLocations": [
                              "20567:13:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 372,
                            "src": "20567:13:4"
                          },
                          "referencedDeclaration": 372,
                          "src": "20567:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_InsuranceType_$372",
                            "typeString": "enum DecentralizedInsurance.InsuranceType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2112,
                        "mutability": "mutable",
                        "name": "_risk",
                        "nameLocation": "20607:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2135,
                        "src": "20597:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RiskLevel_$388",
                          "typeString": "enum DecentralizedInsurance.RiskLevel"
                        },
                        "typeName": {
                          "id": 2111,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2110,
                            "name": "RiskLevel",
                            "nameLocations": [
                              "20597:9:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 388,
                            "src": "20597:9:4"
                          },
                          "referencedDeclaration": 388,
                          "src": "20597:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RiskLevel_$388",
                            "typeString": "enum DecentralizedInsurance.RiskLevel"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2114,
                        "mutability": "mutable",
                        "name": "_rate",
                        "nameLocation": "20631:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2135,
                        "src": "20623:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2113,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20623:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20556:87:4"
                  },
                  "returnParameters": {
                    "id": 2118,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20663:0:4"
                  },
                  "scope": 2333,
                  "src": "20530:245:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2160,
                    "nodeType": "Block",
                    "src": "20927:118:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2147,
                                "name": "_rate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2141,
                                "src": "20946:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "32303030",
                                "id": 2148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20955:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000_by_1",
                                  "typeString": "int_const 2000"
                                },
                                "value": "2000"
                              },
                              "src": "20946:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526174652063616e6e6f742065786365656420323025",
                              "id": 2150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20961:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e5abe3003450409e5f361f3af937613b4be39ea2c23cd188f7ea0e6d665f9463",
                                "typeString": "literal_string \"Rate cannot exceed 20%\""
                              },
                              "value": "Rate cannot exceed 20%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e5abe3003450409e5f361f3af937613b4be39ea2c23cd188f7ea0e6d665f9463",
                                "typeString": "literal_string \"Rate cannot exceed 20%\""
                              }
                            ],
                            "id": 2146,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20938:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20938:48:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2152,
                        "nodeType": "ExpressionStatement",
                        "src": "20938:48:4"
                      },
                      {
                        "expression": {
                          "id": 2158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2153,
                                "name": "insurancePools",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 499,
                                "src": "20997:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                }
                              },
                              "id": 2155,
                              "indexExpression": {
                                "id": 2154,
                                "name": "_type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2139,
                                "src": "21012:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20997:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                              }
                            },
                            "id": 2156,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "21019:10:4",
                            "memberName": "rewardRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 459,
                            "src": "20997:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2157,
                            "name": "_rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2141,
                            "src": "21032:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20997:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2159,
                        "nodeType": "ExpressionStatement",
                        "src": "20997:40:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2136,
                    "nodeType": "StructuredDocumentation",
                    "src": "20787:49:4",
                    "text": " @dev Update pool reward rate"
                  },
                  "functionSelector": "53f49834",
                  "id": 2161,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2144,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2143,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "20917:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "20917:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "20917:9:4"
                    }
                  ],
                  "name": "updatePoolRewardRate",
                  "nameLocation": "20851:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2139,
                        "mutability": "mutable",
                        "name": "_type",
                        "nameLocation": "20886:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2161,
                        "src": "20872:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InsuranceType_$372",
                          "typeString": "enum DecentralizedInsurance.InsuranceType"
                        },
                        "typeName": {
                          "id": 2138,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2137,
                            "name": "InsuranceType",
                            "nameLocations": [
                              "20872:13:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 372,
                            "src": "20872:13:4"
                          },
                          "referencedDeclaration": 372,
                          "src": "20872:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_InsuranceType_$372",
                            "typeString": "enum DecentralizedInsurance.InsuranceType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2141,
                        "mutability": "mutable",
                        "name": "_rate",
                        "nameLocation": "20901:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2161,
                        "src": "20893:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2140,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20893:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20871:36:4"
                  },
                  "returnParameters": {
                    "id": 2145,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20927:0:4"
                  },
                  "scope": 2333,
                  "src": "20842:203:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2181,
                    "nodeType": "Block",
                    "src": "21190:79:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2170,
                                "name": "insurancePools",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 499,
                                "src": "21201:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                  "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                }
                              },
                              "id": 2172,
                              "indexExpression": {
                                "id": 2171,
                                "name": "_type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2165,
                                "src": "21216:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_InsuranceType_$372",
                                  "typeString": "enum DecentralizedInsurance.InsuranceType"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21201:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                              }
                            },
                            "id": 2173,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "21223:6:4",
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 461,
                            "src": "21201:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "21232:29:4",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2174,
                                  "name": "insurancePools",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 499,
                                  "src": "21233:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_InsuranceType_$372_$_t_struct$_InsurancePool_$462_storage_$",
                                    "typeString": "mapping(enum DecentralizedInsurance.InsuranceType => struct DecentralizedInsurance.InsurancePool storage ref)"
                                  }
                                },
                                "id": 2176,
                                "indexExpression": {
                                  "id": 2175,
                                  "name": "_type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2165,
                                  "src": "21248:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_InsuranceType_$372",
                                    "typeString": "enum DecentralizedInsurance.InsuranceType"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21233:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InsurancePool_$462_storage",
                                  "typeString": "struct DecentralizedInsurance.InsurancePool storage ref"
                                }
                              },
                              "id": 2177,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "21255:6:4",
                              "memberName": "active",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 461,
                              "src": "21233:28:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "21201:60:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2180,
                        "nodeType": "ExpressionStatement",
                        "src": "21201:60:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2162,
                    "nodeType": "StructuredDocumentation",
                    "src": "21057:61:4",
                    "text": " @dev Toggle insurance pool active status"
                  },
                  "functionSelector": "eebcb0a9",
                  "id": 2182,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2168,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2167,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "21180:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "21180:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "21180:9:4"
                    }
                  ],
                  "name": "togglePoolStatus",
                  "nameLocation": "21133:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2165,
                        "mutability": "mutable",
                        "name": "_type",
                        "nameLocation": "21164:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2182,
                        "src": "21150:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InsuranceType_$372",
                          "typeString": "enum DecentralizedInsurance.InsuranceType"
                        },
                        "typeName": {
                          "id": 2164,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2163,
                            "name": "InsuranceType",
                            "nameLocations": [
                              "21150:13:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 372,
                            "src": "21150:13:4"
                          },
                          "referencedDeclaration": 372,
                          "src": "21150:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_InsuranceType_$372",
                            "typeString": "enum DecentralizedInsurance.InsuranceType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21149:21:4"
                  },
                  "returnParameters": {
                    "id": 2169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21190:0:4"
                  },
                  "scope": 2333,
                  "src": "21124:145:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2191,
                    "nodeType": "Block",
                    "src": "21364:27:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2188,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 268,
                            "src": "21375:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21375:8:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2190,
                        "nodeType": "ExpressionStatement",
                        "src": "21375:8:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2183,
                    "nodeType": "StructuredDocumentation",
                    "src": "21281:41:4",
                    "text": " @dev Emergency pause"
                  },
                  "functionSelector": "8456cb59",
                  "id": 2192,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2186,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2185,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "21354:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "21354:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "21354:9:4"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "21337:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2184,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21342:2:4"
                  },
                  "returnParameters": {
                    "id": 2187,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21364:0:4"
                  },
                  "scope": 2333,
                  "src": "21328:63:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2201,
                    "nodeType": "Block",
                    "src": "21480:29:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2198,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "21491:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21491:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2200,
                        "nodeType": "ExpressionStatement",
                        "src": "21491:10:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2193,
                    "nodeType": "StructuredDocumentation",
                    "src": "21403:33:4",
                    "text": " @dev Unpause"
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 2202,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2196,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2195,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "21470:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "21470:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "21470:9:4"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "21451:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2194,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21458:2:4"
                  },
                  "returnParameters": {
                    "id": 2197,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21480:0:4"
                  },
                  "scope": 2333,
                  "src": "21442:67:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2274,
                    "nodeType": "Block",
                    "src": "21718:558:4",
                    "statements": [
                      {
                        "assignments": [
                          2217
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2217,
                            "mutability": "mutable",
                            "name": "claim",
                            "nameLocation": "21743:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 2274,
                            "src": "21729:19:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                              "typeString": "struct DecentralizedInsurance.Claim"
                            },
                            "typeName": {
                              "id": 2216,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2215,
                                "name": "Claim",
                                "nameLocations": [
                                  "21729:5:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 442,
                                "src": "21729:5:4"
                              },
                              "referencedDeclaration": 442,
                              "src": "21729:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2221,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2218,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "21751:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$442_storage_$",
                              "typeString": "mapping(uint256 => struct DecentralizedInsurance.Claim storage ref)"
                            }
                          },
                          "id": 2220,
                          "indexExpression": {
                            "id": 2219,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2205,
                            "src": "21758:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21751:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$442_storage",
                            "typeString": "struct DecentralizedInsurance.Claim storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21729:38:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                "typeString": "enum DecentralizedInsurance.ClaimStatus"
                              },
                              "id": 2227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2223,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2217,
                                  "src": "21786:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                    "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                  }
                                },
                                "id": 2224,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "21792:6:4",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 431,
                                "src": "21786:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2225,
                                  "name": "ClaimStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 383,
                                  "src": "21802:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$383_$",
                                    "typeString": "type(enum DecentralizedInsurance.ClaimStatus)"
                                  }
                                },
                                "id": 2226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "21814:7:4",
                                "memberName": "PENDING",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 378,
                                "src": "21802:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                }
                              },
                              "src": "21786:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436c61696d206e6f742070656e64696e67",
                              "id": 2228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21823:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0edb5d590621ac4802ac27a575f89b90d78c10be903b73b8182489a716e7a695",
                                "typeString": "literal_string \"Claim not pending\""
                              },
                              "value": "Claim not pending"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0edb5d590621ac4802ac27a575f89b90d78c10be903b73b8182489a716e7a695",
                                "typeString": "literal_string \"Claim not pending\""
                              }
                            ],
                            "id": 2222,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21778:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21778:65:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2230,
                        "nodeType": "ExpressionStatement",
                        "src": "21778:65:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2232,
                                "name": "_approvedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2207,
                                "src": "21862:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2233,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2217,
                                  "src": "21881:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                    "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                  }
                                },
                                "id": 2234,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "21887:11:4",
                                "memberName": "claimAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 424,
                                "src": "21881:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21862:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "417070726f76656420616d6f756e74206578636565647320636c61696d",
                              "id": 2236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21900:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_29e4ad8e022eb8db2af619060a4fbaa52fc066dced969c59bc7fd578541d22e0",
                                "typeString": "literal_string \"Approved amount exceeds claim\""
                              },
                              "value": "Approved amount exceeds claim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_29e4ad8e022eb8db2af619060a4fbaa52fc066dced969c59bc7fd578541d22e0",
                                "typeString": "literal_string \"Approved amount exceeds claim\""
                              }
                            ],
                            "id": 2231,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21854:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21854:78:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2238,
                        "nodeType": "ExpressionStatement",
                        "src": "21854:78:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2240,
                                "name": "_approvedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2207,
                                "src": "21951:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "31303030",
                                "id": 2241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21970:10:4",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "value": "1000"
                              },
                              "src": "21951:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f7261636c6520617070726f76616c206c696d6974206578636565646564",
                              "id": 2243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21982:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d3de0f143e54c4fbad379ca20904d97795298413823da514c125f6983c1a546e",
                                "typeString": "literal_string \"Oracle approval limit exceeded\""
                              },
                              "value": "Oracle approval limit exceeded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d3de0f143e54c4fbad379ca20904d97795298413823da514c125f6983c1a546e",
                                "typeString": "literal_string \"Oracle approval limit exceeded\""
                              }
                            ],
                            "id": 2239,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21943:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21943:72:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2245,
                        "nodeType": "ExpressionStatement",
                        "src": "21943:72:4"
                      },
                      {
                        "expression": {
                          "id": 2251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2246,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2217,
                              "src": "22055:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                              }
                            },
                            "id": 2248,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "22061:6:4",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 431,
                            "src": "22055:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ClaimStatus_$383",
                              "typeString": "enum DecentralizedInsurance.ClaimStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2249,
                              "name": "ClaimStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 383,
                              "src": "22070:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$383_$",
                                "typeString": "type(enum DecentralizedInsurance.ClaimStatus)"
                              }
                            },
                            "id": 2250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "22082:8:4",
                            "memberName": "APPROVED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 380,
                            "src": "22070:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ClaimStatus_$383",
                              "typeString": "enum DecentralizedInsurance.ClaimStatus"
                            }
                          },
                          "src": "22055:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ClaimStatus_$383",
                            "typeString": "enum DecentralizedInsurance.ClaimStatus"
                          }
                        },
                        "id": 2252,
                        "nodeType": "ExpressionStatement",
                        "src": "22055:35:4"
                      },
                      {
                        "expression": {
                          "id": 2257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2253,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2217,
                              "src": "22101:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                              }
                            },
                            "id": 2255,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "22107:14:4",
                            "memberName": "approvedAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 437,
                            "src": "22101:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2256,
                            "name": "_approvedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2207,
                            "src": "22124:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22101:38:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2258,
                        "nodeType": "ExpressionStatement",
                        "src": "22101:38:4"
                      },
                      {
                        "expression": {
                          "id": 2264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2259,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2217,
                              "src": "22150:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                              }
                            },
                            "id": 2261,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "22156:12:4",
                            "memberName": "investigator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 441,
                            "src": "22150:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2262,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "22171:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22175:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "22171:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "22150:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2265,
                        "nodeType": "ExpressionStatement",
                        "src": "22150:31:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2267,
                              "name": "_claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2205,
                              "src": "22225:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2268,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "22235:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22239:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "22235:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2270,
                                "name": "ClaimStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 383,
                                "src": "22247:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$383_$",
                                  "typeString": "type(enum DecentralizedInsurance.ClaimStatus)"
                                }
                              },
                              "id": 2271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "22259:8:4",
                              "memberName": "APPROVED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 380,
                              "src": "22247:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                "typeString": "enum DecentralizedInsurance.ClaimStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                "typeString": "enum DecentralizedInsurance.ClaimStatus"
                              }
                            ],
                            "id": 2266,
                            "name": "ClaimInvestigated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 565,
                            "src": "22207:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_enum$_ClaimStatus_$383_$returns$__$",
                              "typeString": "function (uint256,address,enum DecentralizedInsurance.ClaimStatus)"
                            }
                          },
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22207:61:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2273,
                        "nodeType": "EmitStatement",
                        "src": "22202:66:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2203,
                    "nodeType": "StructuredDocumentation",
                    "src": "21521:79:4",
                    "text": " @dev Oracle function to automatically approve small claims"
                  },
                  "functionSelector": "80ef3183",
                  "id": 2275,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2210,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2209,
                        "name": "onlyOracle",
                        "nameLocations": [
                          "21686:10:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 868,
                        "src": "21686:10:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "21686:10:4"
                    },
                    {
                      "arguments": [
                        {
                          "id": 2212,
                          "name": "_claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2205,
                          "src": "21708:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2213,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2211,
                        "name": "validClaim",
                        "nameLocations": [
                          "21697:10:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 913,
                        "src": "21697:10:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "21697:20:4"
                    }
                  ],
                  "name": "oracleApproveClaim",
                  "nameLocation": "21615:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2205,
                        "mutability": "mutable",
                        "name": "_claimId",
                        "nameLocation": "21642:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2275,
                        "src": "21634:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21634:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2207,
                        "mutability": "mutable",
                        "name": "_approvedAmount",
                        "nameLocation": "21660:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2275,
                        "src": "21652:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2206,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21652:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21633:43:4"
                  },
                  "returnParameters": {
                    "id": 2214,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21718:0:4"
                  },
                  "scope": 2333,
                  "src": "21606:670:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2308,
                    "nodeType": "Block",
                    "src": "22475:401:4",
                    "statements": [
                      {
                        "assignments": [
                          2288
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2288,
                            "mutability": "mutable",
                            "name": "claim",
                            "nameLocation": "22500:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 2308,
                            "src": "22486:19:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                              "typeString": "struct DecentralizedInsurance.Claim"
                            },
                            "typeName": {
                              "id": 2287,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2286,
                                "name": "Claim",
                                "nameLocations": [
                                  "22486:5:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 442,
                                "src": "22486:5:4"
                              },
                              "referencedDeclaration": 442,
                              "src": "22486:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                "typeString": "struct DecentralizedInsurance.Claim"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2292,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2289,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "22508:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$442_storage_$",
                              "typeString": "mapping(uint256 => struct DecentralizedInsurance.Claim storage ref)"
                            }
                          },
                          "id": 2291,
                          "indexExpression": {
                            "id": 2290,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2278,
                            "src": "22515:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22508:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$442_storage",
                            "typeString": "struct DecentralizedInsurance.Claim storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22486:38:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                "typeString": "enum DecentralizedInsurance.ClaimStatus"
                              },
                              "id": 2298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2294,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2288,
                                  "src": "22543:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                    "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                  }
                                },
                                "id": 2295,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "22549:6:4",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 431,
                                "src": "22543:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2296,
                                  "name": "ClaimStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 383,
                                  "src": "22559:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$383_$",
                                    "typeString": "type(enum DecentralizedInsurance.ClaimStatus)"
                                  }
                                },
                                "id": 2297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "22571:8:4",
                                "memberName": "REJECTED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 381,
                                "src": "22559:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ClaimStatus_$383",
                                  "typeString": "enum DecentralizedInsurance.ClaimStatus"
                                }
                              },
                              "src": "22543:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436c61696d206d7573742062652072656a6563746564206669727374",
                              "id": 2299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22581:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_730e9567043856fa9362c495ba729bae96ca8bafd5090dc305d8f3692027ac2a",
                                "typeString": "literal_string \"Claim must be rejected first\""
                              },
                              "value": "Claim must be rejected first"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_730e9567043856fa9362c495ba729bae96ca8bafd5090dc305d8f3692027ac2a",
                                "typeString": "literal_string \"Claim must be rejected first\""
                              }
                            ],
                            "id": 2293,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "22535:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22535:77:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2301,
                        "nodeType": "ExpressionStatement",
                        "src": "22535:77:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2303,
                              "name": "_claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2278,
                              "src": "22843:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2304,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2288,
                                "src": "22853:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$442_storage_ptr",
                                  "typeString": "struct DecentralizedInsurance.Claim storage pointer"
                                }
                              },
                              "id": 2305,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22859:8:4",
                              "memberName": "claimant",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 422,
                              "src": "22853:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2302,
                            "name": "FraudDetected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "22829:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 2306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22829:39:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2307,
                        "nodeType": "EmitStatement",
                        "src": "22824:44:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2276,
                    "nodeType": "StructuredDocumentation",
                    "src": "22288:95:4",
                    "text": " @dev Report fraud (reduces claimant's future coverage and applies penalty)"
                  },
                  "functionSelector": "cab3990f",
                  "id": 2309,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2281,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2280,
                        "name": "onlyInvestigator",
                        "nameLocations": [
                          "22437:16:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 856,
                        "src": "22437:16:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "22437:16:4"
                    },
                    {
                      "arguments": [
                        {
                          "id": 2283,
                          "name": "_claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2278,
                          "src": "22465:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2284,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2282,
                        "name": "validClaim",
                        "nameLocations": [
                          "22454:10:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 913,
                        "src": "22454:10:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "22454:20:4"
                    }
                  ],
                  "name": "reportFraud",
                  "nameLocation": "22398:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2279,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2278,
                        "mutability": "mutable",
                        "name": "_claimId",
                        "nameLocation": "22418:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2309,
                        "src": "22410:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2277,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22410:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22409:18:4"
                  },
                  "returnParameters": {
                    "id": 2285,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "22475:0:4"
                  },
                  "scope": 2333,
                  "src": "22389:487:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2327,
                    "nodeType": "Block",
                    "src": "23000:67:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2322,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "23045:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DecentralizedInsurance_$2333",
                                      "typeString": "contract DecentralizedInsurance"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DecentralizedInsurance_$2333",
                                      "typeString": "contract DecentralizedInsurance"
                                    }
                                  ],
                                  "id": 2321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "23037:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2320,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23037:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23037:13:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "23051:7:4",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "23037:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 2316,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "23019:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 2317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23019:7:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23011:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 2314,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23011:8:4",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23011:16:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "23028:8:4",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "23011:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23011:48:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2326,
                        "nodeType": "ExpressionStatement",
                        "src": "23011:48:4"
                      }
                    ]
                  },
                  "functionSelector": "db2e21bc",
                  "id": 2328,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2312,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2311,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "22990:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "22990:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "22990:9:4"
                    }
                  ],
                  "name": "emergencyWithdraw",
                  "nameLocation": "22961:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2310,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "22978:2:4"
                  },
                  "returnParameters": {
                    "id": 2313,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23000:0:4"
                  },
                  "scope": 2333,
                  "src": "22952:115:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2331,
                    "nodeType": "Block",
                    "src": "23146:76:4",
                    "statements": []
                  },
                  "id": 2332,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2329,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23126:2:4"
                  },
                  "returnParameters": {
                    "id": 2330,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23146:0:4"
                  },
                  "scope": 2333,
                  "src": "23119:103:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2334,
              "src": "470:22755:4",
              "usedErrors": [
                13,
                18,
                199,
                202,
                299
              ],
              "usedEvents": [
                24,
                191,
                196,
                538,
                546,
                556,
                565,
                573,
                579,
                585,
                591,
                595,
                599,
                605
              ]
            }
          ],
          "src": "33:23194:4"
        },
        "id": 4
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "contracts/DecentralizedInsurance.sol": {
        "DecentralizedInsurance": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "claimId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "investigator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "enum DecentralizedInsurance.ClaimStatus",
                  "name": "status",
                  "type": "uint8"
                }
              ],
              "name": "ClaimInvestigated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "claimId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "ClaimPaid",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "claimId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "policyId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "ClaimSubmitted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "claimId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ],
              "name": "FraudDetected",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "investigator",
                  "type": "address"
                }
              ],
              "name": "InvestigatorAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oracle",
                  "type": "address"
                }
              ],
              "name": "OracleAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "policyId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "policyholder",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "enum DecentralizedInsurance.InsuranceType",
                  "name": "insuranceType",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "coverageAmount",
                  "type": "uint256"
                }
              ],
              "name": "PolicyCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "policyId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "policyholder",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "PremiumPaid",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RewardsClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "StakeDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "StakeWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "FRAUD_PENALTY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "INVESTIGATION_PERIOD",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_COVERAGE_RATIO",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_STAKE_AMOUNT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_investigator",
                  "type": "address"
                }
              ],
              "name": "addInvestigator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_oracle",
                  "type": "address"
                }
              ],
              "name": "addOracle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "authorizedInvestigators",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "authorizedOracles",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_staker",
                  "type": "address"
                }
              ],
              "name": "calculatePendingRewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum DecentralizedInsurance.InsuranceType",
                  "name": "_insuranceType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "_coverageAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_duration",
                  "type": "uint256"
                },
                {
                  "internalType": "enum DecentralizedInsurance.RiskLevel",
                  "name": "_riskLevel",
                  "type": "uint8"
                }
              ],
              "name": "calculatePremium",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimRewards",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "claims",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "claimId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "policyId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "claimAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "submissionDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "investigationDeadline",
                  "type": "uint256"
                },
                {
                  "internalType": "enum DecentralizedInsurance.ClaimStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "evidenceURI",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "rejectionReason",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "approvedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "payoutDate",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "investigator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum DecentralizedInsurance.InsuranceType",
                  "name": "_insuranceType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "_coverageAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_duration",
                  "type": "uint256"
                },
                {
                  "internalType": "enum DecentralizedInsurance.RiskLevel",
                  "name": "_riskLevel",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "_metadataURI",
                  "type": "string"
                }
              ],
              "name": "createPolicy",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "emergencyWithdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_claimId",
                  "type": "uint256"
                }
              ],
              "name": "getClaim",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "claimId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "policyId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "claimAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "submissionDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "investigationDeadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum DecentralizedInsurance.ClaimStatus",
                      "name": "status",
                      "type": "uint8"
                    },
                    {
                      "internalType": "string",
                      "name": "evidenceURI",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "rejectionReason",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "approvedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "payoutDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "investigator",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct DecentralizedInsurance.Claim",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum DecentralizedInsurance.InsuranceType",
                  "name": "_type",
                  "type": "uint8"
                }
              ],
              "name": "getInsurancePool",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "totalStaked",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalClaims",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "availableFunds",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rewardRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct DecentralizedInsurance.InsurancePool",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_policyId",
                  "type": "uint256"
                }
              ],
              "name": "getPolicy",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "policyId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "policyholder",
                      "type": "address"
                    },
                    {
                      "internalType": "enum DecentralizedInsurance.InsuranceType",
                      "name": "insuranceType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "coverageAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "premiumAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum DecentralizedInsurance.PolicyStatus",
                      "name": "status",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum DecentralizedInsurance.RiskLevel",
                      "name": "riskLevel",
                      "type": "uint8"
                    },
                    {
                      "internalType": "string",
                      "name": "metadataURI",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "claimsCount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalClaimsAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct DecentralizedInsurance.Policy",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_staker",
                  "type": "address"
                }
              ],
              "name": "getStakeInfo",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "stakingDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rewardsEarned",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastRewardUpdate",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct DecentralizedInsurance.StakeInfo",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTotalActiveCoverage",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTotalPoolFunds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_user",
                  "type": "address"
                }
              ],
              "name": "getUserClaims",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_user",
                  "type": "address"
                }
              ],
              "name": "getUserPolicies",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum DecentralizedInsurance.InsuranceType",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "name": "insurancePools",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalStaked",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalClaims",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "availableFunds",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardRate",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "active",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_claimId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum DecentralizedInsurance.ClaimStatus",
                  "name": "_decision",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "_approvedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_rejectionReason",
                  "type": "string"
                }
              ],
              "name": "investigateClaim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_claimId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_approvedAmount",
                  "type": "uint256"
                }
              ],
              "name": "oracleApproveClaim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_claimId",
                  "type": "uint256"
                }
              ],
              "name": "payClaim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "policies",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "policyId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "policyholder",
                  "type": "address"
                },
                {
                  "internalType": "enum DecentralizedInsurance.InsuranceType",
                  "name": "insuranceType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "coverageAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "premiumAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "enum DecentralizedInsurance.PolicyStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "enum DecentralizedInsurance.RiskLevel",
                  "name": "riskLevel",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "metadataURI",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "claimsCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalClaimsAmount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum DecentralizedInsurance.InsuranceType",
                  "name": "",
                  "type": "uint8"
                },
                {
                  "internalType": "enum DecentralizedInsurance.RiskLevel",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "name": "premiumRates",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_investigator",
                  "type": "address"
                }
              ],
              "name": "removeInvestigator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_oracle",
                  "type": "address"
                }
              ],
              "name": "removeOracle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_claimId",
                  "type": "uint256"
                }
              ],
              "name": "reportFraud",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "stake",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "stakes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "stakingDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardsEarned",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastRewardUpdate",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_policyId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_claimAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_evidenceURI",
                  "type": "string"
                }
              ],
              "name": "submitClaim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum DecentralizedInsurance.InsuranceType",
                  "name": "_type",
                  "type": "uint8"
                }
              ],
              "name": "togglePoolStatus",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum DecentralizedInsurance.InsuranceType",
                  "name": "_type",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "_rate",
                  "type": "uint256"
                }
              ],
              "name": "updatePoolRewardRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum DecentralizedInsurance.InsuranceType",
                  "name": "_type",
                  "type": "uint8"
                },
                {
                  "internalType": "enum DecentralizedInsurance.RiskLevel",
                  "name": "_risk",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "_rate",
                  "type": "uint256"
                }
              ],
              "name": "updatePremiumRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "userClaims",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "userPolicies",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawStake",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461044e5733156104385760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001808055600381815560049190915560c87fab4c5e6d94bd05a4bc56bf86e345985172e352a45f60387bc2e75a915e3a19c2556101907fc60e777e3969e7af65eb621b710e8488643506f977562c73dba103cb35b15a848190556103207f162e617daa896dc1c65340fbda9b95c9bb6b9cfad93eb872e620003a70b983e68190556105dc7f0dd4cabb2db0650ac03dd3096f485c7efdbe2df7a48b0f8f9417f21da11259505560647fb160a7406e28258be08ad805a9afb846e1966a5cc82707dbcb44ed395fc389ee5560fa7f9786f677b3dff6c36ad0d47ef13860fd51b928c112d9702e0dea2fe690bf6ec1556101f47f54bf5bc4b2226bde4cc3e74a9ec72288325c7fa9a62e34b6f2e529209d79e0fb556103e87fca689a1f7db89b8710c79c63830a1317054bd8ec2ee851f1b33a21b2a41ae4f95560967fb9d46844e5f44943022fede37b711babdd9de39af3cab9490ab8d63ad17d130281905561012c7f332275a058505107a86f8909487584ee26365a1ad866fdfd7d0ca217736986ed8190556102587f43a1014b6961384d1120382c968e1e5a446fd730c5b0be82a93447b93d8c57808190556104b07fb963a2cc96831b7d1bee11154ddec13c7b5e8ac05c70661c4538de70ac16a32a8190557f8766d65f062c0ef4ef6d0904498fe293d275999dda7c3b2e86c36355a8ea1b43929092557fa4b2ae645069b0fe342e4873e7f3a2b47b2e1410299f64d1a1b2c9313380bac8557fdf907ee502102e7c62cec3210e3216baba694172f98d9878eb35ef1bec0d16b0556107d07f453e2823e0c78b590eaeddf7807d57c263c48a0a3d13054dd8d170a8a0b546905560327f6bd412ebfcfbe461c4e41627a59fac53c3ee2838a97c6c8dc311b4befcba70b0557f6868be3980be7fd972596ca506cada9b78aca12a9006443b1916ce784f8ef8a8557f84e722789c62b0dc97803f3d1dab51fd1ef82b0c463751f13b5ecc891f27158a9190915560009182527fafafe8948a4ed9d478b1e9a5780b119b5edd00ea7d07bc35bef7c814824eb94b6020527f11a6df99eada7208f7aa93e8b6930faa7431d65501c040d3866253a695b946f0555b60058110908115610429576040516000929060a081016001600160401b0381118282101761041557604052838152602081018481526040820185815260608301916103e8835260808401946001865215610401579060049392916040888860019a52600a60205220935184555187840155516002830155516003820155019051151560ff801983541691161790550161036d565b634e487b7160e01b87526021600452602487fd5b634e487b7160e01b85526041600452602485fd5b6040516131c690816104548239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806306964de71461253457806307efa984146124d4578063097aad10146124b157806316934fc4146124555780631988a684146123e657806319ac46141461236f578063238dcf881461235257806325d5971f1461213857806327ed7188146121145780632b07fce314611f3a578063372500ab14611e7f5780633a4b66f114611d0c5780633d36adc514611cc25780633f4ba83a14611c595780634c5e3e8514611c1757806353f4983414611b885780635aef2447146119af5780635c975abb1461198c5780635edcc3481461196e57806361c992a31461192f578063715018a6146118d65780637a1419a1146118105780637b73ba67146117635780637bcb4a64146116dc57806380ef31831461153157806382670986146115155780638456cb59146114bb5780638606f9a51461111f5780638da5cb5b146110f6578063991c6cfc14610ae15780639f16927314610aa3578063a888c2cd146109b1578063b31ef5bb14610996578063c3453153146108f5578063ca9748ea1461089c578063cab3990f146107b1578063d3e89483146106c8578063d70356cc146104e0578063db2e21bc1461048d578063df5dd1a514610425578063df9e9de8146103e6578063e1c8b86f146103c3578063e5078ed71461035a578063eebcb0a9146102ea578063f2fde38b146102615763fdc85fc40361000e573461025c57602036600319011261025c57610233612c26565b61023b613167565b6001600160a01b03166000908152600c60205260409020805460ff19169055005b600080fd5b3461025c57602036600319011261025c5761027a612c26565b610282613167565b6001600160a01b031680156102d457600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b3461025c57602036600319011261025c57600435600581101561025c5761030f613167565b61031881612bfc565b80600052600a60205260ff60046040600020015416159061033881612bfc565b600052600a60205260046040600020019060ff80198354169116179055600080f35b3461025c57602036600319011261025c57610373612c26565b61037b613167565b6001600160a01b03166000818152600b60205260408120805460ff191660011790557f9b401e423fa8d3194b83fa5c9a9ddc45e0ae9d32daddd773ae631cc29b7be0ff9080a2005b3461025c57600036600319011261025c5760206103de613030565b604051908152f35b3461025c57602036600319011261025c576001600160a01b03610407612c26565b16600052600b602052602060ff604060002054166040519015158152f35b3461025c57602036600319011261025c5761043e612c26565b610446613167565b6001600160a01b03166000818152600c60205260408120805460ff191660011790557e47706786c922d17b39285dc59d696bafea72c0b003d3841ae1202076f4c2e49080a2005b3461025c57600036600319011261025c576104a6613167565b6000805481908190819047906001600160a01b03168282156104d7575bf1156104cb57005b6040513d6000823e3d90fd5b506108fc6104c3565b3461025c57602036600319011261025c576004356104fc6130b9565b801515806106bd575b61050e90612ed2565b8060005260066020526040600020906006820191825490600260ff831661053481612bfc565b036106835760018101546000526005602052604060002060ff600182015460a01c1661055f81612bfc565b600052600a6020526040600020906002820190815496600985019788541161063e57600460029660ff191617905542600a850155600881016105a18154612dc3565b90556105b4600988549201918254612dd2565b90556105c286548254612e19565b90556105d5600186549201918254612dd2565b905501600080808060018060a01b03855416875490828215610635575bf1156104cb5760207faf3c8fdd75d667f71d36d7840b8ef9086c516c9b047ad6a83a5a66151342123a9160018060a01b039054169354604051908152a360018055005b506108fc6105f2565b60405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420706f6f6c2066756e64730000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601260248201527110db185a5b481b9bdd08185c1c1c9bdd995960721b6044820152606490fd5b506004548110610505565b3461025c57602036600319011261025c5760043560005260056020526040600020805460018201549160ff8360a01c166107a0600283015460038401546004850154600586015460068701549160ff8084169360081c169361072c60078a01612d1f565b95600960088b01549a0154986040519c8d9c8d5260018060a01b031660208d015261075681612bfc565b60408c015260608b015260808a015260a089015260c088015261077881612c1c565b60e087015261078681612c1c565b610100860152610180610120860152610180850190612c76565b916101408401526101608301520390f35b3461025c57602036600319011261025c5760043533600052600b6020526107df60ff60406000205416612f51565b80151580610891575b6107f190612ed2565b8060005260066020526040600020600360ff60068301541661081281612bfc565b0361084c57600201546001600160a01b0316907fd333905bc6384a6f4b921b01917e6ee525790cae96dbdc5d4f60cb7efb594244600080a3005b60405162461bcd60e51b815260206004820152601c60248201527f436c61696d206d7573742062652072656a6563746564206669727374000000006044820152606490fd5b5060045481106107e8565b3461025c57604036600319011261025c576108b5612c26565b6001600160a01b031660009081526008602052604090208054602435919082101561025c576020916108e691612cb7565b90549060031b1c604051908152f35b3461025c57602036600319011261025c5761090e612c26565b6000606060405161091e81612b67565b828152826020820152826040820152015260018060a01b031660005260096020526080604060002060405161095281612b67565b815491828252600181015460208301908152606060036002840154936040860194855201549301928352604051938452516020840152516040830152516060820152f35b3461025c57600036600319011261025c5760206103de612fe8565b3461025c57602036600319011261025c57600435600052600660205260206040600020805490600181015460018060a01b0360028301541691610a8c6003820154610a7d6004840154600585015460ff60068701541690610a1460078801612d1f565b92610a2160088901612d1f565b9560098901549a600a8a015499600b60018060a01b03910154169a6040519e8f9e8f908152015260408d015260608c015260808b015260a08a0152610a6581612bfc565b60c089015261018060e0890152610180880190612c76565b90868203610100880152612c76565b926101208501526101408401526101608301520390f35b3461025c57608036600319011261025c57600435600581101561025c5760643590600482101561025c576020916103de916044359060243590612f9d565b60a036600319011261025c57600435600581101561025c576024356044359160643591600483101561025c5760843567ffffffffffffffff811161025c57610b2d903690600401612ba5565b92610b366130b9565b610b3e61314a565b81156110b25762278d00851061106d576301e13380851161102857610b6283612bfc565b82600052600a60205260ff6004604060002001541615610fe357610b8881868486612f9d565b94853410610f9e57610b9984612bfc565b83600052600a602052600260406000200154605081029080820460501490151715610f8857606490048311610f4357610be494600354958692610bdb84612dc3565b60035542612dd2565b9060405193610bf285612b2e565b83855260208501903382526040860193610c0b89612bfc565b88855260608701888152608088018c815260a089019142835260c08a0193845260e08a0195600087526101008b0195610c4381612c1c565b86526101208b0197885260006101408c018181526101608d018281529b8252600560205260409091209b518c55905160018c0180546001600160a01b0319166001600160a01b03929092169190911781559851909890610ca281612bfc565b610cab81612bfc565b815460ff60a01b191660a09190911b60ff60a01b161790555160028a015551600389015551600488015551600587015590516006860191610ceb82612c1c565b610cf482612c1c565b60ff61ff0084549251610d0681612c1c565b610d0f81612c1c565b60081b1692169061ffff19161717905560078401905180519067ffffffffffffffff8211610f2d57610d418354612ce5565b601f8111610ee5575b50602090601f8311600114610e79576009959493929160009183610e6e575b50508160011b916000199060031b1c19161790555b51600884015551910155336000526007602052610d9f836040600020612ddf565b610da882612bfc565b81600052600a6020526002604060002001610dc4858254612dd2565b9055833411610e3b575b60405191610ddb81612bfc565b82526020820152817f78e2ee02e1dd0cf71b75c6d5463946e0d324ca4b79fbd0b7e59ceffcf24654c160403393a36040519182527ffbf1458fbbddabb878de144276216e8ccda619cbac2d598e6ee37ff72173afb160203393a360018055005b6000808080610e4a8834612e19565b818115610e65575b3390f1610dce576040513d6000823e3d90fd5b506108fc610e52565b015190508b80610d69565b90601f1983169184600052816000209260005b818110610ecd57509160019391856009999897969410610eb4575b505050811b019055610d7e565b015160001960f88460031b161c191690558b8080610ea7565b92936020600181928786015181550195019301610e8c565b836000526020600020601f840160051c81019160208510610f23575b601f0160051c01905b818110610f175750610d4a565b60008155600101610f0a565b9091508190610f01565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601e60248201527f436f766572616765206578636565647320706f6f6c20636170616369747900006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e74207072656d69756d207061796d656e74000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f496e737572616e63652074797065206e6f7420616374697665000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f4d6178696d756d206475726174696f6e206973203336352064617973000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f4d696e696d756d206475726174696f6e206973203330206461797300000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f436f76657261676520616d6f756e74206d75737420626520706f7369746976656044820152fd5b3461025c57600036600319011261025c576000546040516001600160a01b039091168152602090f35b3461025c57608036600319011261025c57602435600435600582101561025c5760443560643567ffffffffffffffff811161025c57611162903690600401612ba5565b33600052600b60205261117c60ff60406000205416612f51565b821515806114b0575b61118e90612ed2565b82600052600660205260406000209060068201906111b960ff8354166111b381612bfc565b15612f11565b6005830154421161146b576111cd86612bfc565b60028614808015611458575b15611420576111e787612bfc565b156112a957508215158061129b575b1561125657600b926009830155600260ff198254161790555b0180546001600160a01b031916331790556040519161122d81612bfc565b82527e798eecabd6c187fcaa9108de48cf1a34f2d65b6eead4797edcd67fb73ee6c160203393a3005b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420617070726f76656420616d6f756e740000000000000000006044820152606490fd5b5060038201548311156111f6565b809594935051156113db5760088201855167ffffffffffffffff8111610f2d576112d38254612ce5565b601f8111611393575b506020601f8211600114611329578190600b96979860009261131e575b50508160011b916000199060031b1c19161790555b805460ff1916600317905561120f565b0151905088806112f9565b601f1982169783600052816000209860005b81811061137b575091600b97989991846001959410611362575b505050811b01905561130e565b015160001960f88460031b161c19169055888080611355565b838301518b556001909a01996020938401930161133b565b826000526020600020601f830160051c810191602084106113d1575b601f0160051c01905b8181106113c557506112dc565b600081556001016113b8565b90915081906113af565b60405162461bcd60e51b815260206004820152601960248201527f52656a656374696f6e20726561736f6e207265717569726564000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103232b1b4b9b4b7b760811b6044820152606490fd5b5061146287612bfc565b600387146111d9565b60405162461bcd60e51b815260206004820152601c60248201527f496e7665737469676174696f6e20706572696f642065787069726564000000006044820152606490fd5b506004548310611185565b3461025c57600036600319011261025c576114d4613167565b6114dc61314a565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b3461025c57600036600319011261025c57602060405160508152f35b3461025c57604036600319011261025c5760043560243533600052600c60205260ff604060002054161561169f5781151580611694575b61157190612ed2565b8160005260066020526040600020600681019182549261159760ff85166111b381612bfc565b6003830154821161164f57683635c9adc5dea00000821161160a5760ff1990931660029081179093556009820155600b0180546001600160a01b0319163390811790915560405191825291907e798eecabd6c187fcaa9108de48cf1a34f2d65b6eead4797edcd67fb73ee6c190602090a3005b60405162461bcd60e51b815260206004820152601e60248201527f4f7261636c6520617070726f76616c206c696d697420657863656564656400006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f417070726f76656420616d6f756e74206578636565647320636c61696d0000006044820152606490fd5b506004548210611568565b60405162461bcd60e51b81526020600482015260156024820152744e6f7420617574686f72697a6564206f7261636c6560581b6044820152606490fd5b3461025c57602036600319011261025c576001600160a01b036116fd612c26565b166000526008602052604060002060405190816020825491828152019160005260206000209060005b81811061174d576117498561173d81870382612b83565b60405191829182612c3c565b0390f35b8254845260209093019260019283019201611726565b3461025c57606036600319011261025c57600435600581101561025c57602435600481101561025c5760443591611798613167565b61138883116117d2576117aa81612bfc565b600052600d6020526040600020906117c181612c1c565b600052602052604060002055600080f35b60405162461bcd60e51b8152602060048201526016602482015275526174652063616e6e6f74206578636565642035302560501b6044820152606490fd5b3461025c57602036600319011261025c57600435600581101561025c576000608060405161183d81612b4b565b828152826020820152826040820152826060820152015261185d81612bfc565b600052600a60205260a0604060002060405161187881612b4b565b81549182825260018101546020830190815260028201549060408401918252608060ff600460038601549560608801968752015416940193151584526040519485525160208501525160408401525160608301525115156080820152f35b3461025c57600036600319011261025c576118ef613167565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461025c57602036600319011261025c576001600160a01b03611950612c26565b16600052600c602052602060ff604060002054166040519015158152f35b3461025c57600036600319011261025c57602060405162093a808152f35b3461025c57600036600319011261025c57602060ff600254166040519015158152f35b3461025c57602036600319011261025c5760006101606040516119d181612b2e565b8281528260208201528260408201528260608201528260808201528260a08201528260c0820152606060e08201526060610100820152826101208201528261014082015201526004356000526006602052604080600020815190611a3482612b2e565b805482526001810154916020810192835260018060a01b0360028301541691848201928352611b65600382015460608401908152611b51600484015460808601908152600585015460a0870190815260ff6006870154169060c0880191611a9a81612bfc565b8252611aa860078801612d1f565b9260e08901938452611abc60088901612d1f565b956101008a0196875260098901549a6101208b019b8c52600a8a0154996101408c019a8b52600b60018060a01b03910154169a61016081019b8c528e519e8f9e8f92602084525160208401525191015260018060a01b0390511660608d01525160808c01525160a08b01525160c08a015251611b3781612bfc565b60e0890152516101806101008901526101a0880190612c76565b9051868203601f1901610120880152612c76565b925161014085015251610160840152516001600160a01b03166101808301520390f35b3461025c57604036600319011261025c57600435600581101561025c5760243590611bb1613167565b6107d08211611bd957611bc381612bfc565b600052600a602052600360406000200155600080f35b60405162461bcd60e51b8152602060048201526016602482015275526174652063616e6e6f74206578636565642032302560501b6044820152606490fd5b3461025c57602036600319011261025c57611c30612c26565b611c38613167565b6001600160a01b03166000908152600b60205260409020805460ff19169055005b3461025c57600036600319011261025c57611c72613167565b60025460ff811615611cb15760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b638dfc202b60e01b60005260046000fd5b3461025c57604036600319011261025c57611cdb612c26565b6001600160a01b031660009081526007602052604090208054602435919082101561025c576020916108e691612cb7565b600036600319011261025c57611d206130b9565b611d2861314a565b68056bc75e2d631000003410611e3a5733600052600960205260406000208054611e2c575b611d58348254612dd2565b81554260018201556003429101556005340460005b60058110611da7576040513481527f0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc260203392a260018055005b80611db3600192612bfc565b611dbc81612bfc565b80600052600a60205260ff60046040600020015416611ddc575b01611d6d565b611de581612bfc565b80600052600a6020526040600020611dfe848254612dd2565b9055611e0981612bfc565b80600052600a6020526002604060002001611e25848254612dd2565b9055611dd6565b611e35336130db565b611d4d565b60405162461bcd60e51b815260206004820152601c60248201527f4d696e696d756d207374616b6520616d6f756e74206e6f74206d6574000000006044820152606490fd5b3461025c57600036600319011261025c57611e986130b9565b611ea1336130db565b33600052600960205260026040600020018054908115611eff57600090556000808080843382f1156104cb576040519081527ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe60203392a260018055005b60405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b6044820152606490fd5b3461025c57602036600319011261025c576000610160604051611f5c81612b2e565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015260606101208201528261014082015201526004356000526005602052602060406000206040518091611fc182612b2e565b8054825260018101546001600160a01b0381168584019081529161210191604085019060a01c60ff16611ff381612bfc565b8152600282015460608601908152600383015460808701908152600484015460a0880190815260058501549160c0890192835260068601549360ff8086169560e08c019661204081612c1c565b875260081c16956101008b019661205681612c1c565b8752600961206660078a01612d1f565b986101208d01998a5261014060088201549d019c8d520154996101608d019a8b526040518e819f9e829f83525191015260018060a01b0390511660408d0152516120af81612bfc565b60608c01525160808b01525160a08a01525160c08901525160e0880152516120d681612c1c565b610100870152516120e681612c1c565b610120860152516101806101408601526101a0850190612c76565b9151610160840152516101808301520390f35b3461025c57600036600319011261025c57602060405168056bc75e2d631000008152f35b3461025c57602036600319011261025c576004356121546130b9565b3360005260096020526040600020818154106123185781156122d357612179336130db565b612181612fe8565b6121938361218d613030565b92612e19565b90605081029080820460501490151715610f8857606490041161228f576121bb828254612e19565b90556005810460005b6005811061220d57826000808080843382f1156104cb576040519081527f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc60203392a260018055005b80612219600192612bfc565b61222281612bfc565b80600052600a60205282604060002054101561223f575b016121c4565b61224881612bfc565b80600052600a6020526040600020612261848254612e19565b905561226c81612bfc565b80600052600a6020526002604060002001612288848254612e19565b9055612239565b606460405162461bcd60e51b815260206004820152602060248201527f5769746864726177616c20776f756c642061666665637420736f6c76656e63796044820152fd5b60405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e74207374616b6560701b6044820152606490fd5b3461025c57600036600319011261025c5760206040516103e88152f35b3461025c57602036600319011261025c576001600160a01b03612390612c26565b166000526007602052604060002060405190816020825491828152019160005260206000209060005b8181106123d0576117498561173d81870382612b83565b82548452602090930192600192830192016123b9565b3461025c57602036600319011261025c57600435600581101561025c5761240c81612bfc565b600052600a60205260a06040600020805490600181015490600281015460ff60046003840154930154169260405194855260208501526040840152606083015215156080820152f35b3461025c57602036600319011261025c576001600160a01b03612476612c26565b166000526009602052608060406000208054906001810154906003600282015491015491604051938452602084015260408301526060820152f35b3461025c57602036600319011261025c5760206103de6124cf612c26565b612e39565b3461025c57604036600319011261025c57600435600581101561025c5760243590600482101561025c5761250781612bfc565b600052600d60205260406000209061251e81612c1c565b6000526020526020604060002054604051908152f35b3461025c57606036600319011261025c5760243560043560443567ffffffffffffffff811161025c5761256b903690600401612ba5565b6125736130b9565b81151580612b23575b15612aea5781600052600560205260ff6006604060002001541661259f81612c1c565b612ab157600082815260056020526040902060018101546001600160a01b03163303612a785760058101544211612a425783156129fd576002015483116129bf57600454906125ed82612dc3565b60045562093a80420190814211610f88576040519061260b82612b2e565b838252602082019085825260408301903382526060840190888252608085019042825260a0860196875260c086016000815260e08701918252602097604051936126558a86612b83565b60008086526101008a019586526101208a018181526101408b018281526101608c018381528e84526006808f5260409094209c518d559a5160018d0155985160028c0180546001600160a01b0319166001600160a01b0392909216919091179055965160038b0155905160048a0155905160058901559051908701906126da81612bfc565b6126e381612bfc565b60ff8019835416911617905560078601905180519067ffffffffffffffff8211610f2d5781906127138454612ce5565b601f811161296e575b508990601f8311600114612909576000926128fe575b50508160011b916000199060031b1c19161790555b518051600886019167ffffffffffffffff8211610f2d576127688354612ce5565b601f81116128b8575b508790601f8311600114612829579180600b9694927f3a30d1c4069e097873e77443df9683e8de5c7ba3674315b8670a0211e31301959a9998969460009261281e575b50508160011b916000199060031b1c19161790555b51600985015551600a84015551910180546001600160a01b0319166001600160a01b0392909216919091179055336000908152600882526040902061280f908490612ddf565b6040519485523394a460018055005b015190508d806127b4565b90601f1983169184600052896000209260005b8181106128a157509260019285927f3a30d1c4069e097873e77443df9683e8de5c7ba3674315b8670a0211e31301959c9b9a9896600b9a989610612888575b505050811b0190556127c9565b015160001960f88460031b161c191690558d808061287b565b92938b60018192878601518155019501930161283c565b8360005288600020601f840160051c8101918a85106128f4575b601f0160051c01905b8181106128e85750612771565b600081556001016128db565b90915081906128d2565b015190508c80612732565b60008581528b81209350601f198516905b8c82821061295857505090846001959493921061293f575b505050811b019055612747565b015160001960f88460031b161c191690558c8080612932565b600185968293968601518155019501930161291a565b9091508360005289600020601f840160051c8101918b85106129b5575b90601f859493920160051c01905b8181106129a6575061271c565b60008155849350600101612999565b909150819061298b565b60405162461bcd60e51b8152602060048201526016602482015275436c61696d206578636565647320636f76657261676560501b6044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f436c61696d20616d6f756e74206d75737420626520706f7369746976650000006044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d141bdb1a58de48195e1c1a5c995960921b6044820152606490fd5b60405162461bcd60e51b81526020600482015260116024820152702737ba103837b634b1bc903437b63232b960791b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270506f6c696379206e6f742061637469766560781b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c1bdb1a58de481251607a1b6044820152606490fd5b50600354821061257c565b610180810190811067ffffffffffffffff821117610f2d57604052565b60a0810190811067ffffffffffffffff821117610f2d57604052565b6080810190811067ffffffffffffffff821117610f2d57604052565b90601f8019910116810190811067ffffffffffffffff821117610f2d57604052565b81601f8201121561025c5780359067ffffffffffffffff8211610f2d5760405192612bda601f8401601f191660200185612b83565b8284526020838301011161025c57816000926020809301838601378301015290565b60051115612c0657565b634e487b7160e01b600052602160045260246000fd5b60041115612c0657565b600435906001600160a01b038216820361025c57565b602060408183019282815284518094520192019060005b818110612c605750505090565b8251845260209384019390920191600101612c53565b919082519283825260005b848110612ca2575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201612c81565b8054821015612ccf5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015612d15575b6020831014612cff57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612cf4565b9060405191826000825492612d3384612ce5565b8084529360018116908115612da15750600114612d5a575b50612d5892500383612b83565b565b90506000929192526020600020906000915b818310612d85575050906020612d589282010138612d4b565b6020919350806001915483858901015201910190918492612d6c565b905060209250612d5894915060ff191682840152151560051b82010138612d4b565b6000198114610f885760010190565b91908201809211610f8857565b805468010000000000000000811015610f2d57612e0191600182018155612cb7565b819291549060031b91821b91600019901b1916179055565b91908203918211610f8857565b81810292918115918404141715610f8857565b60018060a01b03166000526009602052604060002060405190612e5b82612b67565b80548083526001820154602084015260028201546003604085019382855201549182606086015215612ecb5750612e929042612e19565b9151916103e88302928084046103e81490151715610f8857612ec06301e1338091612710612ec89504612e26565b049051612dd2565b90565b9250505090565b15612ed957565b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a590818db185a5b48125160821b6044820152606490fd5b15612f1857565b60405162461bcd60e51b8152602060048201526011602482015270436c61696d206e6f742070656e64696e6760781b6044820152606490fd5b15612f5857565b60405162461bcd60e51b815260206004820152601b60248201527f4e6f7420617574686f72697a656420696e76657374696761746f7200000000006044820152606490fd5b612fe4929164496cebb80094612fdf92612fb681612bfc565b600052600d602052604060002090612fcd81612c1c565b60005260205260406000205490612e26565b612e26565b0490565b6000805b60058110612ff8575090565b9061302960019161300884612bfc565b61301184612bfc565b83600052600a60205260026040600020015490612dd2565b9101612fec565b60006001600354905b81811061304557505090565b80600052600560205260ff6006604060002001541661306381612c1c565b158061309e575b613077575b600101613039565b9161309660019184600052600560205260026040600020015490612dd2565b92905061306f565b5080600052600560205260056040600020015442111561306a565b6002600154146130ca576002600155565b633ee5aeb560e01b60005260046000fd5b6001600160a01b03166000908152600960205260409020805490811561314657600381019161310b835442612e19565b906103e881029081046103e803610f88576301e1338061313461313f9361271060029404612e26565b049201918254612dd2565b9055429055565b5050565b60ff6002541661315657565b63d93c066560e01b60005260046000fd5b6000546001600160a01b0316330361317b57565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220b85e9b28ed0b275513583df6c1cef6746495372cd2da6cba2bc4ff15e8e0d57964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x44E JUMPI CALLER ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 DUP1 SSTORE PUSH1 0x3 DUP2 DUP2 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xC8 PUSH32 0xAB4C5E6D94BD05A4BC56BF86E345985172E352A45F60387BC2E75A915E3A19C2 SSTORE PUSH2 0x190 PUSH32 0xC60E777E3969E7AF65EB621B710E8488643506F977562C73DBA103CB35B15A84 DUP2 SWAP1 SSTORE PUSH2 0x320 PUSH32 0x162E617DAA896DC1C65340FBDA9B95C9BB6B9CFAD93EB872E620003A70B983E6 DUP2 SWAP1 SSTORE PUSH2 0x5DC PUSH32 0xDD4CABB2DB0650AC03DD3096F485C7EFDBE2DF7A48B0F8F9417F21DA1125950 SSTORE PUSH1 0x64 PUSH32 0xB160A7406E28258BE08AD805A9AFB846E1966A5CC82707DBCB44ED395FC389EE SSTORE PUSH1 0xFA PUSH32 0x9786F677B3DFF6C36AD0D47EF13860FD51B928C112D9702E0DEA2FE690BF6EC1 SSTORE PUSH2 0x1F4 PUSH32 0x54BF5BC4B2226BDE4CC3E74A9EC72288325C7FA9A62E34B6F2E529209D79E0FB SSTORE PUSH2 0x3E8 PUSH32 0xCA689A1F7DB89B8710C79C63830A1317054BD8EC2EE851F1B33A21B2A41AE4F9 SSTORE PUSH1 0x96 PUSH32 0xB9D46844E5F44943022FEDE37B711BABDD9DE39AF3CAB9490AB8D63AD17D1302 DUP2 SWAP1 SSTORE PUSH2 0x12C PUSH32 0x332275A058505107A86F8909487584EE26365A1AD866FDFD7D0CA217736986ED DUP2 SWAP1 SSTORE PUSH2 0x258 PUSH32 0x43A1014B6961384D1120382C968E1E5A446FD730C5B0BE82A93447B93D8C5780 DUP2 SWAP1 SSTORE PUSH2 0x4B0 PUSH32 0xB963A2CC96831B7D1BEE11154DDEC13C7B5E8AC05C70661C4538DE70AC16A32A DUP2 SWAP1 SSTORE PUSH32 0x8766D65F062C0EF4EF6D0904498FE293D275999DDA7C3B2E86C36355A8EA1B43 SWAP3 SWAP1 SWAP3 SSTORE PUSH32 0xA4B2AE645069B0FE342E4873E7F3A2B47B2E1410299F64D1A1B2C9313380BAC8 SSTORE PUSH32 0xDF907EE502102E7C62CEC3210E3216BABA694172F98D9878EB35EF1BEC0D16B0 SSTORE PUSH2 0x7D0 PUSH32 0x453E2823E0C78B590EAEDDF7807D57C263C48A0A3D13054DD8D170A8A0B54690 SSTORE PUSH1 0x32 PUSH32 0x6BD412EBFCFBE461C4E41627A59FAC53C3EE2838A97C6C8DC311B4BEFCBA70B0 SSTORE PUSH32 0x6868BE3980BE7FD972596CA506CADA9B78ACA12A9006443B1916CE784F8EF8A8 SSTORE PUSH32 0x84E722789C62B0DC97803F3D1DAB51FD1EF82B0C463751F13B5ECC891F27158A SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0xAFAFE8948A4ED9D478B1E9A5780B119B5EDD00EA7D07BC35BEF7C814824EB94B PUSH1 0x20 MSTORE PUSH32 0x11A6DF99EADA7208F7AA93E8B6930FAA7431D65501C040D3866253A695B946F0 SSTORE JUMPDEST PUSH1 0x5 DUP2 LT SWAP1 DUP2 ISZERO PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP3 SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x415 JUMPI PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP2 MSTORE PUSH1 0x40 DUP3 ADD DUP6 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH2 0x3E8 DUP4 MSTORE PUSH1 0x80 DUP5 ADD SWAP5 PUSH1 0x1 DUP7 MSTORE ISZERO PUSH2 0x401 JUMPI SWAP1 PUSH1 0x4 SWAP4 SWAP3 SWAP2 PUSH1 0x40 DUP9 DUP9 PUSH1 0x1 SWAP11 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 SWAP4 MLOAD DUP5 SSTORE MLOAD DUP8 DUP5 ADD SSTORE MLOAD PUSH1 0x2 DUP4 ADD SSTORE MLOAD PUSH1 0x3 DUP3 ADD SSTORE ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE ADD PUSH2 0x36D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C6 SWAP1 DUP2 PUSH2 0x454 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6964DE7 EQ PUSH2 0x2534 JUMPI DUP1 PUSH4 0x7EFA984 EQ PUSH2 0x24D4 JUMPI DUP1 PUSH4 0x97AAD10 EQ PUSH2 0x24B1 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x2455 JUMPI DUP1 PUSH4 0x1988A684 EQ PUSH2 0x23E6 JUMPI DUP1 PUSH4 0x19AC4614 EQ PUSH2 0x236F JUMPI DUP1 PUSH4 0x238DCF88 EQ PUSH2 0x2352 JUMPI DUP1 PUSH4 0x25D5971F EQ PUSH2 0x2138 JUMPI DUP1 PUSH4 0x27ED7188 EQ PUSH2 0x2114 JUMPI DUP1 PUSH4 0x2B07FCE3 EQ PUSH2 0x1F3A JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1E7F JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x1D0C JUMPI DUP1 PUSH4 0x3D36ADC5 EQ PUSH2 0x1CC2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1C59 JUMPI DUP1 PUSH4 0x4C5E3E85 EQ PUSH2 0x1C17 JUMPI DUP1 PUSH4 0x53F49834 EQ PUSH2 0x1B88 JUMPI DUP1 PUSH4 0x5AEF2447 EQ PUSH2 0x19AF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x198C JUMPI DUP1 PUSH4 0x5EDCC348 EQ PUSH2 0x196E JUMPI DUP1 PUSH4 0x61C992A3 EQ PUSH2 0x192F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18D6 JUMPI DUP1 PUSH4 0x7A1419A1 EQ PUSH2 0x1810 JUMPI DUP1 PUSH4 0x7B73BA67 EQ PUSH2 0x1763 JUMPI DUP1 PUSH4 0x7BCB4A64 EQ PUSH2 0x16DC JUMPI DUP1 PUSH4 0x80EF3183 EQ PUSH2 0x1531 JUMPI DUP1 PUSH4 0x82670986 EQ PUSH2 0x1515 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x14BB JUMPI DUP1 PUSH4 0x8606F9A5 EQ PUSH2 0x111F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10F6 JUMPI DUP1 PUSH4 0x991C6CFC EQ PUSH2 0xAE1 JUMPI DUP1 PUSH4 0x9F169273 EQ PUSH2 0xAA3 JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xB31EF5BB EQ PUSH2 0x996 JUMPI DUP1 PUSH4 0xC3453153 EQ PUSH2 0x8F5 JUMPI DUP1 PUSH4 0xCA9748EA EQ PUSH2 0x89C JUMPI DUP1 PUSH4 0xCAB3990F EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0xD3E89483 EQ PUSH2 0x6C8 JUMPI DUP1 PUSH4 0xD70356CC EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xDF5DD1A5 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xDF9E9DE8 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xE1C8B86F EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xE5078ED7 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xEEBCB0A9 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x261 JUMPI PUSH4 0xFDC85FC4 SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x233 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x27A PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH2 0x30F PUSH2 0x3167 JUMP JUMPDEST PUSH2 0x318 DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO SWAP1 PUSH2 0x338 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x373 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x37B PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x9B401E423FA8D3194B83FA5C9A9DDC45E0AE9D32DADDD773AE631CC29B7BE0FF SWAP1 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH2 0x3DE PUSH2 0x3030 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x407 PUSH2 0x2C26 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x43E PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH31 0x47706786C922D17B39285DC59D696BAFEA72C0B003D3841AE1202076F4C2E4 SWAP1 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x4A6 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 SELFBALANCE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ISZERO PUSH2 0x4D7 JUMPI JUMPDEST CALL ISZERO PUSH2 0x4CB JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x4C3 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4FC PUSH2 0x30B9 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x6BD JUMPI JUMPDEST PUSH2 0x50E SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD SWAP2 DUP3 SLOAD SWAP1 PUSH1 0x2 PUSH1 0xFF DUP4 AND PUSH2 0x534 DUP2 PUSH2 0x2BFC JUMP JUMPDEST SUB PUSH2 0x683 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x55F DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 DUP3 ADD SWAP1 DUP2 SLOAD SWAP7 PUSH1 0x9 DUP6 ADD SWAP8 DUP9 SLOAD GT PUSH2 0x63E JUMPI PUSH1 0x4 PUSH1 0x2 SWAP7 PUSH1 0xFF NOT AND OR SWAP1 SSTORE TIMESTAMP PUSH1 0xA DUP6 ADD SSTORE PUSH1 0x8 DUP2 ADD PUSH2 0x5A1 DUP2 SLOAD PUSH2 0x2DC3 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x5B4 PUSH1 0x9 DUP9 SLOAD SWAP3 ADD SWAP2 DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x5C2 DUP7 SLOAD DUP3 SLOAD PUSH2 0x2E19 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x5D5 PUSH1 0x1 DUP7 SLOAD SWAP3 ADD SWAP2 DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 SLOAD AND DUP8 SLOAD SWAP1 DUP3 DUP3 ISZERO PUSH2 0x635 JUMPI JUMPDEST CALL ISZERO PUSH2 0x4CB JUMPI PUSH1 0x20 PUSH32 0xAF3C8FDD75D667F71D36D7840B8EF9086C516C9B047AD6A83A5A66151342123A SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND SWAP4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420706F6F6C2066756E6473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10DB185A5B481B9BDD08185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x505 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x7A0 PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD SWAP2 PUSH1 0xFF DUP1 DUP5 AND SWAP4 PUSH1 0x8 SHR AND SWAP4 PUSH2 0x72C PUSH1 0x7 DUP11 ADD PUSH2 0x2D1F JUMP JUMPDEST SWAP6 PUSH1 0x9 PUSH1 0x8 DUP12 ADD SLOAD SWAP11 ADD SLOAD SWAP9 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x756 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH2 0x778 DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x786 DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x180 PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x180 DUP6 ADD SWAP1 PUSH2 0x2C76 JUMP JUMPDEST SWAP2 PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x7DF PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2F51 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x891 JUMPI JUMPDEST PUSH2 0x7F1 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 PUSH1 0xFF PUSH1 0x6 DUP4 ADD SLOAD AND PUSH2 0x812 DUP2 PUSH2 0x2BFC JUMP JUMPDEST SUB PUSH2 0x84C JUMPI PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xD333905BC6384A6F4B921B01917E6EE525790CAE96DBDC5D4F60CB7EFB594244 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D206D7573742062652072656A656374656420666972737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x7E8 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x8B5 PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x20 SWAP2 PUSH2 0x8E6 SWAP2 PUSH2 0x2CB7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x90E PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x91E DUP2 PUSH2 0x2B67 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x80 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x952 DUP2 PUSH2 0x2B67 JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 PUSH1 0x3 PUSH1 0x2 DUP5 ADD SLOAD SWAP4 PUSH1 0x40 DUP7 ADD SWAP5 DUP6 MSTORE ADD SLOAD SWAP4 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE MLOAD PUSH1 0x20 DUP5 ADD MSTORE MLOAD PUSH1 0x40 DUP4 ADD MSTORE MLOAD PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH2 0x3DE PUSH2 0x2FE8 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 PUSH2 0xA8C PUSH1 0x3 DUP3 ADD SLOAD PUSH2 0xA7D PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0xFF PUSH1 0x6 DUP8 ADD SLOAD AND SWAP1 PUSH2 0xA14 PUSH1 0x7 DUP9 ADD PUSH2 0x2D1F JUMP JUMPDEST SWAP3 PUSH2 0xA21 PUSH1 0x8 DUP10 ADD PUSH2 0x2D1F JUMP JUMPDEST SWAP6 PUSH1 0x9 DUP10 ADD SLOAD SWAP11 PUSH1 0xA DUP11 ADD SLOAD SWAP10 PUSH1 0xB PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP11 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP1 DUP2 MSTORE ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH2 0xA65 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MSTORE PUSH2 0x180 PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x180 DUP9 ADD SWAP1 PUSH2 0x2C76 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x2C76 JUMP JUMPDEST SWAP3 PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x20 SWAP2 PUSH2 0x3DE SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x4 DUP4 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25C JUMPI PUSH2 0xB2D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2BA5 JUMP JUMPDEST SWAP3 PUSH2 0xB36 PUSH2 0x30B9 JUMP JUMPDEST PUSH2 0xB3E PUSH2 0x314A JUMP JUMPDEST DUP2 ISZERO PUSH2 0x10B2 JUMPI PUSH3 0x278D00 DUP6 LT PUSH2 0x106D JUMPI PUSH4 0x1E13380 DUP6 GT PUSH2 0x1028 JUMPI PUSH2 0xB62 DUP4 PUSH2 0x2BFC JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xFE3 JUMPI PUSH2 0xB88 DUP2 DUP7 DUP5 DUP7 PUSH2 0x2F9D JUMP JUMPDEST SWAP5 DUP6 CALLVALUE LT PUSH2 0xF9E JUMPI PUSH2 0xB99 DUP5 PUSH2 0x2BFC JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x50 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x50 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xF88 JUMPI PUSH1 0x64 SWAP1 DIV DUP4 GT PUSH2 0xF43 JUMPI PUSH2 0xBE4 SWAP5 PUSH1 0x3 SLOAD SWAP6 DUP7 SWAP3 PUSH2 0xBDB DUP5 PUSH2 0x2DC3 JUMP JUMPDEST PUSH1 0x3 SSTORE TIMESTAMP PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xBF2 DUP6 PUSH2 0x2B2E JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x40 DUP7 ADD SWAP4 PUSH2 0xC0B DUP10 PUSH2 0x2BFC JUMP JUMPDEST DUP9 DUP6 MSTORE PUSH1 0x60 DUP8 ADD DUP9 DUP2 MSTORE PUSH1 0x80 DUP9 ADD DUP13 DUP2 MSTORE PUSH1 0xA0 DUP10 ADD SWAP2 TIMESTAMP DUP4 MSTORE PUSH1 0xC0 DUP11 ADD SWAP4 DUP5 MSTORE PUSH1 0xE0 DUP11 ADD SWAP6 PUSH1 0x0 DUP8 MSTORE PUSH2 0x100 DUP12 ADD SWAP6 PUSH2 0xC43 DUP2 PUSH2 0x2C1C JUMP JUMPDEST DUP7 MSTORE PUSH2 0x120 DUP12 ADD SWAP8 DUP9 MSTORE PUSH1 0x0 PUSH2 0x140 DUP13 ADD DUP2 DUP2 MSTORE PUSH2 0x160 DUP14 ADD DUP3 DUP2 MSTORE SWAP12 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP12 MLOAD DUP13 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP13 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP9 MLOAD SWAP1 SWAP9 SWAP1 PUSH2 0xCA2 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH2 0xCAB DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP11 ADD SSTORE MLOAD PUSH1 0x3 DUP10 ADD SSTORE MLOAD PUSH1 0x4 DUP9 ADD SSTORE MLOAD PUSH1 0x5 DUP8 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 DUP7 ADD SWAP2 PUSH2 0xCEB DUP3 PUSH2 0x2C1C JUMP JUMPDEST PUSH2 0xCF4 DUP3 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0xFF PUSH2 0xFF00 DUP5 SLOAD SWAP3 MLOAD PUSH2 0xD06 DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH2 0xD0F DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH2 0xFFFF NOT AND OR OR SWAP1 SSTORE PUSH1 0x7 DUP5 ADD SWAP1 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF2D JUMPI PUSH2 0xD41 DUP4 SLOAD PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xEE5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE79 JUMPI PUSH1 0x9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0xE6E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH1 0x8 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xD9F DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2DDF JUMP JUMPDEST PUSH2 0xDA8 DUP3 PUSH2 0x2BFC JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0xDC4 DUP6 DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 SSTORE DUP4 CALLVALUE GT PUSH2 0xE3B JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0xDDB DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH32 0x78E2EE02E1DD0CF71B75C6D5463946E0D324CA4B79FBD0B7E59CEFFCF24654C1 PUSH1 0x40 CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xFBF1458FBBDDABB878DE144276216E8CCDA619CBAC2D598E6EE37FF72173AFB1 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xE4A DUP9 CALLVALUE PUSH2 0x2E19 JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0xE65 JUMPI JUMPDEST CALLER SWAP1 CALL PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0xE52 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0xD69 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xECD JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0x9 SWAP10 SWAP9 SWAP8 SWAP7 SWAP5 LT PUSH2 0xEB4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xD7E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0xEA7 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xE8C JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xF23 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xF17 JUMPI POP PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xF0A JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F766572616765206578636565647320706F6F6C2063617061636974790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207072656D69756D207061796D656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E737572616E63652074797065206E6F742061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206475726174696F6E20697320333635206461797300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D206475726174696F6E20697320333020646179730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F76657261676520616D6F756E74206D75737420626520706F736974697665 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25C JUMPI PUSH2 0x1162 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2BA5 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x117C PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2F51 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP1 PUSH2 0x14B0 JUMPI JUMPDEST PUSH2 0x118E SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD SWAP1 PUSH2 0x11B9 PUSH1 0xFF DUP4 SLOAD AND PUSH2 0x11B3 DUP2 PUSH2 0x2BFC JUMP JUMPDEST ISZERO PUSH2 0x2F11 JUMP JUMPDEST PUSH1 0x5 DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x146B JUMPI PUSH2 0x11CD DUP7 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x2 DUP7 EQ DUP1 DUP1 ISZERO PUSH2 0x1458 JUMPI JUMPDEST ISZERO PUSH2 0x1420 JUMPI PUSH2 0x11E7 DUP8 PUSH2 0x2BFC JUMP JUMPDEST ISZERO PUSH2 0x12A9 JUMPI POP DUP3 ISZERO ISZERO DUP1 PUSH2 0x129B JUMPI JUMPDEST ISZERO PUSH2 0x1256 JUMPI PUSH1 0xB SWAP3 PUSH1 0x9 DUP4 ADD SSTORE PUSH1 0x2 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x122D DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP3 MSTORE PUSH31 0x798EECABD6C187FCAA9108DE48CF1A34F2D65B6EEAD4797EDCD67FB73EE6C1 PUSH1 0x20 CALLER SWAP4 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617070726F76656420616D6F756E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 DUP3 ADD SLOAD DUP4 GT ISZERO PUSH2 0x11F6 JUMP JUMPDEST DUP1 SWAP6 SWAP5 SWAP4 POP MLOAD ISZERO PUSH2 0x13DB JUMPI PUSH1 0x8 DUP3 ADD DUP6 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF2D JUMPI PUSH2 0x12D3 DUP3 SLOAD PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1393 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1329 JUMPI DUP2 SWAP1 PUSH1 0xB SWAP7 SWAP8 SWAP9 PUSH1 0x0 SWAP3 PUSH2 0x131E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE PUSH2 0x120F JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP8 DUP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP9 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x137B JUMPI POP SWAP2 PUSH1 0xB SWAP8 SWAP9 SWAP10 SWAP2 DUP5 PUSH1 0x1 SWAP6 SWAP5 LT PUSH2 0x1362 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x130E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1355 JUMP JUMPDEST DUP4 DUP4 ADD MLOAD DUP12 SSTORE PUSH1 0x1 SWAP1 SWAP11 ADD SWAP10 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x133B JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x13D1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x13C5 JUMPI POP PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656A656374696F6E20726561736F6E20726571756972656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B2103232B1B4B9B4B7B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0x1462 DUP8 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x3 DUP8 EQ PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E7665737469676174696F6E20706572696F64206578706972656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP4 LT PUSH2 0x1185 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x14D4 PUSH2 0x3167 JUMP JUMPDEST PUSH2 0x14DC PUSH2 0x314A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x50 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x169F JUMPI DUP2 ISZERO ISZERO DUP1 PUSH2 0x1694 JUMPI JUMPDEST PUSH2 0x1571 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x6 DUP2 ADD SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x1597 PUSH1 0xFF DUP6 AND PUSH2 0x11B3 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP3 GT PUSH2 0x164F JUMPI PUSH9 0x3635C9ADC5DEA00000 DUP3 GT PUSH2 0x160A JUMPI PUSH1 0xFF NOT SWAP1 SWAP4 AND PUSH1 0x2 SWAP1 DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x9 DUP3 ADD SSTORE PUSH1 0xB ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE SWAP2 SWAP1 PUSH31 0x798EECABD6C187FCAA9108DE48CF1A34F2D65B6EEAD4797EDCD67FB73EE6C1 SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C6520617070726F76616C206C696D69742065786365656465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417070726F76656420616D6F756E74206578636565647320636C61696D000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP3 LT PUSH2 0x1568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F7420617574686F72697A6564206F7261636C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16FD PUSH2 0x2C26 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x174D JUMPI PUSH2 0x1749 DUP6 PUSH2 0x173D DUP2 DUP8 SUB DUP3 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2C3C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1726 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1798 PUSH2 0x3167 JUMP JUMPDEST PUSH2 0x1388 DUP4 GT PUSH2 0x17D2 JUMPI PUSH2 0x17AA DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x17C1 DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x526174652063616E6E6F742065786365656420353025 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x183D DUP2 PUSH2 0x2B4B JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH2 0x185D DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1878 DUP2 PUSH2 0x2B4B JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP7 ADD SLOAD SWAP6 PUSH1 0x60 DUP9 ADD SWAP7 DUP8 MSTORE ADD SLOAD AND SWAP5 ADD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD PUSH1 0x20 DUP6 ADD MSTORE MLOAD PUSH1 0x40 DUP5 ADD MSTORE MLOAD PUSH1 0x60 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x18EF PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1950 PUSH2 0x2C26 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x0 PUSH2 0x160 PUSH1 0x40 MLOAD PUSH2 0x19D1 DUP2 PUSH2 0x2B2E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 DUP2 MLOAD SWAP1 PUSH2 0x1A34 DUP3 PUSH2 0x2B2E JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP2 PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 DUP5 DUP3 ADD SWAP3 DUP4 MSTORE PUSH2 0x1B65 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP5 ADD SWAP1 DUP2 MSTORE PUSH2 0x1B51 PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0xA0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF PUSH1 0x6 DUP8 ADD SLOAD AND SWAP1 PUSH1 0xC0 DUP9 ADD SWAP2 PUSH2 0x1A9A DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP3 MSTORE PUSH2 0x1AA8 PUSH1 0x7 DUP9 ADD PUSH2 0x2D1F JUMP JUMPDEST SWAP3 PUSH1 0xE0 DUP10 ADD SWAP4 DUP5 MSTORE PUSH2 0x1ABC PUSH1 0x8 DUP10 ADD PUSH2 0x2D1F JUMP JUMPDEST SWAP6 PUSH2 0x100 DUP11 ADD SWAP7 DUP8 MSTORE PUSH1 0x9 DUP10 ADD SLOAD SWAP11 PUSH2 0x120 DUP12 ADD SWAP12 DUP13 MSTORE PUSH1 0xA DUP11 ADD SLOAD SWAP10 PUSH2 0x140 DUP13 ADD SWAP11 DUP12 MSTORE PUSH1 0xB PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP11 PUSH2 0x160 DUP2 ADD SWAP12 DUP13 MSTORE DUP15 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP3 PUSH1 0x20 DUP5 MSTORE MLOAD PUSH1 0x20 DUP5 ADD MSTORE MLOAD SWAP2 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x60 DUP14 ADD MSTORE MLOAD PUSH1 0x80 DUP13 ADD MSTORE MLOAD PUSH1 0xA0 DUP12 ADD MSTORE MLOAD PUSH1 0xC0 DUP11 ADD MSTORE MLOAD PUSH2 0x1B37 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0xE0 DUP10 ADD MSTORE MLOAD PUSH2 0x180 PUSH2 0x100 DUP10 ADD MSTORE PUSH2 0x1A0 DUP9 ADD SWAP1 PUSH2 0x2C76 JUMP JUMPDEST SWAP1 MLOAD DUP7 DUP3 SUB PUSH1 0x1F NOT ADD PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x2C76 JUMP JUMPDEST SWAP3 MLOAD PUSH2 0x140 DUP6 ADD MSTORE MLOAD PUSH2 0x160 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x180 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1BB1 PUSH2 0x3167 JUMP JUMPDEST PUSH2 0x7D0 DUP3 GT PUSH2 0x1BD9 JUMPI PUSH2 0x1BC3 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x526174652063616E6E6F742065786365656420323025 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x1C30 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x1C38 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x1C72 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1CB1 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x1CDB PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x20 SWAP2 PUSH2 0x8E6 SWAP2 PUSH2 0x2CB7 JUMP JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x1D20 PUSH2 0x30B9 JUMP JUMPDEST PUSH2 0x1D28 PUSH2 0x314A JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 CALLVALUE LT PUSH2 0x1E3A JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1E2C JUMPI JUMPDEST PUSH2 0x1D58 CALLVALUE DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x3 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x5 CALLVALUE DIV PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1DA7 JUMPI PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0xA7BB2E28CC4698AAC06DB79CF9163BFCC20719286CF59FA7D492CEDA1B8EDC2 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP1 PUSH2 0x1DB3 PUSH1 0x1 SWAP3 PUSH2 0x2BFC JUMP JUMPDEST PUSH2 0x1DBC DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x1DDC JUMPI JUMPDEST ADD PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0x1DE5 DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1DFE DUP5 DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1E09 DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x1E25 DUP5 DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1DD6 JUMP JUMPDEST PUSH2 0x1E35 CALLER PUSH2 0x30DB JUMP JUMPDEST PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D207374616B6520616D6F756E74206E6F74206D657400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x1E98 PUSH2 0x30B9 JUMP JUMPDEST PUSH2 0x1EA1 CALLER PUSH2 0x30DB JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x1EFF JUMPI PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 CALLER DUP3 CALL ISZERO PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F207265776172647320746F20636C61696D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x0 PUSH2 0x160 PUSH1 0x40 MLOAD PUSH2 0x1F5C DUP2 PUSH2 0x2B2E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH2 0x1FC1 DUP3 PUSH2 0x2B2E JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP6 DUP5 ADD SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x2101 SWAP2 PUSH1 0x40 DUP6 ADD SWAP1 PUSH1 0xA0 SHR PUSH1 0xFF AND PUSH2 0x1FF3 DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0xA0 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 DUP6 ADD SLOAD SWAP2 PUSH1 0xC0 DUP10 ADD SWAP3 DUP4 MSTORE PUSH1 0x6 DUP7 ADD SLOAD SWAP4 PUSH1 0xFF DUP1 DUP7 AND SWAP6 PUSH1 0xE0 DUP13 ADD SWAP7 PUSH2 0x2040 DUP2 PUSH2 0x2C1C JUMP JUMPDEST DUP8 MSTORE PUSH1 0x8 SHR AND SWAP6 PUSH2 0x100 DUP12 ADD SWAP7 PUSH2 0x2056 DUP2 PUSH2 0x2C1C JUMP JUMPDEST DUP8 MSTORE PUSH1 0x9 PUSH2 0x2066 PUSH1 0x7 DUP11 ADD PUSH2 0x2D1F JUMP JUMPDEST SWAP9 PUSH2 0x120 DUP14 ADD SWAP10 DUP11 MSTORE PUSH2 0x140 PUSH1 0x8 DUP3 ADD SLOAD SWAP14 ADD SWAP13 DUP14 MSTORE ADD SLOAD SWAP10 PUSH2 0x160 DUP14 ADD SWAP11 DUP12 MSTORE PUSH1 0x40 MLOAD DUP15 DUP2 SWAP16 SWAP15 DUP3 SWAP16 DUP4 MSTORE MLOAD SWAP2 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x40 DUP14 ADD MSTORE MLOAD PUSH2 0x20AF DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE MLOAD PUSH1 0x80 DUP12 ADD MSTORE MLOAD PUSH1 0xA0 DUP11 ADD MSTORE MLOAD PUSH1 0xC0 DUP10 ADD MSTORE MLOAD PUSH1 0xE0 DUP9 ADD MSTORE MLOAD PUSH2 0x20D6 DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH2 0x100 DUP8 ADD MSTORE MLOAD PUSH2 0x20E6 DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH2 0x120 DUP7 ADD MSTORE MLOAD PUSH2 0x180 PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x1A0 DUP6 ADD SWAP1 PUSH2 0x2C76 JUMP JUMPDEST SWAP2 MLOAD PUSH2 0x160 DUP5 ADD MSTORE MLOAD PUSH2 0x180 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2154 PUSH2 0x30B9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD LT PUSH2 0x2318 JUMPI DUP2 ISZERO PUSH2 0x22D3 JUMPI PUSH2 0x2179 CALLER PUSH2 0x30DB JUMP JUMPDEST PUSH2 0x2181 PUSH2 0x2FE8 JUMP JUMPDEST PUSH2 0x2193 DUP4 PUSH2 0x218D PUSH2 0x3030 JUMP JUMPDEST SWAP3 PUSH2 0x2E19 JUMP JUMPDEST SWAP1 PUSH1 0x50 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x50 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xF88 JUMPI PUSH1 0x64 SWAP1 DIV GT PUSH2 0x228F JUMPI PUSH2 0x21BB DUP3 DUP3 SLOAD PUSH2 0x2E19 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x5 DUP2 DIV PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x220D JUMPI DUP3 PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 CALLER DUP3 CALL ISZERO PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8108595EB6BAD3ACEFA9DA467D90CC2217686D5C5AC85460F8B7849C840645FC PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP1 PUSH2 0x2219 PUSH1 0x1 SWAP3 PUSH2 0x2BFC JUMP JUMPDEST PUSH2 0x2222 DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x223F JUMPI JUMPDEST ADD PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0x2248 DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2261 DUP5 DUP3 SLOAD PUSH2 0x2E19 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x226C DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x2288 DUP5 DUP3 SLOAD PUSH2 0x2E19 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20776F756C642061666665637420736F6C76656E6379 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E74207374616B65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3E8 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2390 PUSH2 0x2C26 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x23D0 JUMPI PUSH2 0x1749 DUP6 PUSH2 0x173D DUP2 DUP8 SUB DUP3 PUSH2 0x2B83 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x23B9 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH2 0x240C DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP5 ADD SLOAD SWAP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2476 PUSH2 0x2C26 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x80 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH2 0x3DE PUSH2 0x24CF PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x2E39 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x25C JUMPI PUSH2 0x2507 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x251E DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25C JUMPI PUSH2 0x256B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2BA5 JUMP JUMPDEST PUSH2 0x2573 PUSH2 0x30B9 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x2B23 JUMPI JUMPDEST ISZERO PUSH2 0x2AEA JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x259F DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH2 0x2AB1 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2A78 JUMPI PUSH1 0x5 DUP2 ADD SLOAD TIMESTAMP GT PUSH2 0x2A42 JUMPI DUP4 ISZERO PUSH2 0x29FD JUMPI PUSH1 0x2 ADD SLOAD DUP4 GT PUSH2 0x29BF JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH2 0x25ED DUP3 PUSH2 0x2DC3 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH3 0x93A80 TIMESTAMP ADD SWAP1 DUP2 TIMESTAMP GT PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x260B DUP3 PUSH2 0x2B2E JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP6 DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 DUP9 DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0xA0 DUP7 ADD SWAP7 DUP8 MSTORE PUSH1 0xC0 DUP7 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0xE0 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP8 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x2655 DUP11 DUP7 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 MSTORE PUSH2 0x100 DUP11 ADD SWAP6 DUP7 MSTORE PUSH2 0x120 DUP11 ADD DUP2 DUP2 MSTORE PUSH2 0x140 DUP12 ADD DUP3 DUP2 MSTORE PUSH2 0x160 DUP13 ADD DUP4 DUP2 MSTORE DUP15 DUP5 MSTORE PUSH1 0x6 DUP1 DUP16 MSTORE PUSH1 0x40 SWAP1 SWAP5 KECCAK256 SWAP13 MLOAD DUP14 SSTORE SWAP11 MLOAD PUSH1 0x1 DUP14 ADD SSTORE SWAP9 MLOAD PUSH1 0x2 DUP13 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP7 MLOAD PUSH1 0x3 DUP12 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 DUP11 ADD SSTORE SWAP1 MLOAD PUSH1 0x5 DUP10 ADD SSTORE SWAP1 MLOAD SWAP1 DUP8 ADD SWAP1 PUSH2 0x26DA DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH2 0x26E3 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x7 DUP7 ADD SWAP1 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF2D JUMPI DUP2 SWAP1 PUSH2 0x2713 DUP5 SLOAD PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x296E JUMPI JUMPDEST POP DUP10 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2909 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x28FE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD DUP1 MLOAD PUSH1 0x8 DUP7 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF2D JUMPI PUSH2 0x2768 DUP4 SLOAD PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x28B8 JUMPI JUMPDEST POP DUP8 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2829 JUMPI SWAP2 DUP1 PUSH1 0xB SWAP7 SWAP5 SWAP3 PUSH32 0x3A30D1C4069E097873E77443DF9683E8DE5C7BA3674315B8670A0211E3130195 SWAP11 SWAP10 SWAP9 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x281E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH1 0x9 DUP6 ADD SSTORE MLOAD PUSH1 0xA DUP5 ADD SSTORE MLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x280F SWAP1 DUP5 SWAP1 PUSH2 0x2DDF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE CALLER SWAP5 LOG4 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0x27B4 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x28A1 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH32 0x3A30D1C4069E097873E77443DF9683E8DE5C7BA3674315B8670A0211E3130195 SWAP13 SWAP12 SWAP11 SWAP9 SWAP7 PUSH1 0xB SWAP11 SWAP9 SWAP7 LT PUSH2 0x2888 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x27C9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x287B JUMP JUMPDEST SWAP3 SWAP4 DUP12 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x283C JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP11 DUP6 LT PUSH2 0x28F4 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x28E8 JUMPI POP PUSH2 0x2771 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28DB JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE DUP12 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP13 DUP3 DUP3 LT PUSH2 0x2958 JUMPI POP POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x293F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2747 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x291A JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP12 DUP6 LT PUSH2 0x29B5 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x29A6 JUMPI POP PUSH2 0x271C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x2999 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436C61696D206578636565647320636F766572616765 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20616D6F756E74206D75737420626520706F736974697665000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x141BDB1A58DE48195E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA103837B634B1BC903437B63232B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x506F6C696379206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C1BDB1A58DE481251 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x257C JUMP JUMPDEST PUSH2 0x180 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF2D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF2D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF2D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF2D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x25C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2BDA PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x2B83 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x25C JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x2C06 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x2C06 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x25C JUMPI JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2C60 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2C53 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2CA2 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x2C81 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2CCF JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2D15 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2CFF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2CF4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2D33 DUP5 PUSH2 0x2CE5 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2DA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2D5A JUMPI JUMPDEST POP PUSH2 0x2D58 SWAP3 POP SUB DUP4 PUSH2 0x2B83 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2D85 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x2D58 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x2D4B JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2D6C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x2D58 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x2D4B JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xF88 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xF88 JUMPI JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xF2D JUMPI PUSH2 0x2E01 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2CB7 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xF88 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xF88 JUMPI JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2E5B DUP3 PUSH2 0x2B67 JUMP JUMPDEST DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 PUSH1 0x40 DUP6 ADD SWAP4 DUP3 DUP6 MSTORE ADD SLOAD SWAP2 DUP3 PUSH1 0x60 DUP7 ADD MSTORE ISZERO PUSH2 0x2ECB JUMPI POP PUSH2 0x2E92 SWAP1 TIMESTAMP PUSH2 0x2E19 JUMP JUMPDEST SWAP2 MLOAD SWAP2 PUSH2 0x3E8 DUP4 MUL SWAP3 DUP1 DUP5 DIV PUSH2 0x3E8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xF88 JUMPI PUSH2 0x2EC0 PUSH4 0x1E13380 SWAP2 PUSH2 0x2710 PUSH2 0x2EC8 SWAP6 DIV PUSH2 0x2E26 JUMP JUMPDEST DIV SWAP1 MLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2ED9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A590818DB185A5B481251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2F18 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x436C61696D206E6F742070656E64696E67 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2F58 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420696E76657374696761746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2FE4 SWAP3 SWAP2 PUSH5 0x496CEBB800 SWAP5 PUSH2 0x2FDF SWAP3 PUSH2 0x2FB6 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x2FCD DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH2 0x2E26 JUMP JUMPDEST PUSH2 0x2E26 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x2FF8 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3029 PUSH1 0x1 SWAP2 PUSH2 0x3008 DUP5 PUSH2 0x2BFC JUMP JUMPDEST PUSH2 0x3011 DUP5 PUSH2 0x2BFC JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x2DD2 JUMP JUMPDEST SWAP2 ADD PUSH2 0x2FEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x3045 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x3063 DUP2 PUSH2 0x2C1C JUMP JUMPDEST ISZERO DUP1 PUSH2 0x309E JUMPI JUMPDEST PUSH2 0x3077 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x3039 JUMP JUMPDEST SWAP2 PUSH2 0x3096 PUSH1 0x1 SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x2DD2 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x306F JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x306A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x30CA JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x3146 JUMPI PUSH1 0x3 DUP2 ADD SWAP2 PUSH2 0x310B DUP4 SLOAD TIMESTAMP PUSH2 0x2E19 JUMP JUMPDEST SWAP1 PUSH2 0x3E8 DUP2 MUL SWAP1 DUP2 DIV PUSH2 0x3E8 SUB PUSH2 0xF88 JUMPI PUSH4 0x1E13380 PUSH2 0x3134 PUSH2 0x313F SWAP4 PUSH2 0x2710 PUSH1 0x2 SWAP5 DIV PUSH2 0x2E26 JUMP JUMPDEST DIV SWAP3 ADD SWAP2 DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 SSTORE TIMESTAMP SWAP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x3156 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x317B JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 MCOPY SWAP12 0x28 0xED SIGNEXTEND 0x27 SSTORE SGT PC RETURNDATASIZE 0xF6 0xC1 0xCE 0xF6 PUSH21 0x6495372CD2DA6CBA2BC4FF15E8E0D57964736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "470:22755:4:-:0;;;;;;4199:10;1273:26:0;1269:95;;1297:1;470:22755:4;;4199:10;-1:-1:-1;;;;;;470:22755:4;;;;;;4199:10;-1:-1:-1;;;;;470:22755:4;;;;3052:40:0;;1297:1;3052:40;1857:1:3;470:22755:4;;;2232:1;470:22755;;;2270:1;470:22755;;;;4367:3;470:22755;;4445:3;470:22755;;;;4518:3;470:22755;;;;4597:4;470:22755;;4714:3;470:22755;;4794:3;470:22755;;4871:3;470:22755;;4952:4;470:22755;;5065:3;470:22755;;;;5145:3;470:22755;;;;5218:3;470:22755;;;;5297:4;470:22755;;;;;;;;;;;;;5641:4;470:22755;;5750:2;470:22755;;;;;;;;;-1:-1:-1;470:22755:4;;;;;;;;6071:3;6068:1;6064:5;;;;;;;470:22755;;1297:1:0;;470:22755:4;;;;-1:-1:-1;;;;;470:22755:4;;;;;;;;;;;;;6172:224;;;470:22755;;;;6172:224;;470:22755;;;6172:224;;;470:22755;4952:4;470:22755;;6172:224;;;470:22755;1857:1:3;470:22755:4;;;;;;2270:1;470:22755;;;;;;1857:1:3;470:22755:4;;6146:14;6172:224;470:22755;;;;;;;;;;;;4500:14;470:22755;;;;2232:1;470:22755;;;;;;;;;;;;;;;;;;;;6052:10;;470:22755;-1:-1:-1;;;470:22755:4;;;2270:1;470:22755;;;;;-1:-1:-1;;;470:22755:4;;;2270:1;470:22755;;;;6064:5;470:22755;;;;;;;;;1269:95:0;1322:31;;;1297:1;1322:31;1297:1;1322:31;470:22755:4;;1297:1:0;1322:31;470:22755:4;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 11302,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_string": {
                  "entryPoint": 11173,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 11324,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 11382,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_push_from_uint256_to_array_uint256_dyn_storage_ptr": {
                  "entryPoint": 11743,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "checked_add_uint256": {
                  "entryPoint": 11730,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 11814,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 11801,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 11551,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 11493,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 11139,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_49332": {
                  "entryPoint": 11054,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "finalize_allocation_49348": {
                  "entryPoint": 11083,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "finalize_allocation_49365": {
                  "entryPoint": 11111,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_calculatePendingRewards": {
                  "entryPoint": 11833,
                  "id": 2037,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_calculatePremium": {
                  "entryPoint": 12189,
                  "id": 1118,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "fun_checkOwner": {
                  "entryPoint": 12647,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getTotalActiveCoverage": {
                  "entryPoint": 12336,
                  "id": 1981,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_getTotalPoolFunds": {
                  "entryPoint": 12264,
                  "id": 1932,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 12473,
                  "id": 334,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 12618,
                  "id": 239,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_updateRewards": {
                  "entryPoint": 12507,
                  "id": 1813,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "increment_uint256": {
                  "entryPoint": 11715,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral": {
                  "entryPoint": 12113,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_0edb": {
                  "entryPoint": 12049,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_e732": {
                  "entryPoint": 11986,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_uint256_dyn": {
                  "entryPoint": 11447,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "validator_assert_enum_InsuranceType": {
                  "entryPoint": 11260,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_assert_enum_RiskLevel": {
                  "entryPoint": 11292,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806306964de71461253457806307efa984146124d4578063097aad10146124b157806316934fc4146124555780631988a684146123e657806319ac46141461236f578063238dcf881461235257806325d5971f1461213857806327ed7188146121145780632b07fce314611f3a578063372500ab14611e7f5780633a4b66f114611d0c5780633d36adc514611cc25780633f4ba83a14611c595780634c5e3e8514611c1757806353f4983414611b885780635aef2447146119af5780635c975abb1461198c5780635edcc3481461196e57806361c992a31461192f578063715018a6146118d65780637a1419a1146118105780637b73ba67146117635780637bcb4a64146116dc57806380ef31831461153157806382670986146115155780638456cb59146114bb5780638606f9a51461111f5780638da5cb5b146110f6578063991c6cfc14610ae15780639f16927314610aa3578063a888c2cd146109b1578063b31ef5bb14610996578063c3453153146108f5578063ca9748ea1461089c578063cab3990f146107b1578063d3e89483146106c8578063d70356cc146104e0578063db2e21bc1461048d578063df5dd1a514610425578063df9e9de8146103e6578063e1c8b86f146103c3578063e5078ed71461035a578063eebcb0a9146102ea578063f2fde38b146102615763fdc85fc40361000e573461025c57602036600319011261025c57610233612c26565b61023b613167565b6001600160a01b03166000908152600c60205260409020805460ff19169055005b600080fd5b3461025c57602036600319011261025c5761027a612c26565b610282613167565b6001600160a01b031680156102d457600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b3461025c57602036600319011261025c57600435600581101561025c5761030f613167565b61031881612bfc565b80600052600a60205260ff60046040600020015416159061033881612bfc565b600052600a60205260046040600020019060ff80198354169116179055600080f35b3461025c57602036600319011261025c57610373612c26565b61037b613167565b6001600160a01b03166000818152600b60205260408120805460ff191660011790557f9b401e423fa8d3194b83fa5c9a9ddc45e0ae9d32daddd773ae631cc29b7be0ff9080a2005b3461025c57600036600319011261025c5760206103de613030565b604051908152f35b3461025c57602036600319011261025c576001600160a01b03610407612c26565b16600052600b602052602060ff604060002054166040519015158152f35b3461025c57602036600319011261025c5761043e612c26565b610446613167565b6001600160a01b03166000818152600c60205260408120805460ff191660011790557e47706786c922d17b39285dc59d696bafea72c0b003d3841ae1202076f4c2e49080a2005b3461025c57600036600319011261025c576104a6613167565b6000805481908190819047906001600160a01b03168282156104d7575bf1156104cb57005b6040513d6000823e3d90fd5b506108fc6104c3565b3461025c57602036600319011261025c576004356104fc6130b9565b801515806106bd575b61050e90612ed2565b8060005260066020526040600020906006820191825490600260ff831661053481612bfc565b036106835760018101546000526005602052604060002060ff600182015460a01c1661055f81612bfc565b600052600a6020526040600020906002820190815496600985019788541161063e57600460029660ff191617905542600a850155600881016105a18154612dc3565b90556105b4600988549201918254612dd2565b90556105c286548254612e19565b90556105d5600186549201918254612dd2565b905501600080808060018060a01b03855416875490828215610635575bf1156104cb5760207faf3c8fdd75d667f71d36d7840b8ef9086c516c9b047ad6a83a5a66151342123a9160018060a01b039054169354604051908152a360018055005b506108fc6105f2565b60405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420706f6f6c2066756e64730000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601260248201527110db185a5b481b9bdd08185c1c1c9bdd995960721b6044820152606490fd5b506004548110610505565b3461025c57602036600319011261025c5760043560005260056020526040600020805460018201549160ff8360a01c166107a0600283015460038401546004850154600586015460068701549160ff8084169360081c169361072c60078a01612d1f565b95600960088b01549a0154986040519c8d9c8d5260018060a01b031660208d015261075681612bfc565b60408c015260608b015260808a015260a089015260c088015261077881612c1c565b60e087015261078681612c1c565b610100860152610180610120860152610180850190612c76565b916101408401526101608301520390f35b3461025c57602036600319011261025c5760043533600052600b6020526107df60ff60406000205416612f51565b80151580610891575b6107f190612ed2565b8060005260066020526040600020600360ff60068301541661081281612bfc565b0361084c57600201546001600160a01b0316907fd333905bc6384a6f4b921b01917e6ee525790cae96dbdc5d4f60cb7efb594244600080a3005b60405162461bcd60e51b815260206004820152601c60248201527f436c61696d206d7573742062652072656a6563746564206669727374000000006044820152606490fd5b5060045481106107e8565b3461025c57604036600319011261025c576108b5612c26565b6001600160a01b031660009081526008602052604090208054602435919082101561025c576020916108e691612cb7565b90549060031b1c604051908152f35b3461025c57602036600319011261025c5761090e612c26565b6000606060405161091e81612b67565b828152826020820152826040820152015260018060a01b031660005260096020526080604060002060405161095281612b67565b815491828252600181015460208301908152606060036002840154936040860194855201549301928352604051938452516020840152516040830152516060820152f35b3461025c57600036600319011261025c5760206103de612fe8565b3461025c57602036600319011261025c57600435600052600660205260206040600020805490600181015460018060a01b0360028301541691610a8c6003820154610a7d6004840154600585015460ff60068701541690610a1460078801612d1f565b92610a2160088901612d1f565b9560098901549a600a8a015499600b60018060a01b03910154169a6040519e8f9e8f908152015260408d015260608c015260808b015260a08a0152610a6581612bfc565b60c089015261018060e0890152610180880190612c76565b90868203610100880152612c76565b926101208501526101408401526101608301520390f35b3461025c57608036600319011261025c57600435600581101561025c5760643590600482101561025c576020916103de916044359060243590612f9d565b60a036600319011261025c57600435600581101561025c576024356044359160643591600483101561025c5760843567ffffffffffffffff811161025c57610b2d903690600401612ba5565b92610b366130b9565b610b3e61314a565b81156110b25762278d00851061106d576301e13380851161102857610b6283612bfc565b82600052600a60205260ff6004604060002001541615610fe357610b8881868486612f9d565b94853410610f9e57610b9984612bfc565b83600052600a602052600260406000200154605081029080820460501490151715610f8857606490048311610f4357610be494600354958692610bdb84612dc3565b60035542612dd2565b9060405193610bf285612b2e565b83855260208501903382526040860193610c0b89612bfc565b88855260608701888152608088018c815260a089019142835260c08a0193845260e08a0195600087526101008b0195610c4381612c1c565b86526101208b0197885260006101408c018181526101608d018281529b8252600560205260409091209b518c55905160018c0180546001600160a01b0319166001600160a01b03929092169190911781559851909890610ca281612bfc565b610cab81612bfc565b815460ff60a01b191660a09190911b60ff60a01b161790555160028a015551600389015551600488015551600587015590516006860191610ceb82612c1c565b610cf482612c1c565b60ff61ff0084549251610d0681612c1c565b610d0f81612c1c565b60081b1692169061ffff19161717905560078401905180519067ffffffffffffffff8211610f2d57610d418354612ce5565b601f8111610ee5575b50602090601f8311600114610e79576009959493929160009183610e6e575b50508160011b916000199060031b1c19161790555b51600884015551910155336000526007602052610d9f836040600020612ddf565b610da882612bfc565b81600052600a6020526002604060002001610dc4858254612dd2565b9055833411610e3b575b60405191610ddb81612bfc565b82526020820152817f78e2ee02e1dd0cf71b75c6d5463946e0d324ca4b79fbd0b7e59ceffcf24654c160403393a36040519182527ffbf1458fbbddabb878de144276216e8ccda619cbac2d598e6ee37ff72173afb160203393a360018055005b6000808080610e4a8834612e19565b818115610e65575b3390f1610dce576040513d6000823e3d90fd5b506108fc610e52565b015190508b80610d69565b90601f1983169184600052816000209260005b818110610ecd57509160019391856009999897969410610eb4575b505050811b019055610d7e565b015160001960f88460031b161c191690558b8080610ea7565b92936020600181928786015181550195019301610e8c565b836000526020600020601f840160051c81019160208510610f23575b601f0160051c01905b818110610f175750610d4a565b60008155600101610f0a565b9091508190610f01565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601e60248201527f436f766572616765206578636565647320706f6f6c20636170616369747900006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e74207072656d69756d207061796d656e74000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f496e737572616e63652074797065206e6f7420616374697665000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f4d6178696d756d206475726174696f6e206973203336352064617973000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f4d696e696d756d206475726174696f6e206973203330206461797300000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f436f76657261676520616d6f756e74206d75737420626520706f7369746976656044820152fd5b3461025c57600036600319011261025c576000546040516001600160a01b039091168152602090f35b3461025c57608036600319011261025c57602435600435600582101561025c5760443560643567ffffffffffffffff811161025c57611162903690600401612ba5565b33600052600b60205261117c60ff60406000205416612f51565b821515806114b0575b61118e90612ed2565b82600052600660205260406000209060068201906111b960ff8354166111b381612bfc565b15612f11565b6005830154421161146b576111cd86612bfc565b60028614808015611458575b15611420576111e787612bfc565b156112a957508215158061129b575b1561125657600b926009830155600260ff198254161790555b0180546001600160a01b031916331790556040519161122d81612bfc565b82527e798eecabd6c187fcaa9108de48cf1a34f2d65b6eead4797edcd67fb73ee6c160203393a3005b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420617070726f76656420616d6f756e740000000000000000006044820152606490fd5b5060038201548311156111f6565b809594935051156113db5760088201855167ffffffffffffffff8111610f2d576112d38254612ce5565b601f8111611393575b506020601f8211600114611329578190600b96979860009261131e575b50508160011b916000199060031b1c19161790555b805460ff1916600317905561120f565b0151905088806112f9565b601f1982169783600052816000209860005b81811061137b575091600b97989991846001959410611362575b505050811b01905561130e565b015160001960f88460031b161c19169055888080611355565b838301518b556001909a01996020938401930161133b565b826000526020600020601f830160051c810191602084106113d1575b601f0160051c01905b8181106113c557506112dc565b600081556001016113b8565b90915081906113af565b60405162461bcd60e51b815260206004820152601960248201527f52656a656374696f6e20726561736f6e207265717569726564000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103232b1b4b9b4b7b760811b6044820152606490fd5b5061146287612bfc565b600387146111d9565b60405162461bcd60e51b815260206004820152601c60248201527f496e7665737469676174696f6e20706572696f642065787069726564000000006044820152606490fd5b506004548310611185565b3461025c57600036600319011261025c576114d4613167565b6114dc61314a565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b3461025c57600036600319011261025c57602060405160508152f35b3461025c57604036600319011261025c5760043560243533600052600c60205260ff604060002054161561169f5781151580611694575b61157190612ed2565b8160005260066020526040600020600681019182549261159760ff85166111b381612bfc565b6003830154821161164f57683635c9adc5dea00000821161160a5760ff1990931660029081179093556009820155600b0180546001600160a01b0319163390811790915560405191825291907e798eecabd6c187fcaa9108de48cf1a34f2d65b6eead4797edcd67fb73ee6c190602090a3005b60405162461bcd60e51b815260206004820152601e60248201527f4f7261636c6520617070726f76616c206c696d697420657863656564656400006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f417070726f76656420616d6f756e74206578636565647320636c61696d0000006044820152606490fd5b506004548210611568565b60405162461bcd60e51b81526020600482015260156024820152744e6f7420617574686f72697a6564206f7261636c6560581b6044820152606490fd5b3461025c57602036600319011261025c576001600160a01b036116fd612c26565b166000526008602052604060002060405190816020825491828152019160005260206000209060005b81811061174d576117498561173d81870382612b83565b60405191829182612c3c565b0390f35b8254845260209093019260019283019201611726565b3461025c57606036600319011261025c57600435600581101561025c57602435600481101561025c5760443591611798613167565b61138883116117d2576117aa81612bfc565b600052600d6020526040600020906117c181612c1c565b600052602052604060002055600080f35b60405162461bcd60e51b8152602060048201526016602482015275526174652063616e6e6f74206578636565642035302560501b6044820152606490fd5b3461025c57602036600319011261025c57600435600581101561025c576000608060405161183d81612b4b565b828152826020820152826040820152826060820152015261185d81612bfc565b600052600a60205260a0604060002060405161187881612b4b565b81549182825260018101546020830190815260028201549060408401918252608060ff600460038601549560608801968752015416940193151584526040519485525160208501525160408401525160608301525115156080820152f35b3461025c57600036600319011261025c576118ef613167565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461025c57602036600319011261025c576001600160a01b03611950612c26565b16600052600c602052602060ff604060002054166040519015158152f35b3461025c57600036600319011261025c57602060405162093a808152f35b3461025c57600036600319011261025c57602060ff600254166040519015158152f35b3461025c57602036600319011261025c5760006101606040516119d181612b2e565b8281528260208201528260408201528260608201528260808201528260a08201528260c0820152606060e08201526060610100820152826101208201528261014082015201526004356000526006602052604080600020815190611a3482612b2e565b805482526001810154916020810192835260018060a01b0360028301541691848201928352611b65600382015460608401908152611b51600484015460808601908152600585015460a0870190815260ff6006870154169060c0880191611a9a81612bfc565b8252611aa860078801612d1f565b9260e08901938452611abc60088901612d1f565b956101008a0196875260098901549a6101208b019b8c52600a8a0154996101408c019a8b52600b60018060a01b03910154169a61016081019b8c528e519e8f9e8f92602084525160208401525191015260018060a01b0390511660608d01525160808c01525160a08b01525160c08a015251611b3781612bfc565b60e0890152516101806101008901526101a0880190612c76565b9051868203601f1901610120880152612c76565b925161014085015251610160840152516001600160a01b03166101808301520390f35b3461025c57604036600319011261025c57600435600581101561025c5760243590611bb1613167565b6107d08211611bd957611bc381612bfc565b600052600a602052600360406000200155600080f35b60405162461bcd60e51b8152602060048201526016602482015275526174652063616e6e6f74206578636565642032302560501b6044820152606490fd5b3461025c57602036600319011261025c57611c30612c26565b611c38613167565b6001600160a01b03166000908152600b60205260409020805460ff19169055005b3461025c57600036600319011261025c57611c72613167565b60025460ff811615611cb15760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b638dfc202b60e01b60005260046000fd5b3461025c57604036600319011261025c57611cdb612c26565b6001600160a01b031660009081526007602052604090208054602435919082101561025c576020916108e691612cb7565b600036600319011261025c57611d206130b9565b611d2861314a565b68056bc75e2d631000003410611e3a5733600052600960205260406000208054611e2c575b611d58348254612dd2565b81554260018201556003429101556005340460005b60058110611da7576040513481527f0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc260203392a260018055005b80611db3600192612bfc565b611dbc81612bfc565b80600052600a60205260ff60046040600020015416611ddc575b01611d6d565b611de581612bfc565b80600052600a6020526040600020611dfe848254612dd2565b9055611e0981612bfc565b80600052600a6020526002604060002001611e25848254612dd2565b9055611dd6565b611e35336130db565b611d4d565b60405162461bcd60e51b815260206004820152601c60248201527f4d696e696d756d207374616b6520616d6f756e74206e6f74206d6574000000006044820152606490fd5b3461025c57600036600319011261025c57611e986130b9565b611ea1336130db565b33600052600960205260026040600020018054908115611eff57600090556000808080843382f1156104cb576040519081527ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe60203392a260018055005b60405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b6044820152606490fd5b3461025c57602036600319011261025c576000610160604051611f5c81612b2e565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015260606101208201528261014082015201526004356000526005602052602060406000206040518091611fc182612b2e565b8054825260018101546001600160a01b0381168584019081529161210191604085019060a01c60ff16611ff381612bfc565b8152600282015460608601908152600383015460808701908152600484015460a0880190815260058501549160c0890192835260068601549360ff8086169560e08c019661204081612c1c565b875260081c16956101008b019661205681612c1c565b8752600961206660078a01612d1f565b986101208d01998a5261014060088201549d019c8d520154996101608d019a8b526040518e819f9e829f83525191015260018060a01b0390511660408d0152516120af81612bfc565b60608c01525160808b01525160a08a01525160c08901525160e0880152516120d681612c1c565b610100870152516120e681612c1c565b610120860152516101806101408601526101a0850190612c76565b9151610160840152516101808301520390f35b3461025c57600036600319011261025c57602060405168056bc75e2d631000008152f35b3461025c57602036600319011261025c576004356121546130b9565b3360005260096020526040600020818154106123185781156122d357612179336130db565b612181612fe8565b6121938361218d613030565b92612e19565b90605081029080820460501490151715610f8857606490041161228f576121bb828254612e19565b90556005810460005b6005811061220d57826000808080843382f1156104cb576040519081527f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc60203392a260018055005b80612219600192612bfc565b61222281612bfc565b80600052600a60205282604060002054101561223f575b016121c4565b61224881612bfc565b80600052600a6020526040600020612261848254612e19565b905561226c81612bfc565b80600052600a6020526002604060002001612288848254612e19565b9055612239565b606460405162461bcd60e51b815260206004820152602060248201527f5769746864726177616c20776f756c642061666665637420736f6c76656e63796044820152fd5b60405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e74207374616b6560701b6044820152606490fd5b3461025c57600036600319011261025c5760206040516103e88152f35b3461025c57602036600319011261025c576001600160a01b03612390612c26565b166000526007602052604060002060405190816020825491828152019160005260206000209060005b8181106123d0576117498561173d81870382612b83565b82548452602090930192600192830192016123b9565b3461025c57602036600319011261025c57600435600581101561025c5761240c81612bfc565b600052600a60205260a06040600020805490600181015490600281015460ff60046003840154930154169260405194855260208501526040840152606083015215156080820152f35b3461025c57602036600319011261025c576001600160a01b03612476612c26565b166000526009602052608060406000208054906001810154906003600282015491015491604051938452602084015260408301526060820152f35b3461025c57602036600319011261025c5760206103de6124cf612c26565b612e39565b3461025c57604036600319011261025c57600435600581101561025c5760243590600482101561025c5761250781612bfc565b600052600d60205260406000209061251e81612c1c565b6000526020526020604060002054604051908152f35b3461025c57606036600319011261025c5760243560043560443567ffffffffffffffff811161025c5761256b903690600401612ba5565b6125736130b9565b81151580612b23575b15612aea5781600052600560205260ff6006604060002001541661259f81612c1c565b612ab157600082815260056020526040902060018101546001600160a01b03163303612a785760058101544211612a425783156129fd576002015483116129bf57600454906125ed82612dc3565b60045562093a80420190814211610f88576040519061260b82612b2e565b838252602082019085825260408301903382526060840190888252608085019042825260a0860196875260c086016000815260e08701918252602097604051936126558a86612b83565b60008086526101008a019586526101208a018181526101408b018281526101608c018381528e84526006808f5260409094209c518d559a5160018d0155985160028c0180546001600160a01b0319166001600160a01b0392909216919091179055965160038b0155905160048a0155905160058901559051908701906126da81612bfc565b6126e381612bfc565b60ff8019835416911617905560078601905180519067ffffffffffffffff8211610f2d5781906127138454612ce5565b601f811161296e575b508990601f8311600114612909576000926128fe575b50508160011b916000199060031b1c19161790555b518051600886019167ffffffffffffffff8211610f2d576127688354612ce5565b601f81116128b8575b508790601f8311600114612829579180600b9694927f3a30d1c4069e097873e77443df9683e8de5c7ba3674315b8670a0211e31301959a9998969460009261281e575b50508160011b916000199060031b1c19161790555b51600985015551600a84015551910180546001600160a01b0319166001600160a01b0392909216919091179055336000908152600882526040902061280f908490612ddf565b6040519485523394a460018055005b015190508d806127b4565b90601f1983169184600052896000209260005b8181106128a157509260019285927f3a30d1c4069e097873e77443df9683e8de5c7ba3674315b8670a0211e31301959c9b9a9896600b9a989610612888575b505050811b0190556127c9565b015160001960f88460031b161c191690558d808061287b565b92938b60018192878601518155019501930161283c565b8360005288600020601f840160051c8101918a85106128f4575b601f0160051c01905b8181106128e85750612771565b600081556001016128db565b90915081906128d2565b015190508c80612732565b60008581528b81209350601f198516905b8c82821061295857505090846001959493921061293f575b505050811b019055612747565b015160001960f88460031b161c191690558c8080612932565b600185968293968601518155019501930161291a565b9091508360005289600020601f840160051c8101918b85106129b5575b90601f859493920160051c01905b8181106129a6575061271c565b60008155849350600101612999565b909150819061298b565b60405162461bcd60e51b8152602060048201526016602482015275436c61696d206578636565647320636f76657261676560501b6044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f436c61696d20616d6f756e74206d75737420626520706f7369746976650000006044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d141bdb1a58de48195e1c1a5c995960921b6044820152606490fd5b60405162461bcd60e51b81526020600482015260116024820152702737ba103837b634b1bc903437b63232b960791b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270506f6c696379206e6f742061637469766560781b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c1bdb1a58de481251607a1b6044820152606490fd5b50600354821061257c565b610180810190811067ffffffffffffffff821117610f2d57604052565b60a0810190811067ffffffffffffffff821117610f2d57604052565b6080810190811067ffffffffffffffff821117610f2d57604052565b90601f8019910116810190811067ffffffffffffffff821117610f2d57604052565b81601f8201121561025c5780359067ffffffffffffffff8211610f2d5760405192612bda601f8401601f191660200185612b83565b8284526020838301011161025c57816000926020809301838601378301015290565b60051115612c0657565b634e487b7160e01b600052602160045260246000fd5b60041115612c0657565b600435906001600160a01b038216820361025c57565b602060408183019282815284518094520192019060005b818110612c605750505090565b8251845260209384019390920191600101612c53565b919082519283825260005b848110612ca2575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201612c81565b8054821015612ccf5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015612d15575b6020831014612cff57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612cf4565b9060405191826000825492612d3384612ce5565b8084529360018116908115612da15750600114612d5a575b50612d5892500383612b83565b565b90506000929192526020600020906000915b818310612d85575050906020612d589282010138612d4b565b6020919350806001915483858901015201910190918492612d6c565b905060209250612d5894915060ff191682840152151560051b82010138612d4b565b6000198114610f885760010190565b91908201809211610f8857565b805468010000000000000000811015610f2d57612e0191600182018155612cb7565b819291549060031b91821b91600019901b1916179055565b91908203918211610f8857565b81810292918115918404141715610f8857565b60018060a01b03166000526009602052604060002060405190612e5b82612b67565b80548083526001820154602084015260028201546003604085019382855201549182606086015215612ecb5750612e929042612e19565b9151916103e88302928084046103e81490151715610f8857612ec06301e1338091612710612ec89504612e26565b049051612dd2565b90565b9250505090565b15612ed957565b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a590818db185a5b48125160821b6044820152606490fd5b15612f1857565b60405162461bcd60e51b8152602060048201526011602482015270436c61696d206e6f742070656e64696e6760781b6044820152606490fd5b15612f5857565b60405162461bcd60e51b815260206004820152601b60248201527f4e6f7420617574686f72697a656420696e76657374696761746f7200000000006044820152606490fd5b612fe4929164496cebb80094612fdf92612fb681612bfc565b600052600d602052604060002090612fcd81612c1c565b60005260205260406000205490612e26565b612e26565b0490565b6000805b60058110612ff8575090565b9061302960019161300884612bfc565b61301184612bfc565b83600052600a60205260026040600020015490612dd2565b9101612fec565b60006001600354905b81811061304557505090565b80600052600560205260ff6006604060002001541661306381612c1c565b158061309e575b613077575b600101613039565b9161309660019184600052600560205260026040600020015490612dd2565b92905061306f565b5080600052600560205260056040600020015442111561306a565b6002600154146130ca576002600155565b633ee5aeb560e01b60005260046000fd5b6001600160a01b03166000908152600960205260409020805490811561314657600381019161310b835442612e19565b906103e881029081046103e803610f88576301e1338061313461313f9361271060029404612e26565b049201918254612dd2565b9055429055565b5050565b60ff6002541661315657565b63d93c066560e01b60005260046000fd5b6000546001600160a01b0316330361317b57565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220b85e9b28ed0b275513583df6c1cef6746495372cd2da6cba2bc4ff15e8e0d57964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6964DE7 EQ PUSH2 0x2534 JUMPI DUP1 PUSH4 0x7EFA984 EQ PUSH2 0x24D4 JUMPI DUP1 PUSH4 0x97AAD10 EQ PUSH2 0x24B1 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x2455 JUMPI DUP1 PUSH4 0x1988A684 EQ PUSH2 0x23E6 JUMPI DUP1 PUSH4 0x19AC4614 EQ PUSH2 0x236F JUMPI DUP1 PUSH4 0x238DCF88 EQ PUSH2 0x2352 JUMPI DUP1 PUSH4 0x25D5971F EQ PUSH2 0x2138 JUMPI DUP1 PUSH4 0x27ED7188 EQ PUSH2 0x2114 JUMPI DUP1 PUSH4 0x2B07FCE3 EQ PUSH2 0x1F3A JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1E7F JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x1D0C JUMPI DUP1 PUSH4 0x3D36ADC5 EQ PUSH2 0x1CC2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1C59 JUMPI DUP1 PUSH4 0x4C5E3E85 EQ PUSH2 0x1C17 JUMPI DUP1 PUSH4 0x53F49834 EQ PUSH2 0x1B88 JUMPI DUP1 PUSH4 0x5AEF2447 EQ PUSH2 0x19AF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x198C JUMPI DUP1 PUSH4 0x5EDCC348 EQ PUSH2 0x196E JUMPI DUP1 PUSH4 0x61C992A3 EQ PUSH2 0x192F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18D6 JUMPI DUP1 PUSH4 0x7A1419A1 EQ PUSH2 0x1810 JUMPI DUP1 PUSH4 0x7B73BA67 EQ PUSH2 0x1763 JUMPI DUP1 PUSH4 0x7BCB4A64 EQ PUSH2 0x16DC JUMPI DUP1 PUSH4 0x80EF3183 EQ PUSH2 0x1531 JUMPI DUP1 PUSH4 0x82670986 EQ PUSH2 0x1515 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x14BB JUMPI DUP1 PUSH4 0x8606F9A5 EQ PUSH2 0x111F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10F6 JUMPI DUP1 PUSH4 0x991C6CFC EQ PUSH2 0xAE1 JUMPI DUP1 PUSH4 0x9F169273 EQ PUSH2 0xAA3 JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xB31EF5BB EQ PUSH2 0x996 JUMPI DUP1 PUSH4 0xC3453153 EQ PUSH2 0x8F5 JUMPI DUP1 PUSH4 0xCA9748EA EQ PUSH2 0x89C JUMPI DUP1 PUSH4 0xCAB3990F EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0xD3E89483 EQ PUSH2 0x6C8 JUMPI DUP1 PUSH4 0xD70356CC EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xDF5DD1A5 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xDF9E9DE8 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xE1C8B86F EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xE5078ED7 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xEEBCB0A9 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x261 JUMPI PUSH4 0xFDC85FC4 SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x233 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x27A PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH2 0x30F PUSH2 0x3167 JUMP JUMPDEST PUSH2 0x318 DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO SWAP1 PUSH2 0x338 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x373 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x37B PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x9B401E423FA8D3194B83FA5C9A9DDC45E0AE9D32DADDD773AE631CC29B7BE0FF SWAP1 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH2 0x3DE PUSH2 0x3030 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x407 PUSH2 0x2C26 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x43E PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH31 0x47706786C922D17B39285DC59D696BAFEA72C0B003D3841AE1202076F4C2E4 SWAP1 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x4A6 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 SELFBALANCE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ISZERO PUSH2 0x4D7 JUMPI JUMPDEST CALL ISZERO PUSH2 0x4CB JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x4C3 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4FC PUSH2 0x30B9 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x6BD JUMPI JUMPDEST PUSH2 0x50E SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD SWAP2 DUP3 SLOAD SWAP1 PUSH1 0x2 PUSH1 0xFF DUP4 AND PUSH2 0x534 DUP2 PUSH2 0x2BFC JUMP JUMPDEST SUB PUSH2 0x683 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x55F DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 DUP3 ADD SWAP1 DUP2 SLOAD SWAP7 PUSH1 0x9 DUP6 ADD SWAP8 DUP9 SLOAD GT PUSH2 0x63E JUMPI PUSH1 0x4 PUSH1 0x2 SWAP7 PUSH1 0xFF NOT AND OR SWAP1 SSTORE TIMESTAMP PUSH1 0xA DUP6 ADD SSTORE PUSH1 0x8 DUP2 ADD PUSH2 0x5A1 DUP2 SLOAD PUSH2 0x2DC3 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x5B4 PUSH1 0x9 DUP9 SLOAD SWAP3 ADD SWAP2 DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x5C2 DUP7 SLOAD DUP3 SLOAD PUSH2 0x2E19 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x5D5 PUSH1 0x1 DUP7 SLOAD SWAP3 ADD SWAP2 DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 SLOAD AND DUP8 SLOAD SWAP1 DUP3 DUP3 ISZERO PUSH2 0x635 JUMPI JUMPDEST CALL ISZERO PUSH2 0x4CB JUMPI PUSH1 0x20 PUSH32 0xAF3C8FDD75D667F71D36D7840B8EF9086C516C9B047AD6A83A5A66151342123A SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND SWAP4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420706F6F6C2066756E6473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10DB185A5B481B9BDD08185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x505 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x7A0 PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD SWAP2 PUSH1 0xFF DUP1 DUP5 AND SWAP4 PUSH1 0x8 SHR AND SWAP4 PUSH2 0x72C PUSH1 0x7 DUP11 ADD PUSH2 0x2D1F JUMP JUMPDEST SWAP6 PUSH1 0x9 PUSH1 0x8 DUP12 ADD SLOAD SWAP11 ADD SLOAD SWAP9 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x756 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH2 0x778 DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x786 DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x180 PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x180 DUP6 ADD SWAP1 PUSH2 0x2C76 JUMP JUMPDEST SWAP2 PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x7DF PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2F51 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x891 JUMPI JUMPDEST PUSH2 0x7F1 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 PUSH1 0xFF PUSH1 0x6 DUP4 ADD SLOAD AND PUSH2 0x812 DUP2 PUSH2 0x2BFC JUMP JUMPDEST SUB PUSH2 0x84C JUMPI PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xD333905BC6384A6F4B921B01917E6EE525790CAE96DBDC5D4F60CB7EFB594244 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D206D7573742062652072656A656374656420666972737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x7E8 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x8B5 PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x20 SWAP2 PUSH2 0x8E6 SWAP2 PUSH2 0x2CB7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x90E PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x91E DUP2 PUSH2 0x2B67 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x80 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x952 DUP2 PUSH2 0x2B67 JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 PUSH1 0x3 PUSH1 0x2 DUP5 ADD SLOAD SWAP4 PUSH1 0x40 DUP7 ADD SWAP5 DUP6 MSTORE ADD SLOAD SWAP4 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE MLOAD PUSH1 0x20 DUP5 ADD MSTORE MLOAD PUSH1 0x40 DUP4 ADD MSTORE MLOAD PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH2 0x3DE PUSH2 0x2FE8 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 PUSH2 0xA8C PUSH1 0x3 DUP3 ADD SLOAD PUSH2 0xA7D PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0xFF PUSH1 0x6 DUP8 ADD SLOAD AND SWAP1 PUSH2 0xA14 PUSH1 0x7 DUP9 ADD PUSH2 0x2D1F JUMP JUMPDEST SWAP3 PUSH2 0xA21 PUSH1 0x8 DUP10 ADD PUSH2 0x2D1F JUMP JUMPDEST SWAP6 PUSH1 0x9 DUP10 ADD SLOAD SWAP11 PUSH1 0xA DUP11 ADD SLOAD SWAP10 PUSH1 0xB PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP11 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP1 DUP2 MSTORE ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH2 0xA65 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MSTORE PUSH2 0x180 PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x180 DUP9 ADD SWAP1 PUSH2 0x2C76 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x2C76 JUMP JUMPDEST SWAP3 PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x20 SWAP2 PUSH2 0x3DE SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x4 DUP4 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25C JUMPI PUSH2 0xB2D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2BA5 JUMP JUMPDEST SWAP3 PUSH2 0xB36 PUSH2 0x30B9 JUMP JUMPDEST PUSH2 0xB3E PUSH2 0x314A JUMP JUMPDEST DUP2 ISZERO PUSH2 0x10B2 JUMPI PUSH3 0x278D00 DUP6 LT PUSH2 0x106D JUMPI PUSH4 0x1E13380 DUP6 GT PUSH2 0x1028 JUMPI PUSH2 0xB62 DUP4 PUSH2 0x2BFC JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xFE3 JUMPI PUSH2 0xB88 DUP2 DUP7 DUP5 DUP7 PUSH2 0x2F9D JUMP JUMPDEST SWAP5 DUP6 CALLVALUE LT PUSH2 0xF9E JUMPI PUSH2 0xB99 DUP5 PUSH2 0x2BFC JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x50 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x50 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xF88 JUMPI PUSH1 0x64 SWAP1 DIV DUP4 GT PUSH2 0xF43 JUMPI PUSH2 0xBE4 SWAP5 PUSH1 0x3 SLOAD SWAP6 DUP7 SWAP3 PUSH2 0xBDB DUP5 PUSH2 0x2DC3 JUMP JUMPDEST PUSH1 0x3 SSTORE TIMESTAMP PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xBF2 DUP6 PUSH2 0x2B2E JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x40 DUP7 ADD SWAP4 PUSH2 0xC0B DUP10 PUSH2 0x2BFC JUMP JUMPDEST DUP9 DUP6 MSTORE PUSH1 0x60 DUP8 ADD DUP9 DUP2 MSTORE PUSH1 0x80 DUP9 ADD DUP13 DUP2 MSTORE PUSH1 0xA0 DUP10 ADD SWAP2 TIMESTAMP DUP4 MSTORE PUSH1 0xC0 DUP11 ADD SWAP4 DUP5 MSTORE PUSH1 0xE0 DUP11 ADD SWAP6 PUSH1 0x0 DUP8 MSTORE PUSH2 0x100 DUP12 ADD SWAP6 PUSH2 0xC43 DUP2 PUSH2 0x2C1C JUMP JUMPDEST DUP7 MSTORE PUSH2 0x120 DUP12 ADD SWAP8 DUP9 MSTORE PUSH1 0x0 PUSH2 0x140 DUP13 ADD DUP2 DUP2 MSTORE PUSH2 0x160 DUP14 ADD DUP3 DUP2 MSTORE SWAP12 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP12 MLOAD DUP13 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP13 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP9 MLOAD SWAP1 SWAP9 SWAP1 PUSH2 0xCA2 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH2 0xCAB DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP11 ADD SSTORE MLOAD PUSH1 0x3 DUP10 ADD SSTORE MLOAD PUSH1 0x4 DUP9 ADD SSTORE MLOAD PUSH1 0x5 DUP8 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 DUP7 ADD SWAP2 PUSH2 0xCEB DUP3 PUSH2 0x2C1C JUMP JUMPDEST PUSH2 0xCF4 DUP3 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0xFF PUSH2 0xFF00 DUP5 SLOAD SWAP3 MLOAD PUSH2 0xD06 DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH2 0xD0F DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH2 0xFFFF NOT AND OR OR SWAP1 SSTORE PUSH1 0x7 DUP5 ADD SWAP1 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF2D JUMPI PUSH2 0xD41 DUP4 SLOAD PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xEE5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE79 JUMPI PUSH1 0x9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0xE6E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH1 0x8 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xD9F DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2DDF JUMP JUMPDEST PUSH2 0xDA8 DUP3 PUSH2 0x2BFC JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0xDC4 DUP6 DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 SSTORE DUP4 CALLVALUE GT PUSH2 0xE3B JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0xDDB DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH32 0x78E2EE02E1DD0CF71B75C6D5463946E0D324CA4B79FBD0B7E59CEFFCF24654C1 PUSH1 0x40 CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xFBF1458FBBDDABB878DE144276216E8CCDA619CBAC2D598E6EE37FF72173AFB1 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xE4A DUP9 CALLVALUE PUSH2 0x2E19 JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0xE65 JUMPI JUMPDEST CALLER SWAP1 CALL PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0xE52 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0xD69 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xECD JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0x9 SWAP10 SWAP9 SWAP8 SWAP7 SWAP5 LT PUSH2 0xEB4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xD7E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0xEA7 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xE8C JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xF23 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xF17 JUMPI POP PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xF0A JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F766572616765206578636565647320706F6F6C2063617061636974790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207072656D69756D207061796D656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E737572616E63652074797065206E6F742061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206475726174696F6E20697320333635206461797300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D206475726174696F6E20697320333020646179730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F76657261676520616D6F756E74206D75737420626520706F736974697665 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25C JUMPI PUSH2 0x1162 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2BA5 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x117C PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2F51 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP1 PUSH2 0x14B0 JUMPI JUMPDEST PUSH2 0x118E SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD SWAP1 PUSH2 0x11B9 PUSH1 0xFF DUP4 SLOAD AND PUSH2 0x11B3 DUP2 PUSH2 0x2BFC JUMP JUMPDEST ISZERO PUSH2 0x2F11 JUMP JUMPDEST PUSH1 0x5 DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x146B JUMPI PUSH2 0x11CD DUP7 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x2 DUP7 EQ DUP1 DUP1 ISZERO PUSH2 0x1458 JUMPI JUMPDEST ISZERO PUSH2 0x1420 JUMPI PUSH2 0x11E7 DUP8 PUSH2 0x2BFC JUMP JUMPDEST ISZERO PUSH2 0x12A9 JUMPI POP DUP3 ISZERO ISZERO DUP1 PUSH2 0x129B JUMPI JUMPDEST ISZERO PUSH2 0x1256 JUMPI PUSH1 0xB SWAP3 PUSH1 0x9 DUP4 ADD SSTORE PUSH1 0x2 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x122D DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP3 MSTORE PUSH31 0x798EECABD6C187FCAA9108DE48CF1A34F2D65B6EEAD4797EDCD67FB73EE6C1 PUSH1 0x20 CALLER SWAP4 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617070726F76656420616D6F756E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 DUP3 ADD SLOAD DUP4 GT ISZERO PUSH2 0x11F6 JUMP JUMPDEST DUP1 SWAP6 SWAP5 SWAP4 POP MLOAD ISZERO PUSH2 0x13DB JUMPI PUSH1 0x8 DUP3 ADD DUP6 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF2D JUMPI PUSH2 0x12D3 DUP3 SLOAD PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1393 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1329 JUMPI DUP2 SWAP1 PUSH1 0xB SWAP7 SWAP8 SWAP9 PUSH1 0x0 SWAP3 PUSH2 0x131E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE PUSH2 0x120F JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP8 DUP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP9 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x137B JUMPI POP SWAP2 PUSH1 0xB SWAP8 SWAP9 SWAP10 SWAP2 DUP5 PUSH1 0x1 SWAP6 SWAP5 LT PUSH2 0x1362 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x130E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1355 JUMP JUMPDEST DUP4 DUP4 ADD MLOAD DUP12 SSTORE PUSH1 0x1 SWAP1 SWAP11 ADD SWAP10 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x133B JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x13D1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x13C5 JUMPI POP PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656A656374696F6E20726561736F6E20726571756972656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B2103232B1B4B9B4B7B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0x1462 DUP8 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x3 DUP8 EQ PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E7665737469676174696F6E20706572696F64206578706972656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP4 LT PUSH2 0x1185 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x14D4 PUSH2 0x3167 JUMP JUMPDEST PUSH2 0x14DC PUSH2 0x314A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x50 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x169F JUMPI DUP2 ISZERO ISZERO DUP1 PUSH2 0x1694 JUMPI JUMPDEST PUSH2 0x1571 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x6 DUP2 ADD SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x1597 PUSH1 0xFF DUP6 AND PUSH2 0x11B3 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP3 GT PUSH2 0x164F JUMPI PUSH9 0x3635C9ADC5DEA00000 DUP3 GT PUSH2 0x160A JUMPI PUSH1 0xFF NOT SWAP1 SWAP4 AND PUSH1 0x2 SWAP1 DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x9 DUP3 ADD SSTORE PUSH1 0xB ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE SWAP2 SWAP1 PUSH31 0x798EECABD6C187FCAA9108DE48CF1A34F2D65B6EEAD4797EDCD67FB73EE6C1 SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C6520617070726F76616C206C696D69742065786365656465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417070726F76656420616D6F756E74206578636565647320636C61696D000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP3 LT PUSH2 0x1568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F7420617574686F72697A6564206F7261636C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16FD PUSH2 0x2C26 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x174D JUMPI PUSH2 0x1749 DUP6 PUSH2 0x173D DUP2 DUP8 SUB DUP3 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2C3C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1726 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1798 PUSH2 0x3167 JUMP JUMPDEST PUSH2 0x1388 DUP4 GT PUSH2 0x17D2 JUMPI PUSH2 0x17AA DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x17C1 DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x526174652063616E6E6F742065786365656420353025 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x183D DUP2 PUSH2 0x2B4B JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH2 0x185D DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1878 DUP2 PUSH2 0x2B4B JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP7 ADD SLOAD SWAP6 PUSH1 0x60 DUP9 ADD SWAP7 DUP8 MSTORE ADD SLOAD AND SWAP5 ADD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD PUSH1 0x20 DUP6 ADD MSTORE MLOAD PUSH1 0x40 DUP5 ADD MSTORE MLOAD PUSH1 0x60 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x18EF PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1950 PUSH2 0x2C26 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x0 PUSH2 0x160 PUSH1 0x40 MLOAD PUSH2 0x19D1 DUP2 PUSH2 0x2B2E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 DUP2 MLOAD SWAP1 PUSH2 0x1A34 DUP3 PUSH2 0x2B2E JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP2 PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 DUP5 DUP3 ADD SWAP3 DUP4 MSTORE PUSH2 0x1B65 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP5 ADD SWAP1 DUP2 MSTORE PUSH2 0x1B51 PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0xA0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF PUSH1 0x6 DUP8 ADD SLOAD AND SWAP1 PUSH1 0xC0 DUP9 ADD SWAP2 PUSH2 0x1A9A DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP3 MSTORE PUSH2 0x1AA8 PUSH1 0x7 DUP9 ADD PUSH2 0x2D1F JUMP JUMPDEST SWAP3 PUSH1 0xE0 DUP10 ADD SWAP4 DUP5 MSTORE PUSH2 0x1ABC PUSH1 0x8 DUP10 ADD PUSH2 0x2D1F JUMP JUMPDEST SWAP6 PUSH2 0x100 DUP11 ADD SWAP7 DUP8 MSTORE PUSH1 0x9 DUP10 ADD SLOAD SWAP11 PUSH2 0x120 DUP12 ADD SWAP12 DUP13 MSTORE PUSH1 0xA DUP11 ADD SLOAD SWAP10 PUSH2 0x140 DUP13 ADD SWAP11 DUP12 MSTORE PUSH1 0xB PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP11 PUSH2 0x160 DUP2 ADD SWAP12 DUP13 MSTORE DUP15 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP3 PUSH1 0x20 DUP5 MSTORE MLOAD PUSH1 0x20 DUP5 ADD MSTORE MLOAD SWAP2 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x60 DUP14 ADD MSTORE MLOAD PUSH1 0x80 DUP13 ADD MSTORE MLOAD PUSH1 0xA0 DUP12 ADD MSTORE MLOAD PUSH1 0xC0 DUP11 ADD MSTORE MLOAD PUSH2 0x1B37 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0xE0 DUP10 ADD MSTORE MLOAD PUSH2 0x180 PUSH2 0x100 DUP10 ADD MSTORE PUSH2 0x1A0 DUP9 ADD SWAP1 PUSH2 0x2C76 JUMP JUMPDEST SWAP1 MLOAD DUP7 DUP3 SUB PUSH1 0x1F NOT ADD PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x2C76 JUMP JUMPDEST SWAP3 MLOAD PUSH2 0x140 DUP6 ADD MSTORE MLOAD PUSH2 0x160 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x180 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1BB1 PUSH2 0x3167 JUMP JUMPDEST PUSH2 0x7D0 DUP3 GT PUSH2 0x1BD9 JUMPI PUSH2 0x1BC3 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x526174652063616E6E6F742065786365656420323025 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x1C30 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x1C38 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x1C72 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1CB1 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x1CDB PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x20 SWAP2 PUSH2 0x8E6 SWAP2 PUSH2 0x2CB7 JUMP JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x1D20 PUSH2 0x30B9 JUMP JUMPDEST PUSH2 0x1D28 PUSH2 0x314A JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 CALLVALUE LT PUSH2 0x1E3A JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1E2C JUMPI JUMPDEST PUSH2 0x1D58 CALLVALUE DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x3 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x5 CALLVALUE DIV PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1DA7 JUMPI PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0xA7BB2E28CC4698AAC06DB79CF9163BFCC20719286CF59FA7D492CEDA1B8EDC2 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP1 PUSH2 0x1DB3 PUSH1 0x1 SWAP3 PUSH2 0x2BFC JUMP JUMPDEST PUSH2 0x1DBC DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x1DDC JUMPI JUMPDEST ADD PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0x1DE5 DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1DFE DUP5 DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1E09 DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x1E25 DUP5 DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1DD6 JUMP JUMPDEST PUSH2 0x1E35 CALLER PUSH2 0x30DB JUMP JUMPDEST PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D207374616B6520616D6F756E74206E6F74206D657400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH2 0x1E98 PUSH2 0x30B9 JUMP JUMPDEST PUSH2 0x1EA1 CALLER PUSH2 0x30DB JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x1EFF JUMPI PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 CALLER DUP3 CALL ISZERO PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F207265776172647320746F20636C61696D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x0 PUSH2 0x160 PUSH1 0x40 MLOAD PUSH2 0x1F5C DUP2 PUSH2 0x2B2E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH2 0x1FC1 DUP3 PUSH2 0x2B2E JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP6 DUP5 ADD SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x2101 SWAP2 PUSH1 0x40 DUP6 ADD SWAP1 PUSH1 0xA0 SHR PUSH1 0xFF AND PUSH2 0x1FF3 DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0xA0 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 DUP6 ADD SLOAD SWAP2 PUSH1 0xC0 DUP10 ADD SWAP3 DUP4 MSTORE PUSH1 0x6 DUP7 ADD SLOAD SWAP4 PUSH1 0xFF DUP1 DUP7 AND SWAP6 PUSH1 0xE0 DUP13 ADD SWAP7 PUSH2 0x2040 DUP2 PUSH2 0x2C1C JUMP JUMPDEST DUP8 MSTORE PUSH1 0x8 SHR AND SWAP6 PUSH2 0x100 DUP12 ADD SWAP7 PUSH2 0x2056 DUP2 PUSH2 0x2C1C JUMP JUMPDEST DUP8 MSTORE PUSH1 0x9 PUSH2 0x2066 PUSH1 0x7 DUP11 ADD PUSH2 0x2D1F JUMP JUMPDEST SWAP9 PUSH2 0x120 DUP14 ADD SWAP10 DUP11 MSTORE PUSH2 0x140 PUSH1 0x8 DUP3 ADD SLOAD SWAP14 ADD SWAP13 DUP14 MSTORE ADD SLOAD SWAP10 PUSH2 0x160 DUP14 ADD SWAP11 DUP12 MSTORE PUSH1 0x40 MLOAD DUP15 DUP2 SWAP16 SWAP15 DUP3 SWAP16 DUP4 MSTORE MLOAD SWAP2 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x40 DUP14 ADD MSTORE MLOAD PUSH2 0x20AF DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE MLOAD PUSH1 0x80 DUP12 ADD MSTORE MLOAD PUSH1 0xA0 DUP11 ADD MSTORE MLOAD PUSH1 0xC0 DUP10 ADD MSTORE MLOAD PUSH1 0xE0 DUP9 ADD MSTORE MLOAD PUSH2 0x20D6 DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH2 0x100 DUP8 ADD MSTORE MLOAD PUSH2 0x20E6 DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH2 0x120 DUP7 ADD MSTORE MLOAD PUSH2 0x180 PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x1A0 DUP6 ADD SWAP1 PUSH2 0x2C76 JUMP JUMPDEST SWAP2 MLOAD PUSH2 0x160 DUP5 ADD MSTORE MLOAD PUSH2 0x180 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2154 PUSH2 0x30B9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD LT PUSH2 0x2318 JUMPI DUP2 ISZERO PUSH2 0x22D3 JUMPI PUSH2 0x2179 CALLER PUSH2 0x30DB JUMP JUMPDEST PUSH2 0x2181 PUSH2 0x2FE8 JUMP JUMPDEST PUSH2 0x2193 DUP4 PUSH2 0x218D PUSH2 0x3030 JUMP JUMPDEST SWAP3 PUSH2 0x2E19 JUMP JUMPDEST SWAP1 PUSH1 0x50 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x50 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xF88 JUMPI PUSH1 0x64 SWAP1 DIV GT PUSH2 0x228F JUMPI PUSH2 0x21BB DUP3 DUP3 SLOAD PUSH2 0x2E19 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x5 DUP2 DIV PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x220D JUMPI DUP3 PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 CALLER DUP3 CALL ISZERO PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8108595EB6BAD3ACEFA9DA467D90CC2217686D5C5AC85460F8B7849C840645FC PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP1 PUSH2 0x2219 PUSH1 0x1 SWAP3 PUSH2 0x2BFC JUMP JUMPDEST PUSH2 0x2222 DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x223F JUMPI JUMPDEST ADD PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0x2248 DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2261 DUP5 DUP3 SLOAD PUSH2 0x2E19 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x226C DUP2 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x2288 DUP5 DUP3 SLOAD PUSH2 0x2E19 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20776F756C642061666665637420736F6C76656E6379 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E74207374616B65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3E8 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2390 PUSH2 0x2C26 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x23D0 JUMPI PUSH2 0x1749 DUP6 PUSH2 0x173D DUP2 DUP8 SUB DUP3 PUSH2 0x2B83 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x23B9 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH2 0x240C DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP5 ADD SLOAD SWAP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2476 PUSH2 0x2C26 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x80 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x20 PUSH2 0x3DE PUSH2 0x24CF PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x2E39 JUMP JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x25C JUMPI PUSH2 0x2507 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x251E DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x25C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25C JUMPI PUSH2 0x256B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2BA5 JUMP JUMPDEST PUSH2 0x2573 PUSH2 0x30B9 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x2B23 JUMPI JUMPDEST ISZERO PUSH2 0x2AEA JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x259F DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH2 0x2AB1 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2A78 JUMPI PUSH1 0x5 DUP2 ADD SLOAD TIMESTAMP GT PUSH2 0x2A42 JUMPI DUP4 ISZERO PUSH2 0x29FD JUMPI PUSH1 0x2 ADD SLOAD DUP4 GT PUSH2 0x29BF JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH2 0x25ED DUP3 PUSH2 0x2DC3 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH3 0x93A80 TIMESTAMP ADD SWAP1 DUP2 TIMESTAMP GT PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x260B DUP3 PUSH2 0x2B2E JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP6 DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 DUP9 DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0xA0 DUP7 ADD SWAP7 DUP8 MSTORE PUSH1 0xC0 DUP7 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0xE0 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP8 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x2655 DUP11 DUP7 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 MSTORE PUSH2 0x100 DUP11 ADD SWAP6 DUP7 MSTORE PUSH2 0x120 DUP11 ADD DUP2 DUP2 MSTORE PUSH2 0x140 DUP12 ADD DUP3 DUP2 MSTORE PUSH2 0x160 DUP13 ADD DUP4 DUP2 MSTORE DUP15 DUP5 MSTORE PUSH1 0x6 DUP1 DUP16 MSTORE PUSH1 0x40 SWAP1 SWAP5 KECCAK256 SWAP13 MLOAD DUP14 SSTORE SWAP11 MLOAD PUSH1 0x1 DUP14 ADD SSTORE SWAP9 MLOAD PUSH1 0x2 DUP13 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP7 MLOAD PUSH1 0x3 DUP12 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 DUP11 ADD SSTORE SWAP1 MLOAD PUSH1 0x5 DUP10 ADD SSTORE SWAP1 MLOAD SWAP1 DUP8 ADD SWAP1 PUSH2 0x26DA DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH2 0x26E3 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x7 DUP7 ADD SWAP1 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF2D JUMPI DUP2 SWAP1 PUSH2 0x2713 DUP5 SLOAD PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x296E JUMPI JUMPDEST POP DUP10 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2909 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x28FE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD DUP1 MLOAD PUSH1 0x8 DUP7 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF2D JUMPI PUSH2 0x2768 DUP4 SLOAD PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x28B8 JUMPI JUMPDEST POP DUP8 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2829 JUMPI SWAP2 DUP1 PUSH1 0xB SWAP7 SWAP5 SWAP3 PUSH32 0x3A30D1C4069E097873E77443DF9683E8DE5C7BA3674315B8670A0211E3130195 SWAP11 SWAP10 SWAP9 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x281E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH1 0x9 DUP6 ADD SSTORE MLOAD PUSH1 0xA DUP5 ADD SSTORE MLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x280F SWAP1 DUP5 SWAP1 PUSH2 0x2DDF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE CALLER SWAP5 LOG4 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0x27B4 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x28A1 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH32 0x3A30D1C4069E097873E77443DF9683E8DE5C7BA3674315B8670A0211E3130195 SWAP13 SWAP12 SWAP11 SWAP9 SWAP7 PUSH1 0xB SWAP11 SWAP9 SWAP7 LT PUSH2 0x2888 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x27C9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x287B JUMP JUMPDEST SWAP3 SWAP4 DUP12 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x283C JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP11 DUP6 LT PUSH2 0x28F4 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x28E8 JUMPI POP PUSH2 0x2771 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28DB JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE DUP12 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP13 DUP3 DUP3 LT PUSH2 0x2958 JUMPI POP POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x293F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2747 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x291A JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP12 DUP6 LT PUSH2 0x29B5 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x29A6 JUMPI POP PUSH2 0x271C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x2999 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436C61696D206578636565647320636F766572616765 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20616D6F756E74206D75737420626520706F736974697665000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x141BDB1A58DE48195E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA103837B634B1BC903437B63232B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x506F6C696379206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C1BDB1A58DE481251 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x257C JUMP JUMPDEST PUSH2 0x180 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF2D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF2D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF2D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF2D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x25C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2BDA PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x2B83 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x25C JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x2C06 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x2C06 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x25C JUMPI JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2C60 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2C53 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2CA2 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x2C81 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2CCF JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2D15 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2CFF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2CF4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2D33 DUP5 PUSH2 0x2CE5 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2DA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2D5A JUMPI JUMPDEST POP PUSH2 0x2D58 SWAP3 POP SUB DUP4 PUSH2 0x2B83 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2D85 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x2D58 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x2D4B JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2D6C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x2D58 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x2D4B JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xF88 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xF88 JUMPI JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xF2D JUMPI PUSH2 0x2E01 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2CB7 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xF88 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xF88 JUMPI JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2E5B DUP3 PUSH2 0x2B67 JUMP JUMPDEST DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 PUSH1 0x40 DUP6 ADD SWAP4 DUP3 DUP6 MSTORE ADD SLOAD SWAP2 DUP3 PUSH1 0x60 DUP7 ADD MSTORE ISZERO PUSH2 0x2ECB JUMPI POP PUSH2 0x2E92 SWAP1 TIMESTAMP PUSH2 0x2E19 JUMP JUMPDEST SWAP2 MLOAD SWAP2 PUSH2 0x3E8 DUP4 MUL SWAP3 DUP1 DUP5 DIV PUSH2 0x3E8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xF88 JUMPI PUSH2 0x2EC0 PUSH4 0x1E13380 SWAP2 PUSH2 0x2710 PUSH2 0x2EC8 SWAP6 DIV PUSH2 0x2E26 JUMP JUMPDEST DIV SWAP1 MLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2ED9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A590818DB185A5B481251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2F18 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x436C61696D206E6F742070656E64696E67 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2F58 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420696E76657374696761746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2FE4 SWAP3 SWAP2 PUSH5 0x496CEBB800 SWAP5 PUSH2 0x2FDF SWAP3 PUSH2 0x2FB6 DUP2 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x2FCD DUP2 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH2 0x2E26 JUMP JUMPDEST PUSH2 0x2E26 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x2FF8 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3029 PUSH1 0x1 SWAP2 PUSH2 0x3008 DUP5 PUSH2 0x2BFC JUMP JUMPDEST PUSH2 0x3011 DUP5 PUSH2 0x2BFC JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x2DD2 JUMP JUMPDEST SWAP2 ADD PUSH2 0x2FEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x3045 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x3063 DUP2 PUSH2 0x2C1C JUMP JUMPDEST ISZERO DUP1 PUSH2 0x309E JUMPI JUMPDEST PUSH2 0x3077 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x3039 JUMP JUMPDEST SWAP2 PUSH2 0x3096 PUSH1 0x1 SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x2DD2 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x306F JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x306A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x30CA JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x3146 JUMPI PUSH1 0x3 DUP2 ADD SWAP2 PUSH2 0x310B DUP4 SLOAD TIMESTAMP PUSH2 0x2E19 JUMP JUMPDEST SWAP1 PUSH2 0x3E8 DUP2 MUL SWAP1 DUP2 DIV PUSH2 0x3E8 SUB PUSH2 0xF88 JUMPI PUSH4 0x1E13380 PUSH2 0x3134 PUSH2 0x313F SWAP4 PUSH2 0x2710 PUSH1 0x2 SWAP5 DIV PUSH2 0x2E26 JUMP JUMPDEST DIV SWAP3 ADD SWAP2 DUP3 SLOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 SSTORE TIMESTAMP SWAP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x3156 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x317B JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 MCOPY SWAP12 0x28 0xED SIGNEXTEND 0x27 SSTORE SGT PC RETURNDATASIZE 0xF6 0xC1 0xCE 0xF6 PUSH21 0x6495372CD2DA6CBA2BC4FF15E8E0D57964736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "470:22755:4:-:0;;;;;;;;;-1:-1:-1;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;470:22755:4;;;;;20424:17;470:22755;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;470:22755:4;2627:22:0;;2623:91;;470:22755:4;;;-1:-1:-1;;;;;;470:22755:4;;;;;;-1:-1:-1;;;;;470:22755:4;;3052:40:0;;470:22755:4;3052:40:0;470:22755:4;2623:91:0;2672:31;;;470:22755:4;2672:31:0;470:22755:4;;;;;2672:31:0;470:22755:4;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;;;;;1500:62:0;;:::i;:::-;470:22755:4;;;:::i;:::-;;;;21233:14;470:22755;;;;;;;21233:28;470:22755;;21232:29;470:22755;;;;:::i;:::-;;;21233:14;470:22755;;;;;;21201:28;470:22755;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;470:22755:4;;;;;19769:23;470:22755;;;;;;;-1:-1:-1;;470:22755:4;;;;;19830:32;;470:22755;19830:32;470:22755;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;-1:-1:-1;;;;;470:22755:4;;:::i;:::-;;;;2624:55;470:22755;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;470:22755:4;;;;;20210:17;470:22755;;;;;;;-1:-1:-1;;470:22755:4;;;;;20259:20;;470:22755;20259:20;470:22755;;;;;;;-1:-1:-1;;470:22755:4;;;;1500:62:0;;:::i;:::-;470:22755:4;;;;;;;;;23037:21;;-1:-1:-1;;;;;470:22755:4;;23011:48;;;;470:22755;23011:48;;;;470:22755;23011:48;470:22755;;;;;;;;;23011:48;;;;;470:22755;;;;;;-1:-1:-1;;470:22755:4;;;;;;2466:103:3;;:::i;:::-;7020:12:4;;;:38;;;470:22755;7012:67;;;:::i;:::-;470:22755;;;12578:6;470:22755;;;;;12613:12;12578:6;12613:12;;470:22755;;;;12629:20;470:22755;;;;;;:::i;:::-;12613:36;470:22755;;;12726:14;;470:22755;;;;;;;;;;;12796:20;;470:22755;;;;;;;:::i;:::-;;;12781:14;470:22755;;;;;12846:19;12629:20;12846:19;;470:22755;;;12869:20;;;;470:22755;;;-1:-1:-1;470:22755:4;;;12629:20;470:22755;;;;;;;13031:15;12781:14;13012:16;;470:22755;13093:18;;;:20;470:22755;;13093:20;:::i;:::-;470:22755;;13124:48;12869:20;470:22755;;13124:24;;470:22755;;;13124:48;:::i;:::-;470:22755;;13217:43;470:22755;;;;13217:43;:::i;:::-;470:22755;;13271:40;470:22755;;;13271:16;;470:22755;;;13271:40;:::i;:::-;470:22755;;13369:14;470:22755;;;;;;;;;;;;;;13361:54;;;;;;470:22755;13361:54;;;;470:22755;13441:57;470:22755;;;;;;;;;;;;;;;;13441:57;470:22755;;;;13361:54;;;;;470:22755;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;7020:38;-1:-1:-1;470:22755:4;;7036:22;;7020:38;;470:22755;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;2301:42;470:22755;;;;;;;;2301:42;;470:22755;;;;;;;;2301:42;;;470:22755;2301:42;;;470:22755;;2301:42;;470:22755;2301:42;;;470:22755;2301:42;;;470:22755;;;;;;;;;;2301:42;;;;;;:::i;:::-;;;470:22755;2301:42;;470:22755;2301:42;;470:22755;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;6516:10;470:22755;;6492:23;470:22755;;6484:75;470:22755;;;;;;6484:75;:::i;:::-;7020:12;;;:38;;;470:22755;7012:67;;;:::i;:::-;470:22755;;;22508:6;470:22755;;;;;22559:20;470:22755;22508:6;22543:12;;470:22755;;;;;:::i;:::-;22543:36;470:22755;;22853:14;;470:22755;-1:-1:-1;;;;;470:22755:4;;22829:39;470:22755;;22829:39;470:22755;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;7020:38;-1:-1:-1;470:22755:4;;7036:22;;7020:38;;470:22755;;;;;;-1:-1:-1;;470:22755:4;;;;;;:::i;:::-;-1:-1:-1;;;;;470:22755:4;;;;;2452:47;470:22755;;;;;;;;;;;2452:47;;;;;470:22755;2452:47;;;;:::i;:::-;470:22755;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;17972:6;470:22755;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;2350:39;470:22755;;;;;;;;2350:39;470:22755;2350:39;;470:22755;;;;;;2350:39;;;470:22755;;2350:39;470:22755;2350:39;;;470:22755;;;2350:39;;470:22755;2350:39;;;470:22755;;2350:39;;;470:22755;;2350:39;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;470:22755;2350:39;;;;470:22755;;2350:39;470:22755;;;;;2350:39;;470:22755;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2466:103:3;;;:::i;:::-;1315:72:2;;:::i;:::-;7489:19:4;;470:22755;;7577:7;7564:20;;470:22755;;7648:8;7635:21;;470:22755;;;;;:::i;:::-;;;;7708:14;470:22755;;;;;;;7708:37;470:22755;;;;;7850:72;;;;;;:::i;:::-;7941:9;;;:26;470:22755;;;;;:::i;:::-;;;;7708:14;470:22755;;8076:45;470:22755;;;8076:45;470:22755;2950:2;470:22755;;;;;;2950:2;470:22755;;;;;;;;;;8168:30;;470:22755;;8622:27;470:22755;8299:14;470:22755;8299:14;;;;;;:::i;:::-;;470:22755;8583:15;8622:27;:::i;:::-;470:22755;;;;;;;:::i;:::-;;;;;8345:498;;8414:10;;470:22755;;;8345:498;;470:22755;;;;:::i;:::-;;;;;8345:498;;470:22755;;;;8345:498;;470:22755;;;;8345:498;;8583:15;;470:22755;;8345:498;;;470:22755;;;;8345:498;;470:22755;;;;8345:498;;;470:22755;;;;:::i;:::-;;;8345:498;;;470:22755;;;;8345:498;;;470:22755;;;8345:498;;;470:22755;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;470:22755:4;-1:-1:-1;;;;;470:22755:4;;;;;;;;;;;;8345:498;;470:22755;;;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;;;;470:22755:4;;;;;;-1:-1:-1;;;470:22755:4;;;;;8076:45;470:22755;;;;8299:14;470:22755;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8299:14;470:22755;;;;;;;;;;;;;;;;;8414:10;470:22755;;;;;8864:39;470:22755;;;;8864:39;:::i;:::-;470:22755;;;:::i;:::-;;;;7708:14;470:22755;;8076:45;470:22755;;;8966:45;:62;470:22755;;;8966:62;:::i;:::-;470:22755;;7941:9;;9087:25;9083:113;;470:22755;;;;;;;:::i;:::-;;;;;;;8414:10;9221:68;470:22755;8414:10;9221:68;;470:22755;;;;;9305:48;470:22755;8414:10;9305:48;;470:22755;;;;9083:113;470:22755;7941:9;;;9158:25;7941:9;;9158:25;:::i;:::-;9129:55;;;;;9083:113;8414:10;9129:55;;9083:113;9129:55;470:22755;;;;;;;;;9129:55;;;;;470:22755;;;;-1:-1:-1;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8299:14;470:22755;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;470:22755:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;-1:-1:-1;;;;;470:22755:4;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6516:10;470:22755;;6492:23;470:22755;;6484:75;470:22755;;;;;;6484:75;:::i;:::-;7020:12;;;:38;;;470:22755;7012:67;;;:::i;:::-;470:22755;;;11474:6;470:22755;;;;;11509:12;11474:6;11509:12;;470:22755;11501:65;470:22755;;;;;;;:::i;:::-;11509:35;11501:65;:::i;:::-;470:22755;11604:27;;470:22755;11585:15;:46;470:22755;;;;;:::i;:::-;11696:20;11683:33;;;:70;;;;470:22755;;;;;;;:::i;:::-;11799:33;;;11857:19;;;;:59;;;11795:474;470:22755;;;6492:23;11959:20;;;;470:22755;11696:20;470:22755;;;;;;;;11795:474;12289:18;470:22755;;-1:-1:-1;;;;;;470:22755:4;6516:10;470:22755;;;;;;;;;:::i;:::-;;;12346:50;470:22755;6516:10;12346:50;;470:22755;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;11857:59;11899:17;;;;470:22755;11880:36;;;11857:59;;11795:474;470:22755;;;;;;12088:34;470:22755;;12167:21;;;470:22755;;;;;;;;;;;:::i;:::-;;;;;;11795:474;470:22755;;;;;;;;;;;6492:23;470:22755;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;12237:20;470:22755;;;11795:474;;470:22755;;;;-1:-1:-1;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;;;6492:23;470:22755;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;470:22755:4;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;11683:70;470:22755;;;;:::i;:::-;11733:20;11720:33;;11683:70;;470:22755;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;7020:38;-1:-1:-1;470:22755:4;;7036:22;;7020:38;;470:22755;;;;;;-1:-1:-1;;470:22755:4;;;;1500:62:0;;:::i;:::-;1315:72:2;;:::i;:::-;2408:4;470:22755:4;;2398:14:2;470:22755:4;;;2398:14:2;470:22755:4;2427:20:2;470:22755:4;;;735:10:1;470:22755:4;;2427:20:2;470:22755:4;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;2950:2;470:22755;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;6650:10;470:22755;;6632:17;470:22755;;;;;;;;;;;7020:12;;;:38;;;470:22755;7012:67;;;:::i;:::-;470:22755;;;21751:6;470:22755;;;;;21751:6;21786:12;;470:22755;;;;21778:65;470:22755;;;;;;:::i;21778:65::-;21881:17;;;470:22755;21862:36;;470:22755;;21970:10;21951:29;;470:22755;;-1:-1:-1;;470:22755:4;;;22070:20;470:22755;;;;;;22101:20;;;470:22755;22150:18;;470:22755;;-1:-1:-1;;;;;;470:22755:4;6650:10;470:22755;;;;;;;;;;;6650:10;470:22755;22207:61;;470:22755;;22207:61;470:22755;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;7020:38;-1:-1:-1;470:22755:4;;7036:22;;7020:38;;470:22755;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;-1:-1:-1;;;;;470:22755:4;;:::i;:::-;;;;17784:10;470:22755;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;;:::i;:::-;20691:4:4;20682:13;;470:22755;;;;;:::i;:::-;;;20733:12;470:22755;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;18179:14;470:22755;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;1500:62:0;;:::i;:::-;470:22755:4;;;-1:-1:-1;;;;;;470:22755:4;;;;-1:-1:-1;;;;;470:22755:4;3052:40:0;470:22755:4;;3052:40:0;470:22755:4;;;;;;;-1:-1:-1;;470:22755:4;;;;-1:-1:-1;;;;;470:22755:4;;:::i;:::-;;;;2686:49;470:22755;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;2813:6;470:22755;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;1796:7:2;470:22755:4;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17413:6;470:22755;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17413:6;470:22755;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;470:22755:4;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;470:22755:4;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;;;;;;;1500:62:0;;;:::i;:::-;20955:4:4;20946:13;;470:22755;;;;;:::i;:::-;;;20997:14;470:22755;;20997:32;470:22755;;;20997:32;470:22755;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;470:22755:4;;;;;20025:23;470:22755;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;1500:62:0;;:::i;:::-;1796:7:2;470:22755:4;;;;2140:9:2;2136:62;;470:22755:4;;;1796:7:2;470:22755:4;2674:22:2;470:22755:4;;;735:10:1;470:22755:4;;2674:22:2;470:22755:4;2136:62:2;2172:15;;;470:22755:4;2172:15:2;470:22755:4;;2172:15:2;470:22755:4;;;;;;-1:-1:-1;;470:22755:4;;;;;;:::i;:::-;-1:-1:-1;;;;;470:22755:4;;;;;2396:49;470:22755;;;;;;;;;;;2396:49;;;;;470:22755;2396:49;;;;:::i;470:22755::-;;;-1:-1:-1;;470:22755:4;;;;2466:103:3;;:::i;:::-;1315:72:2;;:::i;:::-;2869:9:4;13693;:29;470:22755;;13813:10;470:22755;;13806:6;470:22755;;;;;;;13895:78;;470:22755;13993:29;13693:9;470:22755;;13993:29;:::i;:::-;470:22755;;14057:15;14033:21;;;470:22755;14083:26;14057:15;14083:26;;470:22755;14244:1;13693:9;470:22755;;14273:5;14244:1;14273:5;;;;470:22755;;13693:9;470:22755;;14586:37;470:22755;13813:10;14586:37;;14033:21;470:22755;;;14280:3;470:22755;;14033:21;470:22755;;:::i;:::-;;;;:::i;:::-;;;;14359:14;470:22755;;;;;;;14359:30;470:22755;;14355:195;;14280:3;470:22755;14261:10;;14355:195;470:22755;;;:::i;:::-;;;;14359:14;470:22755;;;;;14410:51;470:22755;;;14410:51;:::i;:::-;470:22755;;;;;:::i;:::-;;;;14359:14;470:22755;;14480:38;470:22755;;;14480:38;:54;470:22755;;;14480:54;:::i;:::-;470:22755;;14355:195;;13895:78;13950:10;13813;13950;:::i;:::-;13895:78;;470:22755;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;2466:103:3;;:::i;:::-;16105:10:4;;;:::i;:::-;;470:22755;;16167:6;470:22755;;16214:23;470:22755;;;16214:23;470:22755;;16256:11;;;470:22755;;;;;;16105:10;;;;;16360:37;;;;;470:22755;;;;;16423:35;470:22755;16105:10;16423:35;;1857:1:3;470:22755:4;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17234:8;470:22755;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17234:8;470:22755;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;2869:9;470:22755;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;2466:103:3;;:::i;:::-;14799:10:4;470:22755;;14792:6;470:22755;;;;;;;;14829:27;470:22755;;14898:11;;470:22755;;15017:10;14799;15017;:::i;:::-;15128:19;;:::i;:::-;15225:24;15182;;;:::i;:::-;15225;;:::i;:::-;470:22755;2950:2;470:22755;;;;;;2950:2;470:22755;;;;;;;15292:3;470:22755;;-1:-1:-1;470:22755:4;;15353:27;470:22755;;;15353:27;:::i;:::-;470:22755;;15490:1;470:22755;;;15519:5;15490:1;15519:5;;;;14799:10;470:22755;14799:10;;;;;15863:37;;;;;470:22755;;;;;15926:35;470:22755;14799:10;15926:35;;470:22755;;;;15526:3;470:22755;;;;;:::i;:::-;;;;:::i;:::-;;;;15605:14;470:22755;;;;;;;15605:56;;15601:231;;15526:3;470:22755;15507:10;;15601:231;470:22755;;;:::i;:::-;;;;15605:14;470:22755;;;;;15682:56;470:22755;;;15682:56;:::i;:::-;470:22755;;;;;:::i;:::-;;;;15605:14;470:22755;;15757:38;470:22755;;;15757:38;:59;470:22755;;;15757:59;:::i;:::-;470:22755;;15601:231;;470:22755;15292:3;470:22755;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;3039:4;470:22755;;;;;;;;;-1:-1:-1;;470:22755:4;;;;-1:-1:-1;;;;;470:22755:4;;:::i;:::-;;;;17599:12;470:22755;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;;;;;;;;:::i;:::-;;;2556:61;470:22755;;;;;;;;2556:61;;;;470:22755;2556:61;;;;470:22755;;;2556:61;;;470:22755;2556:61;;470:22755;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;-1:-1:-1;;;;;470:22755:4;;:::i;:::-;;;;2506:43;470:22755;;;;;;;;2506:43;;;;470:22755;2506:43;;;;;470:22755;2506:43;;470:22755;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3137:75;470:22755;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2466:103:3;;:::i;:::-;6778:13:4;;;:41;;;470:22755;;;;;;;6860:8;470:22755;;;6860:26;470:22755;;;6860:26;470:22755;;;;;:::i;:::-;;;;;;;6860:8;470:22755;;;;;;10141:19;;470:22755;-1:-1:-1;;;;;470:22755:4;10127:10;:33;470:22755;;6860:8;10220:14;;470:22755;10201:15;:33;470:22755;;10272:16;;470:22755;;10357:21;;470:22755;10341:37;;470:22755;;;;10444:13;;;;:::i;:::-;470:22755;;2813:6;10201:15;470:22755;10201:15;;;470:22755;;;;;;;;;:::i;:::-;;;;;10486:495;;470:22755;;;;;10486:495;;10127:10;;470:22755;;;10486:495;;470:22755;;;;10486:495;;;10201:15;;470:22755;;10486:495;;;470:22755;;;10486:495;;;470:22755;;;;10486:495;;470:22755;;;;;;;;;;;;:::i;:::-;;;;;10486:495;;;470:22755;;;10486:495;;;470:22755;;;10486:495;;;470:22755;;;10486:495;;;470:22755;;;;;;6860:26;470:22755;;;;;;;;;;;;;;;;;;;10357:21;470:22755;;;;-1:-1:-1;;;;;;470:22755:4;-1:-1:-1;;;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;6860:8;470:22755;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11064:60;470:22755;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;470:22755:4;-1:-1:-1;;;;;470:22755:4;;;;;;;;;;10127:10;-1:-1:-1;470:22755:4;;;;;;;;;11002:36;;470:22755;;11002:36;:::i;:::-;470:22755;;;;;10127:10;11064:60;;470:22755;;;;;;;;-1:-1:-1;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11064:60;470:22755;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6860:8;470:22755;;;;;;;;;;;;6860:8;470:22755;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;470:22755:4;;;;;;;;-1:-1:-1;470:22755:4;;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6860:8;470:22755;;;;;;;;;;;;;;;;;6860:8;470:22755;;;;;;;;;;;;;;;;;;-1:-1:-1;470:22755:4;;;;;;;-1:-1:-1;470:22755:4;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;6778:41;470:22755;6807:12;470:22755;6795:24;;6778:41;;470:22755;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;470:22755:4;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;470:22755:4;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;470:22755:4;;;:::o;:::-;;;;-1:-1:-1;;;;;470:22755:4;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;470:22755:4;;-1:-1:-1;470:22755:4;;;-1:-1:-1;470:22755:4;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;470:22755:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;470:22755:4;;;;;-1:-1:-1;470:22755:4;;-1:-1:-1;470:22755:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;470:22755:4;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;19071:519::-;470:22755;;;;;;;;19193:6;470:22755;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19223:21;19219:57;;19319:15;:44;:15;;:44;:::i;:::-;470:22755;;;19417:4;470:22755;;;;;;19417:4;470:22755;;;;;;;19481:26;19511:8;470:22755;19425:5;19547:35;470:22755;;19481:26;:::i;:::-;470:22755;;;19547:35;:::i;:::-;19071:519;:::o;19219:57::-;19246:30;;;;;:::o;470:22755::-;;;;:::o;:::-;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;470:22755:4;;;;;;;;;;;;;;;;;;;;9435:392;9732:40;9435:392;;9777:16;9435:392;9732:28;9435:392;470:22755;;;:::i;:::-;-1:-1:-1;470:22755:4;9662:12;470:22755;;;-1:-1:-1;470:22755:4;;;;;:::i;:::-;-1:-1:-1;470:22755:4;;;;-1:-1:-1;470:22755:4;;9732:28;;:::i;:::-;:40;:::i;:::-;470:22755;9435:392;:::o;18299:240::-;18385:1;;18414:5;18418:1;18414:5;;;;18519:12;18299:240;:::o;18421:3::-;470:22755;18441:56;470:22755;;;;;:::i;:::-;;;;:::i;:::-;;18385:1;470:22755;18450:14;470:22755;;18450:47;470:22755;18385:1;470:22755;18450:47;470:22755;18441:56;;:::i;:::-;18421:3;470:22755;18402:10;;18628:361;18719:1;18748;18755:12;470:22755;18731:228;18751:16;;;;;;18969:12;;18628:361;:::o;18769:3::-;470:22755;18719:1;470:22755;18793:8;470:22755;;;18793:18;470:22755;18719:1;470:22755;18793:18;470:22755;;;;;:::i;:::-;18793:41;:83;;;18769:3;18789:159;;18769:3;18748:1;470:22755;18736:13;;18789:159;470:22755;18897:35;18748:1;470:22755;;18719:1;470:22755;18793:8;470:22755;;18906:26;470:22755;18719:1;470:22755;18906:26;470:22755;18897:35;;:::i;:::-;18789:159;;;;;18793:83;470:22755;;18719:1;470:22755;18793:8;470:22755;;18793:8;470:22755;18719:1;470:22755;18857:19;470:22755;18838:15;:38;;18793:83;;2575:307:3;1899:1;2702:7;470:22755:4;2702:18:3;2698:86;;1899:1;2702:7;470:22755:4;2575:307:3:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:3;;-1:-1:-1;2743:30:3;16543:506:4;-1:-1:-1;;;;;470:22755:4;-1:-1:-1;470:22755:4;;;16633:6;470:22755;;;;;;;;16663:21;;16659:34;;16753:26;;;470:22755;16735:44;470:22755;;16735:15;:44;:::i;:::-;470:22755;16833:4;470:22755;;;;;16833:4;470:22755;;;16924:8;16894:26;16953:33;470:22755;16841:5;16953:23;470:22755;;16894:26;:::i;:::-;470:22755;16953:23;;470:22755;;;16953:33;:::i;:::-;470:22755;;16735:15;470:22755;;16543:506::o;16659:34::-;16686:7;;:::o;1878:128:2:-;470:22755:4;1796:7:2;470:22755:4;;1939:61:2;;1878:128::o;1939:61::-;1974:15;;;-1:-1:-1;1974:15:2;;-1:-1:-1;1974:15:2;1796:162:0;1710:6;470:22755:4;-1:-1:-1;;;;;470:22755:4;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:1;1901:40:0;470:22755:4;;1710:6:0;1901:40"
            },
            "methodIdentifiers": {
              "FRAUD_PENALTY()": "238dcf88",
              "INVESTIGATION_PERIOD()": "5edcc348",
              "MAX_COVERAGE_RATIO()": "82670986",
              "MIN_STAKE_AMOUNT()": "27ed7188",
              "addInvestigator(address)": "e5078ed7",
              "addOracle(address)": "df5dd1a5",
              "authorizedInvestigators(address)": "df9e9de8",
              "authorizedOracles(address)": "61c992a3",
              "calculatePendingRewards(address)": "097aad10",
              "calculatePremium(uint8,uint256,uint256,uint8)": "9f169273",
              "claimRewards()": "372500ab",
              "claims(uint256)": "a888c2cd",
              "createPolicy(uint8,uint256,uint256,uint8,string)": "991c6cfc",
              "emergencyWithdraw()": "db2e21bc",
              "getClaim(uint256)": "5aef2447",
              "getInsurancePool(uint8)": "7a1419a1",
              "getPolicy(uint256)": "2b07fce3",
              "getStakeInfo(address)": "c3453153",
              "getTotalActiveCoverage()": "e1c8b86f",
              "getTotalPoolFunds()": "b31ef5bb",
              "getUserClaims(address)": "7bcb4a64",
              "getUserPolicies(address)": "19ac4614",
              "insurancePools(uint8)": "1988a684",
              "investigateClaim(uint256,uint8,uint256,string)": "8606f9a5",
              "oracleApproveClaim(uint256,uint256)": "80ef3183",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "payClaim(uint256)": "d70356cc",
              "policies(uint256)": "d3e89483",
              "premiumRates(uint8,uint8)": "07efa984",
              "removeInvestigator(address)": "4c5e3e85",
              "removeOracle(address)": "fdc85fc4",
              "renounceOwnership()": "715018a6",
              "reportFraud(uint256)": "cab3990f",
              "stake()": "3a4b66f1",
              "stakes(address)": "16934fc4",
              "submitClaim(uint256,uint256,string)": "06964de7",
              "togglePoolStatus(uint8)": "eebcb0a9",
              "transferOwnership(address)": "f2fde38b",
              "unpause()": "3f4ba83a",
              "updatePoolRewardRate(uint8,uint256)": "53f49834",
              "updatePremiumRate(uint8,uint8,uint256)": "7b73ba67",
              "userClaims(address,uint256)": "ca9748ea",
              "userPolicies(address,uint256)": "3d36adc5",
              "withdrawStake(uint256)": "25d5971f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investigator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum DecentralizedInsurance.ClaimStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"ClaimInvestigated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"name\":\"FraudDetected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investigator\",\"type\":\"address\"}],\"name\":\"InvestigatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"OracleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum DecentralizedInsurance.InsuranceType\",\"name\":\"insuranceType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coverageAmount\",\"type\":\"uint256\"}],\"name\":\"PolicyCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PremiumPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FRAUD_PENALTY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INVESTIGATION_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_COVERAGE_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_STAKE_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_investigator\",\"type\":\"address\"}],\"name\":\"addInvestigator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"addOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedInvestigators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedOracles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"calculatePendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DecentralizedInsurance.InsuranceType\",\"name\":\"_insuranceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_coverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"enum DecentralizedInsurance.RiskLevel\",\"name\":\"_riskLevel\",\"type\":\"uint8\"}],\"name\":\"calculatePremium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"submissionDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investigationDeadline\",\"type\":\"uint256\"},{\"internalType\":\"enum DecentralizedInsurance.ClaimStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"evidenceURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rejectionReason\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"approvedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payoutDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"investigator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DecentralizedInsurance.InsuranceType\",\"name\":\"_insuranceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_coverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"enum DecentralizedInsurance.RiskLevel\",\"name\":\"_riskLevel\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"}],\"name\":\"createPolicy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"}],\"name\":\"getClaim\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"submissionDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investigationDeadline\",\"type\":\"uint256\"},{\"internalType\":\"enum DecentralizedInsurance.ClaimStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"evidenceURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rejectionReason\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"approvedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payoutDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"investigator\",\"type\":\"address\"}],\"internalType\":\"struct DecentralizedInsurance.Claim\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DecentralizedInsurance.InsuranceType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"getInsurancePool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaims\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct DecentralizedInsurance.InsurancePool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"}],\"name\":\"getPolicy\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"internalType\":\"enum DecentralizedInsurance.InsuranceType\",\"name\":\"insuranceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"coverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"enum DecentralizedInsurance.PolicyStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"enum DecentralizedInsurance.RiskLevel\",\"name\":\"riskLevel\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"claimsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimsAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct DecentralizedInsurance.Policy\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardsEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardUpdate\",\"type\":\"uint256\"}],\"internalType\":\"struct DecentralizedInsurance.StakeInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalActiveCoverage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPoolFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserClaims\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserPolicies\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DecentralizedInsurance.InsuranceType\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"insurancePools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaims\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"},{\"internalType\":\"enum DecentralizedInsurance.ClaimStatus\",\"name\":\"_decision\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_approvedAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_rejectionReason\",\"type\":\"string\"}],\"name\":\"investigateClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_approvedAmount\",\"type\":\"uint256\"}],\"name\":\"oracleApproveClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"}],\"name\":\"payClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"policies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"internalType\":\"enum DecentralizedInsurance.InsuranceType\",\"name\":\"insuranceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"coverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"enum DecentralizedInsurance.PolicyStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"enum DecentralizedInsurance.RiskLevel\",\"name\":\"riskLevel\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"claimsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimsAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DecentralizedInsurance.InsuranceType\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"enum DecentralizedInsurance.RiskLevel\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"premiumRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_investigator\",\"type\":\"address\"}],\"name\":\"removeInvestigator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"removeOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"}],\"name\":\"reportFraud\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardsEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardUpdate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_claimAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_evidenceURI\",\"type\":\"string\"}],\"name\":\"submitClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DecentralizedInsurance.InsuranceType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"togglePoolStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DecentralizedInsurance.InsuranceType\",\"name\":\"_type\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"updatePoolRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DecentralizedInsurance.InsuranceType\",\"name\":\"_type\",\"type\":\"uint8\"},{\"internalType\":\"enum DecentralizedInsurance.RiskLevel\",\"name\":\"_risk\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"updatePremiumRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userClaims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userPolicies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A comprehensive decentralized insurance platform supporting multiple coverage types Features: Premium calculation, claims processing, staking pools, governance, and fraud detection\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addInvestigator(address)\":{\"details\":\"Add authorized investigator\"},\"addOracle(address)\":{\"details\":\"Add authorized oracle\"},\"calculatePendingRewards(address)\":{\"details\":\"Calculate pending rewards for a staker\"},\"calculatePremium(uint8,uint256,uint256,uint8)\":{\"details\":\"Calculate premium for a policy\"},\"claimRewards()\":{\"details\":\"Claim staking rewards\"},\"createPolicy(uint8,uint256,uint256,uint8,string)\":{\"details\":\"Create a new insurance policy\"},\"getClaim(uint256)\":{\"details\":\"Get claim details\"},\"getInsurancePool(uint8)\":{\"details\":\"Get insurance pool information\"},\"getPolicy(uint256)\":{\"details\":\"Get policy details\"},\"getStakeInfo(address)\":{\"details\":\"Get stake information\"},\"getTotalActiveCoverage()\":{\"details\":\"Get total active coverage across all policies\"},\"getTotalPoolFunds()\":{\"details\":\"Get total pool funds across all insurance types\"},\"getUserClaims(address)\":{\"details\":\"Get user's claims\"},\"getUserPolicies(address)\":{\"details\":\"Get user's policies\"},\"investigateClaim(uint256,uint8,uint256,string)\":{\"details\":\"Investigate a claim (only authorized investigators)\"},\"oracleApproveClaim(uint256,uint256)\":{\"details\":\"Oracle function to automatically approve small claims\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Emergency pause\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"payClaim(uint256)\":{\"details\":\"Pay approved claim\"},\"removeInvestigator(address)\":{\"details\":\"Remove authorized investigator\"},\"removeOracle(address)\":{\"details\":\"Remove authorized oracle\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"reportFraud(uint256)\":{\"details\":\"Report fraud (reduces claimant's future coverage and applies penalty)\"},\"stake()\":{\"details\":\"Stake CELO to provide liquidity\"},\"submitClaim(uint256,uint256,string)\":{\"details\":\"Submit a claim\"},\"togglePoolStatus(uint8)\":{\"details\":\"Toggle insurance pool active status\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpause\"},\"updatePoolRewardRate(uint8,uint256)\":{\"details\":\"Update pool reward rate\"},\"updatePremiumRate(uint8,uint8,uint256)\":{\"details\":\"Update premium rates\"},\"withdrawStake(uint256)\":{\"details\":\"Withdraw stake\"}},\"title\":\"DecentralizedInsurance\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DecentralizedInsurance.sol\":\"DecentralizedInsurance\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/DecentralizedInsurance.sol\":{\"keccak256\":\"0x7ef3c8713964917852272bf661399faf86080f6565273fa9b10800a60617d3da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66ec5e7c5e064c6d87ae4b2bcac5200cd2d282c30b818cfcdfec5fa1dd3ec1ec\",\"dweb:/ipfs/Qmcs9ePtmtFFPGrd9tie6j1jcjKxddQjKTkEcZK3Dmi1Yd\"]}},\"version\":1}"
        }
      }
    }
  }
}